/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 65.0, "minX": 0.0, "maxY": 41545.0, "series": [{"data": [[0.0, 65.0], [0.1, 65.0], [0.2, 65.0], [0.3, 65.0], [0.4, 65.0], [0.5, 65.0], [0.6, 65.0], [0.7, 65.0], [0.8, 65.0], [0.9, 65.0], [1.0, 69.0], [1.1, 69.0], [1.2, 69.0], [1.3, 69.0], [1.4, 69.0], [1.5, 69.0], [1.6, 69.0], [1.7, 69.0], [1.8, 69.0], [1.9, 69.0], [2.0, 73.0], [2.1, 73.0], [2.2, 73.0], [2.3, 73.0], [2.4, 73.0], [2.5, 73.0], [2.6, 73.0], [2.7, 73.0], [2.8, 73.0], [2.9, 73.0], [3.0, 74.0], [3.1, 74.0], [3.2, 74.0], [3.3, 74.0], [3.4, 74.0], [3.5, 74.0], [3.6, 74.0], [3.7, 74.0], [3.8, 74.0], [3.9, 74.0], [4.0, 77.0], [4.1, 77.0], [4.2, 77.0], [4.3, 77.0], [4.4, 77.0], [4.5, 77.0], [4.6, 77.0], [4.7, 77.0], [4.8, 77.0], [4.9, 77.0], [5.0, 78.0], [5.1, 78.0], [5.2, 78.0], [5.3, 78.0], [5.4, 78.0], [5.5, 78.0], [5.6, 78.0], [5.7, 78.0], [5.8, 78.0], [5.9, 78.0], [6.0, 78.0], [6.1, 78.0], [6.2, 78.0], [6.3, 78.0], [6.4, 78.0], [6.5, 78.0], [6.6, 78.0], [6.7, 78.0], [6.8, 78.0], [6.9, 78.0], [7.0, 81.0], [7.1, 81.0], [7.2, 81.0], [7.3, 81.0], [7.4, 81.0], [7.5, 81.0], [7.6, 81.0], [7.7, 81.0], [7.8, 81.0], [7.9, 81.0], [8.0, 82.0], [8.1, 82.0], [8.2, 82.0], [8.3, 82.0], [8.4, 82.0], [8.5, 82.0], [8.6, 82.0], [8.7, 82.0], [8.8, 82.0], [8.9, 82.0], [9.0, 85.0], [9.1, 85.0], [9.2, 85.0], [9.3, 85.0], [9.4, 85.0], [9.5, 85.0], [9.6, 85.0], [9.7, 85.0], [9.8, 85.0], [9.9, 85.0], [10.0, 86.0], [10.1, 86.0], [10.2, 86.0], [10.3, 86.0], [10.4, 86.0], [10.5, 86.0], [10.6, 86.0], [10.7, 86.0], [10.8, 86.0], [10.9, 86.0], [11.0, 88.0], [11.1, 88.0], [11.2, 88.0], [11.3, 88.0], [11.4, 88.0], [11.5, 88.0], [11.6, 88.0], [11.7, 88.0], [11.8, 88.0], [11.9, 88.0], [12.0, 90.0], [12.1, 90.0], [12.2, 90.0], [12.3, 90.0], [12.4, 90.0], [12.5, 90.0], [12.6, 90.0], [12.7, 90.0], [12.8, 90.0], [12.9, 90.0], [13.0, 91.0], [13.1, 91.0], [13.2, 91.0], [13.3, 91.0], [13.4, 91.0], [13.5, 91.0], [13.6, 91.0], [13.7, 91.0], [13.8, 91.0], [13.9, 91.0], [14.0, 92.0], [14.1, 92.0], [14.2, 92.0], [14.3, 92.0], [14.4, 92.0], [14.5, 92.0], [14.6, 92.0], [14.7, 92.0], [14.8, 92.0], [14.9, 92.0], [15.0, 92.0], [15.1, 92.0], [15.2, 92.0], [15.3, 92.0], [15.4, 92.0], [15.5, 92.0], [15.6, 92.0], [15.7, 92.0], [15.8, 92.0], [15.9, 92.0], [16.0, 96.0], [16.1, 96.0], [16.2, 96.0], [16.3, 96.0], [16.4, 96.0], [16.5, 96.0], [16.6, 96.0], [16.7, 96.0], [16.8, 96.0], [16.9, 96.0], [17.0, 96.0], [17.1, 96.0], [17.2, 96.0], [17.3, 96.0], [17.4, 96.0], [17.5, 96.0], [17.6, 96.0], [17.7, 96.0], [17.8, 96.0], [17.9, 96.0], [18.0, 97.0], [18.1, 97.0], [18.2, 97.0], [18.3, 97.0], [18.4, 97.0], [18.5, 97.0], [18.6, 97.0], [18.7, 97.0], [18.8, 97.0], [18.9, 97.0], [19.0, 97.0], [19.1, 97.0], [19.2, 97.0], [19.3, 97.0], [19.4, 97.0], [19.5, 97.0], [19.6, 97.0], [19.7, 97.0], [19.8, 97.0], [19.9, 97.0], [20.0, 98.0], [20.1, 98.0], [20.2, 98.0], [20.3, 98.0], [20.4, 98.0], [20.5, 98.0], [20.6, 98.0], [20.7, 98.0], [20.8, 98.0], [20.9, 98.0], [21.0, 98.0], [21.1, 98.0], [21.2, 98.0], [21.3, 98.0], [21.4, 98.0], [21.5, 98.0], [21.6, 98.0], [21.7, 98.0], [21.8, 98.0], [21.9, 98.0], [22.0, 99.0], [22.1, 99.0], [22.2, 99.0], [22.3, 99.0], [22.4, 99.0], [22.5, 99.0], [22.6, 99.0], [22.7, 99.0], [22.8, 99.0], [22.9, 99.0], [23.0, 100.0], [23.1, 100.0], [23.2, 100.0], [23.3, 100.0], [23.4, 100.0], [23.5, 100.0], [23.6, 100.0], [23.7, 100.0], [23.8, 100.0], [23.9, 100.0], [24.0, 100.0], [24.1, 100.0], [24.2, 100.0], [24.3, 100.0], [24.4, 100.0], [24.5, 100.0], [24.6, 100.0], [24.7, 100.0], [24.8, 100.0], [24.9, 100.0], [25.0, 103.0], [25.1, 103.0], [25.2, 103.0], [25.3, 103.0], [25.4, 103.0], [25.5, 103.0], [25.6, 103.0], [25.7, 103.0], [25.8, 103.0], [25.9, 103.0], [26.0, 103.0], [26.1, 103.0], [26.2, 103.0], [26.3, 103.0], [26.4, 103.0], [26.5, 103.0], [26.6, 103.0], [26.7, 103.0], [26.8, 103.0], [26.9, 103.0], [27.0, 105.0], [27.1, 105.0], [27.2, 105.0], [27.3, 105.0], [27.4, 105.0], [27.5, 105.0], [27.6, 105.0], [27.7, 105.0], [27.8, 105.0], [27.9, 105.0], [28.0, 108.0], [28.1, 108.0], [28.2, 108.0], [28.3, 108.0], [28.4, 108.0], [28.5, 108.0], [28.6, 108.0], [28.7, 108.0], [28.8, 108.0], [28.9, 108.0], [29.0, 109.0], [29.1, 109.0], [29.2, 109.0], [29.3, 109.0], [29.4, 109.0], [29.5, 109.0], [29.6, 109.0], [29.7, 109.0], [29.8, 109.0], [29.9, 109.0], [30.0, 111.0], [30.1, 111.0], [30.2, 111.0], [30.3, 111.0], [30.4, 111.0], [30.5, 111.0], [30.6, 111.0], [30.7, 111.0], [30.8, 111.0], [30.9, 111.0], [31.0, 114.0], [31.1, 114.0], [31.2, 114.0], [31.3, 114.0], [31.4, 114.0], [31.5, 114.0], [31.6, 114.0], [31.7, 114.0], [31.8, 114.0], [31.9, 114.0], [32.0, 115.0], [32.1, 115.0], [32.2, 115.0], [32.3, 115.0], [32.4, 115.0], [32.5, 115.0], [32.6, 115.0], [32.7, 115.0], [32.8, 115.0], [32.9, 115.0], [33.0, 116.0], [33.1, 116.0], [33.2, 116.0], [33.3, 116.0], [33.4, 116.0], [33.5, 116.0], [33.6, 116.0], [33.7, 116.0], [33.8, 116.0], [33.9, 116.0], [34.0, 119.0], [34.1, 119.0], [34.2, 119.0], [34.3, 119.0], [34.4, 119.0], [34.5, 119.0], [34.6, 119.0], [34.7, 119.0], [34.8, 119.0], [34.9, 119.0], [35.0, 120.0], [35.1, 120.0], [35.2, 120.0], [35.3, 120.0], [35.4, 120.0], [35.5, 120.0], [35.6, 120.0], [35.7, 120.0], [35.8, 120.0], [35.9, 120.0], [36.0, 120.0], [36.1, 120.0], [36.2, 120.0], [36.3, 120.0], [36.4, 120.0], [36.5, 120.0], [36.6, 120.0], [36.7, 120.0], [36.8, 120.0], [36.9, 120.0], [37.0, 121.0], [37.1, 121.0], [37.2, 121.0], [37.3, 121.0], [37.4, 121.0], [37.5, 121.0], [37.6, 121.0], [37.7, 121.0], [37.8, 121.0], [37.9, 121.0], [38.0, 122.0], [38.1, 122.0], [38.2, 122.0], [38.3, 122.0], [38.4, 122.0], [38.5, 122.0], [38.6, 122.0], [38.7, 122.0], [38.8, 122.0], [38.9, 122.0], [39.0, 123.0], [39.1, 123.0], [39.2, 123.0], [39.3, 123.0], [39.4, 123.0], [39.5, 123.0], [39.6, 123.0], [39.7, 123.0], [39.8, 123.0], [39.9, 123.0], [40.0, 123.0], [40.1, 123.0], [40.2, 123.0], [40.3, 123.0], [40.4, 123.0], [40.5, 123.0], [40.6, 123.0], [40.7, 123.0], [40.8, 123.0], [40.9, 123.0], [41.0, 125.0], [41.1, 125.0], [41.2, 125.0], [41.3, 125.0], [41.4, 125.0], [41.5, 125.0], [41.6, 125.0], [41.7, 125.0], [41.8, 125.0], [41.9, 125.0], [42.0, 125.0], [42.1, 125.0], [42.2, 125.0], [42.3, 125.0], [42.4, 125.0], [42.5, 125.0], [42.6, 125.0], [42.7, 125.0], [42.8, 125.0], [42.9, 125.0], [43.0, 133.0], [43.1, 133.0], [43.2, 133.0], [43.3, 133.0], [43.4, 133.0], [43.5, 133.0], [43.6, 133.0], [43.7, 133.0], [43.8, 133.0], [43.9, 133.0], [44.0, 133.0], [44.1, 133.0], [44.2, 133.0], [44.3, 133.0], [44.4, 133.0], [44.5, 133.0], [44.6, 133.0], [44.7, 133.0], [44.8, 133.0], [44.9, 133.0], [45.0, 136.0], [45.1, 136.0], [45.2, 136.0], [45.3, 136.0], [45.4, 136.0], [45.5, 136.0], [45.6, 136.0], [45.7, 136.0], [45.8, 136.0], [45.9, 136.0], [46.0, 136.0], [46.1, 136.0], [46.2, 136.0], [46.3, 136.0], [46.4, 136.0], [46.5, 136.0], [46.6, 136.0], [46.7, 136.0], [46.8, 136.0], [46.9, 136.0], [47.0, 137.0], [47.1, 137.0], [47.2, 137.0], [47.3, 137.0], [47.4, 137.0], [47.5, 137.0], [47.6, 137.0], [47.7, 137.0], [47.8, 137.0], [47.9, 137.0], [48.0, 138.0], [48.1, 138.0], [48.2, 138.0], [48.3, 138.0], [48.4, 138.0], [48.5, 138.0], [48.6, 138.0], [48.7, 138.0], [48.8, 138.0], [48.9, 138.0], [49.0, 138.0], [49.1, 138.0], [49.2, 138.0], [49.3, 138.0], [49.4, 138.0], [49.5, 138.0], [49.6, 138.0], [49.7, 138.0], [49.8, 138.0], [49.9, 138.0], [50.0, 139.0], [50.1, 139.0], [50.2, 139.0], [50.3, 139.0], [50.4, 139.0], [50.5, 139.0], [50.6, 139.0], [50.7, 139.0], [50.8, 139.0], [50.9, 139.0], [51.0, 140.0], [51.1, 140.0], [51.2, 140.0], [51.3, 140.0], [51.4, 140.0], [51.5, 140.0], [51.6, 140.0], [51.7, 140.0], [51.8, 140.0], [51.9, 140.0], [52.0, 140.0], [52.1, 140.0], [52.2, 140.0], [52.3, 140.0], [52.4, 140.0], [52.5, 140.0], [52.6, 140.0], [52.7, 140.0], [52.8, 140.0], [52.9, 140.0], [53.0, 140.0], [53.1, 140.0], [53.2, 140.0], [53.3, 140.0], [53.4, 140.0], [53.5, 140.0], [53.6, 140.0], [53.7, 140.0], [53.8, 140.0], [53.9, 140.0], [54.0, 140.0], [54.1, 140.0], [54.2, 140.0], [54.3, 140.0], [54.4, 140.0], [54.5, 140.0], [54.6, 140.0], [54.7, 140.0], [54.8, 140.0], [54.9, 140.0], [55.0, 141.0], [55.1, 141.0], [55.2, 141.0], [55.3, 141.0], [55.4, 141.0], [55.5, 141.0], [55.6, 141.0], [55.7, 141.0], [55.8, 141.0], [55.9, 141.0], [56.0, 143.0], [56.1, 143.0], [56.2, 143.0], [56.3, 143.0], [56.4, 143.0], [56.5, 143.0], [56.6, 143.0], [56.7, 143.0], [56.8, 143.0], [56.9, 143.0], [57.0, 144.0], [57.1, 144.0], [57.2, 144.0], [57.3, 144.0], [57.4, 144.0], [57.5, 144.0], [57.6, 144.0], [57.7, 144.0], [57.8, 144.0], [57.9, 144.0], [58.0, 144.0], [58.1, 144.0], [58.2, 144.0], [58.3, 144.0], [58.4, 144.0], [58.5, 144.0], [58.6, 144.0], [58.7, 144.0], [58.8, 144.0], [58.9, 144.0], [59.0, 149.0], [59.1, 149.0], [59.2, 149.0], [59.3, 149.0], [59.4, 149.0], [59.5, 149.0], [59.6, 149.0], [59.7, 149.0], [59.8, 149.0], [59.9, 149.0], [60.0, 149.0], [60.1, 149.0], [60.2, 149.0], [60.3, 149.0], [60.4, 149.0], [60.5, 149.0], [60.6, 149.0], [60.7, 149.0], [60.8, 149.0], [60.9, 149.0], [61.0, 151.0], [61.1, 151.0], [61.2, 151.0], [61.3, 151.0], [61.4, 151.0], [61.5, 151.0], [61.6, 151.0], [61.7, 151.0], [61.8, 151.0], [61.9, 151.0], [62.0, 157.0], [62.1, 157.0], [62.2, 157.0], [62.3, 157.0], [62.4, 157.0], [62.5, 157.0], [62.6, 157.0], [62.7, 157.0], [62.8, 157.0], [62.9, 157.0], [63.0, 158.0], [63.1, 158.0], [63.2, 158.0], [63.3, 158.0], [63.4, 158.0], [63.5, 158.0], [63.6, 158.0], [63.7, 158.0], [63.8, 158.0], [63.9, 158.0], [64.0, 159.0], [64.1, 159.0], [64.2, 159.0], [64.3, 159.0], [64.4, 159.0], [64.5, 159.0], [64.6, 159.0], [64.7, 159.0], [64.8, 159.0], [64.9, 159.0], [65.0, 160.0], [65.1, 160.0], [65.2, 160.0], [65.3, 160.0], [65.4, 160.0], [65.5, 160.0], [65.6, 160.0], [65.7, 160.0], [65.8, 160.0], [65.9, 160.0], [66.0, 164.0], [66.1, 164.0], [66.2, 164.0], [66.3, 164.0], [66.4, 164.0], [66.5, 164.0], [66.6, 164.0], [66.7, 164.0], [66.8, 164.0], [66.9, 164.0], [67.0, 166.0], [67.1, 166.0], [67.2, 166.0], [67.3, 166.0], [67.4, 166.0], [67.5, 166.0], [67.6, 166.0], [67.7, 166.0], [67.8, 166.0], [67.9, 166.0], [68.0, 173.0], [68.1, 173.0], [68.2, 173.0], [68.3, 173.0], [68.4, 173.0], [68.5, 173.0], [68.6, 173.0], [68.7, 173.0], [68.8, 173.0], [68.9, 173.0], [69.0, 178.0], [69.1, 178.0], [69.2, 178.0], [69.3, 178.0], [69.4, 178.0], [69.5, 178.0], [69.6, 178.0], [69.7, 178.0], [69.8, 178.0], [69.9, 178.0], [70.0, 178.0], [70.1, 178.0], [70.2, 178.0], [70.3, 178.0], [70.4, 178.0], [70.5, 178.0], [70.6, 178.0], [70.7, 178.0], [70.8, 178.0], [70.9, 178.0], [71.0, 179.0], [71.1, 179.0], [71.2, 179.0], [71.3, 179.0], [71.4, 179.0], [71.5, 179.0], [71.6, 179.0], [71.7, 179.0], [71.8, 179.0], [71.9, 179.0], [72.0, 185.0], [72.1, 185.0], [72.2, 185.0], [72.3, 185.0], [72.4, 185.0], [72.5, 185.0], [72.6, 185.0], [72.7, 185.0], [72.8, 185.0], [72.9, 185.0], [73.0, 187.0], [73.1, 187.0], [73.2, 187.0], [73.3, 187.0], [73.4, 187.0], [73.5, 187.0], [73.6, 187.0], [73.7, 187.0], [73.8, 187.0], [73.9, 187.0], [74.0, 187.0], [74.1, 187.0], [74.2, 187.0], [74.3, 187.0], [74.4, 187.0], [74.5, 187.0], [74.6, 187.0], [74.7, 187.0], [74.8, 187.0], [74.9, 187.0], [75.0, 187.0], [75.1, 187.0], [75.2, 187.0], [75.3, 187.0], [75.4, 187.0], [75.5, 187.0], [75.6, 187.0], [75.7, 187.0], [75.8, 187.0], [75.9, 187.0], [76.0, 190.0], [76.1, 190.0], [76.2, 190.0], [76.3, 190.0], [76.4, 190.0], [76.5, 190.0], [76.6, 190.0], [76.7, 190.0], [76.8, 190.0], [76.9, 190.0], [77.0, 190.0], [77.1, 190.0], [77.2, 190.0], [77.3, 190.0], [77.4, 190.0], [77.5, 190.0], [77.6, 190.0], [77.7, 190.0], [77.8, 190.0], [77.9, 190.0], [78.0, 191.0], [78.1, 191.0], [78.2, 191.0], [78.3, 191.0], [78.4, 191.0], [78.5, 191.0], [78.6, 191.0], [78.7, 191.0], [78.8, 191.0], [78.9, 191.0], [79.0, 194.0], [79.1, 194.0], [79.2, 194.0], [79.3, 194.0], [79.4, 194.0], [79.5, 194.0], [79.6, 194.0], [79.7, 194.0], [79.8, 194.0], [79.9, 194.0], [80.0, 201.0], [80.1, 201.0], [80.2, 201.0], [80.3, 201.0], [80.4, 201.0], [80.5, 201.0], [80.6, 201.0], [80.7, 201.0], [80.8, 201.0], [80.9, 201.0], [81.0, 206.0], [81.1, 206.0], [81.2, 206.0], [81.3, 206.0], [81.4, 206.0], [81.5, 206.0], [81.6, 206.0], [81.7, 206.0], [81.8, 206.0], [81.9, 206.0], [82.0, 211.0], [82.1, 211.0], [82.2, 211.0], [82.3, 211.0], [82.4, 211.0], [82.5, 211.0], [82.6, 211.0], [82.7, 211.0], [82.8, 211.0], [82.9, 211.0], [83.0, 234.0], [83.1, 234.0], [83.2, 234.0], [83.3, 234.0], [83.4, 234.0], [83.5, 234.0], [83.6, 234.0], [83.7, 234.0], [83.8, 234.0], [83.9, 234.0], [84.0, 235.0], [84.1, 235.0], [84.2, 235.0], [84.3, 235.0], [84.4, 235.0], [84.5, 235.0], [84.6, 235.0], [84.7, 235.0], [84.8, 235.0], [84.9, 235.0], [85.0, 250.0], [85.1, 250.0], [85.2, 250.0], [85.3, 250.0], [85.4, 250.0], [85.5, 250.0], [85.6, 250.0], [85.7, 250.0], [85.8, 250.0], [85.9, 250.0], [86.0, 273.0], [86.1, 273.0], [86.2, 273.0], [86.3, 273.0], [86.4, 273.0], [86.5, 273.0], [86.6, 273.0], [86.7, 273.0], [86.8, 273.0], [86.9, 273.0], [87.0, 275.0], [87.1, 275.0], [87.2, 275.0], [87.3, 275.0], [87.4, 275.0], [87.5, 275.0], [87.6, 275.0], [87.7, 275.0], [87.8, 275.0], [87.9, 275.0], [88.0, 309.0], [88.1, 309.0], [88.2, 309.0], [88.3, 309.0], [88.4, 309.0], [88.5, 309.0], [88.6, 309.0], [88.7, 309.0], [88.8, 309.0], [88.9, 309.0], [89.0, 350.0], [89.1, 350.0], [89.2, 350.0], [89.3, 350.0], [89.4, 350.0], [89.5, 350.0], [89.6, 350.0], [89.7, 350.0], [89.8, 350.0], [89.9, 350.0], [90.0, 361.0], [90.1, 361.0], [90.2, 361.0], [90.3, 361.0], [90.4, 361.0], [90.5, 361.0], [90.6, 361.0], [90.7, 361.0], [90.8, 361.0], [90.9, 361.0], [91.0, 369.0], [91.1, 369.0], [91.2, 369.0], [91.3, 369.0], [91.4, 369.0], [91.5, 369.0], [91.6, 369.0], [91.7, 369.0], [91.8, 369.0], [91.9, 369.0], [92.0, 375.0], [92.1, 375.0], [92.2, 375.0], [92.3, 375.0], [92.4, 375.0], [92.5, 375.0], [92.6, 375.0], [92.7, 375.0], [92.8, 375.0], [92.9, 375.0], [93.0, 410.0], [93.1, 410.0], [93.2, 410.0], [93.3, 410.0], [93.4, 410.0], [93.5, 410.0], [93.6, 410.0], [93.7, 410.0], [93.8, 410.0], [93.9, 410.0], [94.0, 416.0], [94.1, 416.0], [94.2, 416.0], [94.3, 416.0], [94.4, 416.0], [94.5, 416.0], [94.6, 416.0], [94.7, 416.0], [94.8, 416.0], [94.9, 416.0], [95.0, 489.0], [95.1, 489.0], [95.2, 489.0], [95.3, 489.0], [95.4, 489.0], [95.5, 489.0], [95.6, 489.0], [95.7, 489.0], [95.8, 489.0], [95.9, 489.0], [96.0, 510.0], [96.1, 510.0], [96.2, 510.0], [96.3, 510.0], [96.4, 510.0], [96.5, 510.0], [96.6, 510.0], [96.7, 510.0], [96.8, 510.0], [96.9, 510.0], [97.0, 700.0], [97.1, 700.0], [97.2, 700.0], [97.3, 700.0], [97.4, 700.0], [97.5, 700.0], [97.6, 700.0], [97.7, 700.0], [97.8, 700.0], [97.9, 700.0], [98.0, 1689.0], [98.1, 1689.0], [98.2, 1689.0], [98.3, 1689.0], [98.4, 1689.0], [98.5, 1689.0], [98.6, 1689.0], [98.7, 1689.0], [98.8, 1689.0], [98.9, 1689.0], [99.0, 1700.0], [99.1, 1700.0], [99.2, 1700.0], [99.3, 1700.0], [99.4, 1700.0], [99.5, 1700.0], [99.6, 1700.0], [99.7, 1700.0], [99.8, 1700.0], [99.9, 1700.0]], "isOverall": false, "label": "1", "isController": false}, {"data": [[0.0, 68.0], [0.1, 68.0], [0.2, 68.0], [0.3, 68.0], [0.4, 68.0], [0.5, 70.0], [0.6, 70.0], [0.7, 70.0], [0.8, 70.0], [0.9, 70.0], [1.0, 71.0], [1.1, 71.0], [1.2, 71.0], [1.3, 71.0], [1.4, 71.0], [1.5, 71.0], [1.6, 71.0], [1.7, 71.0], [1.8, 71.0], [1.9, 71.0], [2.0, 71.0], [2.1, 71.0], [2.2, 71.0], [2.3, 71.0], [2.4, 71.0], [2.5, 72.0], [2.6, 72.0], [2.7, 72.0], [2.8, 72.0], [2.9, 72.0], [3.0, 74.0], [3.1, 74.0], [3.2, 74.0], [3.3, 74.0], [3.4, 74.0], [3.5, 75.0], [3.6, 75.0], [3.7, 75.0], [3.8, 75.0], [3.9, 75.0], [4.0, 76.0], [4.1, 76.0], [4.2, 76.0], [4.3, 76.0], [4.4, 76.0], [4.5, 77.0], [4.6, 77.0], [4.7, 77.0], [4.8, 77.0], [4.9, 77.0], [5.0, 78.0], [5.1, 78.0], [5.2, 78.0], [5.3, 78.0], [5.4, 78.0], [5.5, 79.0], [5.6, 79.0], [5.7, 79.0], [5.8, 79.0], [5.9, 79.0], [6.0, 80.0], [6.1, 80.0], [6.2, 80.0], [6.3, 80.0], [6.4, 80.0], [6.5, 81.0], [6.6, 81.0], [6.7, 81.0], [6.8, 81.0], [6.9, 81.0], [7.0, 82.0], [7.1, 82.0], [7.2, 82.0], [7.3, 82.0], [7.4, 82.0], [7.5, 85.0], [7.6, 85.0], [7.7, 85.0], [7.8, 85.0], [7.9, 85.0], [8.0, 85.0], [8.1, 85.0], [8.2, 85.0], [8.3, 85.0], [8.4, 85.0], [8.5, 85.0], [8.6, 85.0], [8.7, 85.0], [8.8, 85.0], [8.9, 85.0], [9.0, 86.0], [9.1, 86.0], [9.2, 86.0], [9.3, 86.0], [9.4, 86.0], [9.5, 86.0], [9.6, 86.0], [9.7, 86.0], [9.8, 86.0], [9.9, 86.0], [10.0, 87.0], [10.1, 87.0], [10.2, 87.0], [10.3, 87.0], [10.4, 87.0], [10.5, 87.0], [10.6, 87.0], [10.7, 87.0], [10.8, 87.0], [10.9, 87.0], [11.0, 88.0], [11.1, 88.0], [11.2, 88.0], [11.3, 88.0], [11.4, 88.0], [11.5, 93.0], [11.6, 93.0], [11.7, 93.0], [11.8, 93.0], [11.9, 93.0], [12.0, 93.0], [12.1, 93.0], [12.2, 93.0], [12.3, 93.0], [12.4, 93.0], [12.5, 94.0], [12.6, 94.0], [12.7, 94.0], [12.8, 94.0], [12.9, 94.0], [13.0, 94.0], [13.1, 94.0], [13.2, 94.0], [13.3, 94.0], [13.4, 94.0], [13.5, 97.0], [13.6, 97.0], [13.7, 97.0], [13.8, 97.0], [13.9, 97.0], [14.0, 98.0], [14.1, 98.0], [14.2, 98.0], [14.3, 98.0], [14.4, 98.0], [14.5, 99.0], [14.6, 99.0], [14.7, 99.0], [14.8, 99.0], [14.9, 99.0], [15.0, 99.0], [15.1, 99.0], [15.2, 99.0], [15.3, 99.0], [15.4, 99.0], [15.5, 99.0], [15.6, 99.0], [15.7, 99.0], [15.8, 99.0], [15.9, 99.0], [16.0, 100.0], [16.1, 100.0], [16.2, 100.0], [16.3, 100.0], [16.4, 100.0], [16.5, 100.0], [16.6, 100.0], [16.7, 100.0], [16.8, 100.0], [16.9, 100.0], [17.0, 100.0], [17.1, 100.0], [17.2, 100.0], [17.3, 100.0], [17.4, 100.0], [17.5, 101.0], [17.6, 101.0], [17.7, 101.0], [17.8, 101.0], [17.9, 101.0], [18.0, 101.0], [18.1, 101.0], [18.2, 101.0], [18.3, 101.0], [18.4, 101.0], [18.5, 102.0], [18.6, 102.0], [18.7, 102.0], [18.8, 102.0], [18.9, 102.0], [19.0, 103.0], [19.1, 103.0], [19.2, 103.0], [19.3, 103.0], [19.4, 103.0], [19.5, 103.0], [19.6, 103.0], [19.7, 103.0], [19.8, 103.0], [19.9, 103.0], [20.0, 103.0], [20.1, 103.0], [20.2, 103.0], [20.3, 103.0], [20.4, 103.0], [20.5, 104.0], [20.6, 104.0], [20.7, 104.0], [20.8, 104.0], [20.9, 104.0], [21.0, 104.0], [21.1, 104.0], [21.2, 104.0], [21.3, 104.0], [21.4, 104.0], [21.5, 106.0], [21.6, 106.0], [21.7, 106.0], [21.8, 106.0], [21.9, 106.0], [22.0, 109.0], [22.1, 109.0], [22.2, 109.0], [22.3, 109.0], [22.4, 109.0], [22.5, 110.0], [22.6, 110.0], [22.7, 110.0], [22.8, 110.0], [22.9, 110.0], [23.0, 110.0], [23.1, 110.0], [23.2, 110.0], [23.3, 110.0], [23.4, 110.0], [23.5, 112.0], [23.6, 112.0], [23.7, 112.0], [23.8, 112.0], [23.9, 112.0], [24.0, 114.0], [24.1, 114.0], [24.2, 114.0], [24.3, 114.0], [24.4, 114.0], [24.5, 115.0], [24.6, 115.0], [24.7, 115.0], [24.8, 115.0], [24.9, 115.0], [25.0, 115.0], [25.1, 115.0], [25.2, 115.0], [25.3, 115.0], [25.4, 115.0], [25.5, 115.0], [25.6, 115.0], [25.7, 115.0], [25.8, 115.0], [25.9, 115.0], [26.0, 115.0], [26.1, 115.0], [26.2, 115.0], [26.3, 115.0], [26.4, 115.0], [26.5, 115.0], [26.6, 115.0], [26.7, 115.0], [26.8, 115.0], [26.9, 115.0], [27.0, 115.0], [27.1, 115.0], [27.2, 115.0], [27.3, 115.0], [27.4, 115.0], [27.5, 116.0], [27.6, 116.0], [27.7, 116.0], [27.8, 116.0], [27.9, 116.0], [28.0, 118.0], [28.1, 118.0], [28.2, 118.0], [28.3, 118.0], [28.4, 118.0], [28.5, 119.0], [28.6, 119.0], [28.7, 119.0], [28.8, 119.0], [28.9, 119.0], [29.0, 119.0], [29.1, 119.0], [29.2, 119.0], [29.3, 119.0], [29.4, 119.0], [29.5, 119.0], [29.6, 119.0], [29.7, 119.0], [29.8, 119.0], [29.9, 119.0], [30.0, 121.0], [30.1, 121.0], [30.2, 121.0], [30.3, 121.0], [30.4, 121.0], [30.5, 122.0], [30.6, 122.0], [30.7, 122.0], [30.8, 122.0], [30.9, 122.0], [31.0, 122.0], [31.1, 122.0], [31.2, 122.0], [31.3, 122.0], [31.4, 122.0], [31.5, 122.0], [31.6, 122.0], [31.7, 122.0], [31.8, 122.0], [31.9, 122.0], [32.0, 122.0], [32.1, 122.0], [32.2, 122.0], [32.3, 122.0], [32.4, 122.0], [32.5, 122.0], [32.6, 122.0], [32.7, 122.0], [32.8, 122.0], [32.9, 122.0], [33.0, 122.0], [33.1, 122.0], [33.2, 122.0], [33.3, 122.0], [33.4, 122.0], [33.5, 122.0], [33.6, 122.0], [33.7, 122.0], [33.8, 122.0], [33.9, 122.0], [34.0, 126.0], [34.1, 126.0], [34.2, 126.0], [34.3, 126.0], [34.4, 126.0], [34.5, 127.0], [34.6, 127.0], [34.7, 127.0], [34.8, 127.0], [34.9, 127.0], [35.0, 127.0], [35.1, 127.0], [35.2, 127.0], [35.3, 127.0], [35.4, 127.0], [35.5, 128.0], [35.6, 128.0], [35.7, 128.0], [35.8, 128.0], [35.9, 128.0], [36.0, 128.0], [36.1, 128.0], [36.2, 128.0], [36.3, 128.0], [36.4, 128.0], [36.5, 128.0], [36.6, 128.0], [36.7, 128.0], [36.8, 128.0], [36.9, 128.0], [37.0, 128.0], [37.1, 128.0], [37.2, 128.0], [37.3, 128.0], [37.4, 128.0], [37.5, 131.0], [37.6, 131.0], [37.7, 131.0], [37.8, 131.0], [37.9, 131.0], [38.0, 131.0], [38.1, 131.0], [38.2, 131.0], [38.3, 131.0], [38.4, 131.0], [38.5, 132.0], [38.6, 132.0], [38.7, 132.0], [38.8, 132.0], [38.9, 132.0], [39.0, 133.0], [39.1, 133.0], [39.2, 133.0], [39.3, 133.0], [39.4, 133.0], [39.5, 134.0], [39.6, 134.0], [39.7, 134.0], [39.8, 134.0], [39.9, 134.0], [40.0, 135.0], [40.1, 135.0], [40.2, 135.0], [40.3, 135.0], [40.4, 135.0], [40.5, 135.0], [40.6, 135.0], [40.7, 135.0], [40.8, 135.0], [40.9, 135.0], [41.0, 136.0], [41.1, 136.0], [41.2, 136.0], [41.3, 136.0], [41.4, 136.0], [41.5, 136.0], [41.6, 136.0], [41.7, 136.0], [41.8, 136.0], [41.9, 136.0], [42.0, 137.0], [42.1, 137.0], [42.2, 137.0], [42.3, 137.0], [42.4, 137.0], [42.5, 138.0], [42.6, 138.0], [42.7, 138.0], [42.8, 138.0], [42.9, 138.0], [43.0, 139.0], [43.1, 139.0], [43.2, 139.0], [43.3, 139.0], [43.4, 139.0], [43.5, 139.0], [43.6, 139.0], [43.7, 139.0], [43.8, 139.0], [43.9, 139.0], [44.0, 141.0], [44.1, 141.0], [44.2, 141.0], [44.3, 141.0], [44.4, 141.0], [44.5, 141.0], [44.6, 141.0], [44.7, 141.0], [44.8, 141.0], [44.9, 141.0], [45.0, 143.0], [45.1, 143.0], [45.2, 143.0], [45.3, 143.0], [45.4, 143.0], [45.5, 143.0], [45.6, 143.0], [45.7, 143.0], [45.8, 143.0], [45.9, 143.0], [46.0, 146.0], [46.1, 146.0], [46.2, 146.0], [46.3, 146.0], [46.4, 146.0], [46.5, 147.0], [46.6, 147.0], [46.7, 147.0], [46.8, 147.0], [46.9, 147.0], [47.0, 147.0], [47.1, 147.0], [47.2, 147.0], [47.3, 147.0], [47.4, 147.0], [47.5, 148.0], [47.6, 148.0], [47.7, 148.0], [47.8, 148.0], [47.9, 148.0], [48.0, 149.0], [48.1, 149.0], [48.2, 149.0], [48.3, 149.0], [48.4, 149.0], [48.5, 149.0], [48.6, 149.0], [48.7, 149.0], [48.8, 149.0], [48.9, 149.0], [49.0, 149.0], [49.1, 149.0], [49.2, 149.0], [49.3, 149.0], [49.4, 149.0], [49.5, 149.0], [49.6, 149.0], [49.7, 149.0], [49.8, 149.0], [49.9, 149.0], [50.0, 150.0], [50.1, 150.0], [50.2, 150.0], [50.3, 150.0], [50.4, 150.0], [50.5, 151.0], [50.6, 151.0], [50.7, 151.0], [50.8, 151.0], [50.9, 151.0], [51.0, 151.0], [51.1, 151.0], [51.2, 151.0], [51.3, 151.0], [51.4, 151.0], [51.5, 152.0], [51.6, 152.0], [51.7, 152.0], [51.8, 152.0], [51.9, 152.0], [52.0, 153.0], [52.1, 153.0], [52.2, 153.0], [52.3, 153.0], [52.4, 153.0], [52.5, 153.0], [52.6, 153.0], [52.7, 153.0], [52.8, 153.0], [52.9, 153.0], [53.0, 153.0], [53.1, 153.0], [53.2, 153.0], [53.3, 153.0], [53.4, 153.0], [53.5, 153.0], [53.6, 153.0], [53.7, 153.0], [53.8, 153.0], [53.9, 153.0], [54.0, 154.0], [54.1, 154.0], [54.2, 154.0], [54.3, 154.0], [54.4, 154.0], [54.5, 156.0], [54.6, 156.0], [54.7, 156.0], [54.8, 156.0], [54.9, 156.0], [55.0, 157.0], [55.1, 157.0], [55.2, 157.0], [55.3, 157.0], [55.4, 157.0], [55.5, 159.0], [55.6, 159.0], [55.7, 159.0], [55.8, 159.0], [55.9, 159.0], [56.0, 160.0], [56.1, 160.0], [56.2, 160.0], [56.3, 160.0], [56.4, 160.0], [56.5, 164.0], [56.6, 164.0], [56.7, 164.0], [56.8, 164.0], [56.9, 164.0], [57.0, 166.0], [57.1, 166.0], [57.2, 166.0], [57.3, 166.0], [57.4, 166.0], [57.5, 169.0], [57.6, 169.0], [57.7, 169.0], [57.8, 169.0], [57.9, 169.0], [58.0, 170.0], [58.1, 170.0], [58.2, 170.0], [58.3, 170.0], [58.4, 170.0], [58.5, 174.0], [58.6, 174.0], [58.7, 174.0], [58.8, 174.0], [58.9, 174.0], [59.0, 175.0], [59.1, 175.0], [59.2, 175.0], [59.3, 175.0], [59.4, 175.0], [59.5, 176.0], [59.6, 176.0], [59.7, 176.0], [59.8, 176.0], [59.9, 176.0], [60.0, 178.0], [60.1, 178.0], [60.2, 178.0], [60.3, 178.0], [60.4, 178.0], [60.5, 178.0], [60.6, 178.0], [60.7, 178.0], [60.8, 178.0], [60.9, 178.0], [61.0, 180.0], [61.1, 180.0], [61.2, 180.0], [61.3, 180.0], [61.4, 180.0], [61.5, 180.0], [61.6, 180.0], [61.7, 180.0], [61.8, 180.0], [61.9, 180.0], [62.0, 182.0], [62.1, 182.0], [62.2, 182.0], [62.3, 182.0], [62.4, 182.0], [62.5, 182.0], [62.6, 182.0], [62.7, 182.0], [62.8, 182.0], [62.9, 182.0], [63.0, 188.0], [63.1, 188.0], [63.2, 188.0], [63.3, 188.0], [63.4, 188.0], [63.5, 192.0], [63.6, 192.0], [63.7, 192.0], [63.8, 192.0], [63.9, 192.0], [64.0, 193.0], [64.1, 193.0], [64.2, 193.0], [64.3, 193.0], [64.4, 193.0], [64.5, 194.0], [64.6, 194.0], [64.7, 194.0], [64.8, 194.0], [64.9, 194.0], [65.0, 196.0], [65.1, 196.0], [65.2, 196.0], [65.3, 196.0], [65.4, 196.0], [65.5, 197.0], [65.6, 197.0], [65.7, 197.0], [65.8, 197.0], [65.9, 197.0], [66.0, 198.0], [66.1, 198.0], [66.2, 198.0], [66.3, 198.0], [66.4, 198.0], [66.5, 199.0], [66.6, 199.0], [66.7, 199.0], [66.8, 199.0], [66.9, 199.0], [67.0, 200.0], [67.1, 200.0], [67.2, 200.0], [67.3, 200.0], [67.4, 200.0], [67.5, 200.0], [67.6, 200.0], [67.7, 200.0], [67.8, 200.0], [67.9, 200.0], [68.0, 201.0], [68.1, 201.0], [68.2, 201.0], [68.3, 201.0], [68.4, 201.0], [68.5, 201.0], [68.6, 201.0], [68.7, 201.0], [68.8, 201.0], [68.9, 201.0], [69.0, 202.0], [69.1, 202.0], [69.2, 202.0], [69.3, 202.0], [69.4, 202.0], [69.5, 202.0], [69.6, 202.0], [69.7, 202.0], [69.8, 202.0], [69.9, 202.0], [70.0, 203.0], [70.1, 203.0], [70.2, 203.0], [70.3, 203.0], [70.4, 203.0], [70.5, 204.0], [70.6, 204.0], [70.7, 204.0], [70.8, 204.0], [70.9, 204.0], [71.0, 204.0], [71.1, 204.0], [71.2, 204.0], [71.3, 204.0], [71.4, 204.0], [71.5, 205.0], [71.6, 205.0], [71.7, 205.0], [71.8, 205.0], [71.9, 205.0], [72.0, 206.0], [72.1, 206.0], [72.2, 206.0], [72.3, 206.0], [72.4, 206.0], [72.5, 206.0], [72.6, 206.0], [72.7, 206.0], [72.8, 206.0], [72.9, 206.0], [73.0, 207.0], [73.1, 207.0], [73.2, 207.0], [73.3, 207.0], [73.4, 207.0], [73.5, 207.0], [73.6, 207.0], [73.7, 207.0], [73.8, 207.0], [73.9, 207.0], [74.0, 209.0], [74.1, 209.0], [74.2, 209.0], [74.3, 209.0], [74.4, 209.0], [74.5, 210.0], [74.6, 210.0], [74.7, 210.0], [74.8, 210.0], [74.9, 210.0], [75.0, 211.0], [75.1, 211.0], [75.2, 211.0], [75.3, 211.0], [75.4, 211.0], [75.5, 216.0], [75.6, 216.0], [75.7, 216.0], [75.8, 216.0], [75.9, 216.0], [76.0, 218.0], [76.1, 218.0], [76.2, 218.0], [76.3, 218.0], [76.4, 218.0], [76.5, 219.0], [76.6, 219.0], [76.7, 219.0], [76.8, 219.0], [76.9, 219.0], [77.0, 220.0], [77.1, 220.0], [77.2, 220.0], [77.3, 220.0], [77.4, 220.0], [77.5, 225.0], [77.6, 225.0], [77.7, 225.0], [77.8, 225.0], [77.9, 225.0], [78.0, 225.0], [78.1, 225.0], [78.2, 225.0], [78.3, 225.0], [78.4, 225.0], [78.5, 227.0], [78.6, 227.0], [78.7, 227.0], [78.8, 227.0], [78.9, 227.0], [79.0, 231.0], [79.1, 231.0], [79.2, 231.0], [79.3, 231.0], [79.4, 231.0], [79.5, 236.0], [79.6, 236.0], [79.7, 236.0], [79.8, 236.0], [79.9, 236.0], [80.0, 249.0], [80.1, 249.0], [80.2, 249.0], [80.3, 249.0], [80.4, 249.0], [80.5, 251.0], [80.6, 251.0], [80.7, 251.0], [80.8, 251.0], [80.9, 251.0], [81.0, 251.0], [81.1, 251.0], [81.2, 251.0], [81.3, 251.0], [81.4, 251.0], [81.5, 255.0], [81.6, 255.0], [81.7, 255.0], [81.8, 255.0], [81.9, 255.0], [82.0, 256.0], [82.1, 256.0], [82.2, 256.0], [82.3, 256.0], [82.4, 256.0], [82.5, 259.0], [82.6, 259.0], [82.7, 259.0], [82.8, 259.0], [82.9, 259.0], [83.0, 264.0], [83.1, 264.0], [83.2, 264.0], [83.3, 264.0], [83.4, 264.0], [83.5, 270.0], [83.6, 270.0], [83.7, 270.0], [83.8, 270.0], [83.9, 270.0], [84.0, 272.0], [84.1, 272.0], [84.2, 272.0], [84.3, 272.0], [84.4, 272.0], [84.5, 272.0], [84.6, 272.0], [84.7, 272.0], [84.8, 272.0], [84.9, 272.0], [85.0, 283.0], [85.1, 283.0], [85.2, 283.0], [85.3, 283.0], [85.4, 283.0], [85.5, 285.0], [85.6, 285.0], [85.7, 285.0], [85.8, 285.0], [85.9, 285.0], [86.0, 287.0], [86.1, 287.0], [86.2, 287.0], [86.3, 287.0], [86.4, 287.0], [86.5, 301.0], [86.6, 301.0], [86.7, 301.0], [86.8, 301.0], [86.9, 301.0], [87.0, 315.0], [87.1, 315.0], [87.2, 315.0], [87.3, 315.0], [87.4, 315.0], [87.5, 322.0], [87.6, 322.0], [87.7, 322.0], [87.8, 322.0], [87.9, 322.0], [88.0, 322.0], [88.1, 322.0], [88.2, 322.0], [88.3, 322.0], [88.4, 322.0], [88.5, 336.0], [88.6, 336.0], [88.7, 336.0], [88.8, 336.0], [88.9, 336.0], [89.0, 348.0], [89.1, 348.0], [89.2, 348.0], [89.3, 348.0], [89.4, 348.0], [89.5, 364.0], [89.6, 364.0], [89.7, 364.0], [89.8, 364.0], [89.9, 364.0], [90.0, 367.0], [90.1, 367.0], [90.2, 367.0], [90.3, 367.0], [90.4, 367.0], [90.5, 372.0], [90.6, 372.0], [90.7, 372.0], [90.8, 372.0], [90.9, 372.0], [91.0, 377.0], [91.1, 377.0], [91.2, 377.0], [91.3, 377.0], [91.4, 377.0], [91.5, 382.0], [91.6, 382.0], [91.7, 382.0], [91.8, 382.0], [91.9, 382.0], [92.0, 410.0], [92.1, 410.0], [92.2, 410.0], [92.3, 410.0], [92.4, 410.0], [92.5, 427.0], [92.6, 427.0], [92.7, 427.0], [92.8, 427.0], [92.9, 427.0], [93.0, 430.0], [93.1, 430.0], [93.2, 430.0], [93.3, 430.0], [93.4, 430.0], [93.5, 526.0], [93.6, 526.0], [93.7, 526.0], [93.8, 526.0], [93.9, 526.0], [94.0, 554.0], [94.1, 554.0], [94.2, 554.0], [94.3, 554.0], [94.4, 554.0], [94.5, 594.0], [94.6, 594.0], [94.7, 594.0], [94.8, 594.0], [94.9, 594.0], [95.0, 604.0], [95.1, 604.0], [95.2, 604.0], [95.3, 604.0], [95.4, 604.0], [95.5, 639.0], [95.6, 639.0], [95.7, 639.0], [95.8, 639.0], [95.9, 639.0], [96.0, 739.0], [96.1, 739.0], [96.2, 739.0], [96.3, 739.0], [96.4, 739.0], [96.5, 746.0], [96.6, 746.0], [96.7, 746.0], [96.8, 746.0], [96.9, 746.0], [97.0, 755.0], [97.1, 755.0], [97.2, 755.0], [97.3, 755.0], [97.4, 755.0], [97.5, 839.0], [97.6, 839.0], [97.7, 839.0], [97.8, 839.0], [97.9, 839.0], [98.0, 998.0], [98.1, 998.0], [98.2, 998.0], [98.3, 998.0], [98.4, 998.0], [98.5, 1434.0], [98.6, 1434.0], [98.7, 1434.0], [98.8, 1434.0], [98.9, 1434.0], [99.0, 2212.0], [99.1, 2212.0], [99.2, 2212.0], [99.3, 2212.0], [99.4, 2212.0], [99.5, 2297.0], [99.6, 2297.0], [99.7, 2297.0], [99.8, 2297.0], [99.9, 2297.0]], "isOverall": false, "label": "2", "isController": false}, {"data": [[0.0, 69.0], [0.1, 69.0], [0.2, 69.0], [0.3, 74.0], [0.4, 74.0], [0.5, 80.0], [0.6, 80.0], [0.7, 80.0], [0.8, 80.0], [0.9, 80.0], [1.0, 81.0], [1.1, 81.0], [1.2, 81.0], [1.3, 82.0], [1.4, 82.0], [1.5, 82.0], [1.6, 82.0], [1.7, 82.0], [1.8, 87.0], [1.9, 87.0], [2.0, 88.0], [2.1, 88.0], [2.2, 88.0], [2.3, 90.0], [2.4, 90.0], [2.5, 91.0], [2.6, 91.0], [2.7, 91.0], [2.8, 92.0], [2.9, 92.0], [3.0, 93.0], [3.1, 93.0], [3.2, 93.0], [3.3, 95.0], [3.4, 95.0], [3.5, 96.0], [3.6, 96.0], [3.7, 96.0], [3.8, 97.0], [3.9, 97.0], [4.0, 98.0], [4.1, 98.0], [4.2, 98.0], [4.3, 98.0], [4.4, 98.0], [4.5, 99.0], [4.6, 99.0], [4.7, 99.0], [4.8, 101.0], [4.9, 101.0], [5.0, 101.0], [5.1, 101.0], [5.2, 101.0], [5.3, 101.0], [5.4, 101.0], [5.5, 102.0], [5.6, 102.0], [5.7, 102.0], [5.8, 102.0], [5.9, 102.0], [6.0, 103.0], [6.1, 103.0], [6.2, 103.0], [6.3, 103.0], [6.4, 103.0], [6.5, 103.0], [6.6, 103.0], [6.7, 103.0], [6.8, 104.0], [6.9, 104.0], [7.0, 104.0], [7.1, 104.0], [7.2, 104.0], [7.3, 105.0], [7.4, 105.0], [7.5, 105.0], [7.6, 105.0], [7.7, 105.0], [7.8, 105.0], [7.9, 105.0], [8.0, 106.0], [8.1, 106.0], [8.2, 106.0], [8.3, 107.0], [8.4, 107.0], [8.5, 107.0], [8.6, 107.0], [8.7, 107.0], [8.8, 108.0], [8.9, 108.0], [9.0, 108.0], [9.1, 108.0], [9.2, 108.0], [9.3, 108.0], [9.4, 108.0], [9.5, 108.0], [9.6, 108.0], [9.7, 108.0], [9.8, 109.0], [9.9, 109.0], [10.0, 110.0], [10.1, 110.0], [10.2, 110.0], [10.3, 111.0], [10.4, 111.0], [10.5, 111.0], [10.6, 111.0], [10.7, 111.0], [10.8, 112.0], [10.9, 112.0], [11.0, 112.0], [11.1, 112.0], [11.2, 112.0], [11.3, 112.0], [11.4, 112.0], [11.5, 114.0], [11.6, 114.0], [11.7, 114.0], [11.8, 114.0], [11.9, 114.0], [12.0, 114.0], [12.1, 114.0], [12.2, 114.0], [12.3, 116.0], [12.4, 116.0], [12.5, 116.0], [12.6, 116.0], [12.7, 116.0], [12.8, 116.0], [12.9, 116.0], [13.0, 117.0], [13.1, 117.0], [13.2, 117.0], [13.3, 118.0], [13.4, 118.0], [13.5, 118.0], [13.6, 118.0], [13.7, 118.0], [13.8, 119.0], [13.9, 119.0], [14.0, 119.0], [14.1, 119.0], [14.2, 119.0], [14.3, 119.0], [14.4, 119.0], [14.5, 120.0], [14.6, 120.0], [14.7, 120.0], [14.8, 121.0], [14.9, 121.0], [15.0, 121.0], [15.1, 121.0], [15.2, 121.0], [15.3, 122.0], [15.4, 122.0], [15.5, 123.0], [15.6, 123.0], [15.7, 123.0], [15.8, 123.0], [15.9, 123.0], [16.0, 124.0], [16.1, 124.0], [16.2, 124.0], [16.3, 124.0], [16.4, 124.0], [16.5, 125.0], [16.6, 125.0], [16.7, 125.0], [16.8, 126.0], [16.9, 126.0], [17.0, 127.0], [17.1, 127.0], [17.2, 127.0], [17.3, 127.0], [17.4, 127.0], [17.5, 127.0], [17.6, 127.0], [17.7, 127.0], [17.8, 128.0], [17.9, 128.0], [18.0, 128.0], [18.1, 128.0], [18.2, 128.0], [18.3, 128.0], [18.4, 128.0], [18.5, 128.0], [18.6, 128.0], [18.7, 128.0], [18.8, 129.0], [18.9, 129.0], [19.0, 129.0], [19.1, 129.0], [19.2, 129.0], [19.3, 129.0], [19.4, 129.0], [19.5, 130.0], [19.6, 130.0], [19.7, 130.0], [19.8, 130.0], [19.9, 130.0], [20.0, 130.0], [20.1, 130.0], [20.2, 130.0], [20.3, 131.0], [20.4, 131.0], [20.5, 131.0], [20.6, 131.0], [20.7, 131.0], [20.8, 132.0], [20.9, 132.0], [21.0, 132.0], [21.1, 132.0], [21.2, 132.0], [21.3, 132.0], [21.4, 132.0], [21.5, 132.0], [21.6, 132.0], [21.7, 132.0], [21.8, 133.0], [21.9, 133.0], [22.0, 133.0], [22.1, 133.0], [22.2, 133.0], [22.3, 133.0], [22.4, 133.0], [22.5, 134.0], [22.6, 134.0], [22.7, 134.0], [22.8, 134.0], [22.9, 134.0], [23.0, 134.0], [23.1, 134.0], [23.2, 134.0], [23.3, 134.0], [23.4, 134.0], [23.5, 135.0], [23.6, 135.0], [23.7, 135.0], [23.8, 135.0], [23.9, 135.0], [24.0, 136.0], [24.1, 136.0], [24.2, 136.0], [24.3, 137.0], [24.4, 137.0], [24.5, 139.0], [24.6, 139.0], [24.7, 139.0], [24.8, 139.0], [24.9, 139.0], [25.0, 139.0], [25.1, 139.0], [25.2, 139.0], [25.3, 140.0], [25.4, 140.0], [25.5, 140.0], [25.6, 140.0], [25.7, 140.0], [25.8, 141.0], [25.9, 141.0], [26.0, 141.0], [26.1, 141.0], [26.2, 141.0], [26.3, 143.0], [26.4, 143.0], [26.5, 143.0], [26.6, 143.0], [26.7, 143.0], [26.8, 144.0], [26.9, 144.0], [27.0, 144.0], [27.1, 144.0], [27.2, 144.0], [27.3, 144.0], [27.4, 144.0], [27.5, 145.0], [27.6, 145.0], [27.7, 145.0], [27.8, 145.0], [27.9, 145.0], [28.0, 145.0], [28.1, 145.0], [28.2, 145.0], [28.3, 146.0], [28.4, 146.0], [28.5, 147.0], [28.6, 147.0], [28.7, 147.0], [28.8, 148.0], [28.9, 148.0], [29.0, 148.0], [29.1, 148.0], [29.2, 148.0], [29.3, 148.0], [29.4, 148.0], [29.5, 149.0], [29.6, 149.0], [29.7, 149.0], [29.8, 149.0], [29.9, 149.0], [30.0, 149.0], [30.1, 149.0], [30.2, 149.0], [30.3, 151.0], [30.4, 151.0], [30.5, 151.0], [30.6, 151.0], [30.7, 151.0], [30.8, 152.0], [30.9, 152.0], [31.0, 153.0], [31.1, 153.0], [31.2, 153.0], [31.3, 153.0], [31.4, 153.0], [31.5, 153.0], [31.6, 153.0], [31.7, 153.0], [31.8, 153.0], [31.9, 153.0], [32.0, 153.0], [32.1, 153.0], [32.2, 153.0], [32.3, 153.0], [32.4, 153.0], [32.5, 154.0], [32.6, 154.0], [32.7, 154.0], [32.8, 154.0], [32.9, 154.0], [33.0, 155.0], [33.1, 155.0], [33.2, 155.0], [33.3, 156.0], [33.4, 156.0], [33.5, 156.0], [33.6, 156.0], [33.7, 156.0], [33.8, 156.0], [33.9, 156.0], [34.0, 157.0], [34.1, 157.0], [34.2, 157.0], [34.3, 158.0], [34.4, 158.0], [34.5, 158.0], [34.6, 158.0], [34.7, 158.0], [34.8, 158.0], [34.9, 158.0], [35.0, 159.0], [35.1, 159.0], [35.2, 159.0], [35.3, 159.0], [35.4, 159.0], [35.5, 160.0], [35.6, 160.0], [35.7, 160.0], [35.8, 161.0], [35.9, 161.0], [36.0, 162.0], [36.1, 162.0], [36.2, 162.0], [36.3, 163.0], [36.4, 163.0], [36.5, 163.0], [36.6, 163.0], [36.7, 163.0], [36.8, 163.0], [36.9, 163.0], [37.0, 163.0], [37.1, 163.0], [37.2, 163.0], [37.3, 164.0], [37.4, 164.0], [37.5, 165.0], [37.6, 165.0], [37.7, 165.0], [37.8, 165.0], [37.9, 165.0], [38.0, 166.0], [38.1, 166.0], [38.2, 166.0], [38.3, 166.0], [38.4, 166.0], [38.5, 166.0], [38.6, 166.0], [38.7, 166.0], [38.8, 167.0], [38.9, 167.0], [39.0, 167.0], [39.1, 167.0], [39.2, 167.0], [39.3, 168.0], [39.4, 168.0], [39.5, 169.0], [39.6, 169.0], [39.7, 169.0], [39.8, 171.0], [39.9, 171.0], [40.0, 173.0], [40.1, 173.0], [40.2, 173.0], [40.3, 174.0], [40.4, 174.0], [40.5, 174.0], [40.6, 174.0], [40.7, 174.0], [40.8, 175.0], [40.9, 175.0], [41.0, 176.0], [41.1, 176.0], [41.2, 176.0], [41.3, 177.0], [41.4, 177.0], [41.5, 178.0], [41.6, 178.0], [41.7, 178.0], [41.8, 178.0], [41.9, 178.0], [42.0, 180.0], [42.1, 180.0], [42.2, 180.0], [42.3, 181.0], [42.4, 181.0], [42.5, 181.0], [42.6, 181.0], [42.7, 181.0], [42.8, 181.0], [42.9, 181.0], [43.0, 181.0], [43.1, 181.0], [43.2, 181.0], [43.3, 182.0], [43.4, 182.0], [43.5, 184.0], [43.6, 184.0], [43.7, 184.0], [43.8, 184.0], [43.9, 184.0], [44.0, 185.0], [44.1, 185.0], [44.2, 185.0], [44.3, 185.0], [44.4, 185.0], [44.5, 186.0], [44.6, 186.0], [44.7, 186.0], [44.8, 186.0], [44.9, 186.0], [45.0, 187.0], [45.1, 187.0], [45.2, 187.0], [45.3, 188.0], [45.4, 188.0], [45.5, 188.0], [45.6, 188.0], [45.7, 188.0], [45.8, 188.0], [45.9, 188.0], [46.0, 190.0], [46.1, 190.0], [46.2, 190.0], [46.3, 192.0], [46.4, 192.0], [46.5, 192.0], [46.6, 192.0], [46.7, 192.0], [46.8, 192.0], [46.9, 192.0], [47.0, 194.0], [47.1, 194.0], [47.2, 194.0], [47.3, 195.0], [47.4, 195.0], [47.5, 195.0], [47.6, 195.0], [47.7, 195.0], [47.8, 196.0], [47.9, 196.0], [48.0, 196.0], [48.1, 196.0], [48.2, 196.0], [48.3, 196.0], [48.4, 196.0], [48.5, 199.0], [48.6, 199.0], [48.7, 199.0], [48.8, 199.0], [48.9, 199.0], [49.0, 199.0], [49.1, 199.0], [49.2, 199.0], [49.3, 199.0], [49.4, 199.0], [49.5, 200.0], [49.6, 200.0], [49.7, 200.0], [49.8, 200.0], [49.9, 200.0], [50.0, 201.0], [50.1, 201.0], [50.2, 201.0], [50.3, 202.0], [50.4, 202.0], [50.5, 203.0], [50.6, 203.0], [50.7, 203.0], [50.8, 203.0], [50.9, 203.0], [51.0, 203.0], [51.1, 203.0], [51.2, 203.0], [51.3, 204.0], [51.4, 204.0], [51.5, 206.0], [51.6, 206.0], [51.7, 206.0], [51.8, 206.0], [51.9, 206.0], [52.0, 209.0], [52.1, 209.0], [52.2, 209.0], [52.3, 209.0], [52.4, 209.0], [52.5, 209.0], [52.6, 209.0], [52.7, 209.0], [52.8, 209.0], [52.9, 209.0], [53.0, 209.0], [53.1, 209.0], [53.2, 209.0], [53.3, 210.0], [53.4, 210.0], [53.5, 210.0], [53.6, 210.0], [53.7, 210.0], [53.8, 210.0], [53.9, 210.0], [54.0, 211.0], [54.1, 211.0], [54.2, 211.0], [54.3, 211.0], [54.4, 211.0], [54.5, 211.0], [54.6, 211.0], [54.7, 211.0], [54.8, 212.0], [54.9, 212.0], [55.0, 212.0], [55.1, 212.0], [55.2, 212.0], [55.3, 213.0], [55.4, 213.0], [55.5, 213.0], [55.6, 213.0], [55.7, 213.0], [55.8, 217.0], [55.9, 217.0], [56.0, 218.0], [56.1, 218.0], [56.2, 218.0], [56.3, 219.0], [56.4, 219.0], [56.5, 219.0], [56.6, 219.0], [56.7, 219.0], [56.8, 220.0], [56.9, 220.0], [57.0, 221.0], [57.1, 221.0], [57.2, 221.0], [57.3, 221.0], [57.4, 221.0], [57.5, 222.0], [57.6, 222.0], [57.7, 222.0], [57.8, 223.0], [57.9, 223.0], [58.0, 224.0], [58.1, 224.0], [58.2, 224.0], [58.3, 225.0], [58.4, 225.0], [58.5, 227.0], [58.6, 227.0], [58.7, 227.0], [58.8, 227.0], [58.9, 227.0], [59.0, 229.0], [59.1, 229.0], [59.2, 229.0], [59.3, 230.0], [59.4, 230.0], [59.5, 231.0], [59.6, 231.0], [59.7, 231.0], [59.8, 231.0], [59.9, 231.0], [60.0, 235.0], [60.1, 235.0], [60.2, 235.0], [60.3, 236.0], [60.4, 236.0], [60.5, 236.0], [60.6, 236.0], [60.7, 236.0], [60.8, 237.0], [60.9, 237.0], [61.0, 239.0], [61.1, 239.0], [61.2, 239.0], [61.3, 241.0], [61.4, 241.0], [61.5, 241.0], [61.6, 241.0], [61.7, 241.0], [61.8, 242.0], [61.9, 242.0], [62.0, 244.0], [62.1, 244.0], [62.2, 244.0], [62.3, 246.0], [62.4, 246.0], [62.5, 251.0], [62.6, 251.0], [62.7, 251.0], [62.8, 251.0], [62.9, 251.0], [63.0, 252.0], [63.1, 252.0], [63.2, 252.0], [63.3, 252.0], [63.4, 252.0], [63.5, 254.0], [63.6, 254.0], [63.7, 254.0], [63.8, 254.0], [63.9, 254.0], [64.0, 254.0], [64.1, 254.0], [64.2, 254.0], [64.3, 255.0], [64.4, 255.0], [64.5, 256.0], [64.6, 256.0], [64.7, 256.0], [64.8, 257.0], [64.9, 257.0], [65.0, 260.0], [65.1, 260.0], [65.2, 260.0], [65.3, 263.0], [65.4, 263.0], [65.5, 266.0], [65.6, 266.0], [65.7, 266.0], [65.8, 267.0], [65.9, 267.0], [66.0, 269.0], [66.1, 269.0], [66.2, 269.0], [66.3, 269.0], [66.4, 269.0], [66.5, 271.0], [66.6, 271.0], [66.7, 271.0], [66.8, 272.0], [66.9, 272.0], [67.0, 276.0], [67.1, 276.0], [67.2, 276.0], [67.3, 278.0], [67.4, 278.0], [67.5, 278.0], [67.6, 278.0], [67.7, 278.0], [67.8, 279.0], [67.9, 279.0], [68.0, 285.0], [68.1, 285.0], [68.2, 285.0], [68.3, 286.0], [68.4, 286.0], [68.5, 289.0], [68.6, 289.0], [68.7, 289.0], [68.8, 292.0], [68.9, 292.0], [69.0, 293.0], [69.1, 293.0], [69.2, 293.0], [69.3, 297.0], [69.4, 297.0], [69.5, 298.0], [69.6, 298.0], [69.7, 298.0], [69.8, 301.0], [69.9, 301.0], [70.0, 305.0], [70.1, 305.0], [70.2, 305.0], [70.3, 305.0], [70.4, 305.0], [70.5, 308.0], [70.6, 308.0], [70.7, 308.0], [70.8, 308.0], [70.9, 308.0], [71.0, 308.0], [71.1, 308.0], [71.2, 308.0], [71.3, 310.0], [71.4, 310.0], [71.5, 310.0], [71.6, 310.0], [71.7, 310.0], [71.8, 311.0], [71.9, 311.0], [72.0, 312.0], [72.1, 312.0], [72.2, 312.0], [72.3, 313.0], [72.4, 313.0], [72.5, 315.0], [72.6, 315.0], [72.7, 315.0], [72.8, 316.0], [72.9, 316.0], [73.0, 329.0], [73.1, 329.0], [73.2, 329.0], [73.3, 330.0], [73.4, 330.0], [73.5, 333.0], [73.6, 333.0], [73.7, 333.0], [73.8, 336.0], [73.9, 336.0], [74.0, 337.0], [74.1, 337.0], [74.2, 337.0], [74.3, 338.0], [74.4, 338.0], [74.5, 338.0], [74.6, 338.0], [74.7, 338.0], [74.8, 339.0], [74.9, 339.0], [75.0, 339.0], [75.1, 339.0], [75.2, 339.0], [75.3, 340.0], [75.4, 340.0], [75.5, 341.0], [75.6, 341.0], [75.7, 341.0], [75.8, 342.0], [75.9, 342.0], [76.0, 342.0], [76.1, 342.0], [76.2, 342.0], [76.3, 345.0], [76.4, 345.0], [76.5, 356.0], [76.6, 356.0], [76.7, 356.0], [76.8, 357.0], [76.9, 357.0], [77.0, 367.0], [77.1, 367.0], [77.2, 367.0], [77.3, 369.0], [77.4, 369.0], [77.5, 370.0], [77.6, 370.0], [77.7, 370.0], [77.8, 371.0], [77.9, 371.0], [78.0, 372.0], [78.1, 372.0], [78.2, 372.0], [78.3, 375.0], [78.4, 375.0], [78.5, 375.0], [78.6, 375.0], [78.7, 375.0], [78.8, 380.0], [78.9, 380.0], [79.0, 381.0], [79.1, 381.0], [79.2, 381.0], [79.3, 382.0], [79.4, 382.0], [79.5, 386.0], [79.6, 386.0], [79.7, 386.0], [79.8, 387.0], [79.9, 387.0], [80.0, 392.0], [80.1, 392.0], [80.2, 392.0], [80.3, 394.0], [80.4, 394.0], [80.5, 394.0], [80.6, 394.0], [80.7, 394.0], [80.8, 395.0], [80.9, 395.0], [81.0, 397.0], [81.1, 397.0], [81.2, 397.0], [81.3, 397.0], [81.4, 397.0], [81.5, 398.0], [81.6, 398.0], [81.7, 398.0], [81.8, 403.0], [81.9, 403.0], [82.0, 405.0], [82.1, 405.0], [82.2, 405.0], [82.3, 410.0], [82.4, 410.0], [82.5, 410.0], [82.6, 410.0], [82.7, 410.0], [82.8, 422.0], [82.9, 422.0], [83.0, 423.0], [83.1, 423.0], [83.2, 423.0], [83.3, 423.0], [83.4, 423.0], [83.5, 430.0], [83.6, 430.0], [83.7, 430.0], [83.8, 448.0], [83.9, 448.0], [84.0, 451.0], [84.1, 451.0], [84.2, 451.0], [84.3, 454.0], [84.4, 454.0], [84.5, 459.0], [84.6, 459.0], [84.7, 459.0], [84.8, 462.0], [84.9, 462.0], [85.0, 472.0], [85.1, 472.0], [85.2, 472.0], [85.3, 473.0], [85.4, 473.0], [85.5, 488.0], [85.6, 488.0], [85.7, 488.0], [85.8, 490.0], [85.9, 490.0], [86.0, 498.0], [86.1, 498.0], [86.2, 498.0], [86.3, 499.0], [86.4, 499.0], [86.5, 499.0], [86.6, 499.0], [86.7, 499.0], [86.8, 518.0], [86.9, 518.0], [87.0, 522.0], [87.1, 522.0], [87.2, 522.0], [87.3, 536.0], [87.4, 536.0], [87.5, 547.0], [87.6, 547.0], [87.7, 547.0], [87.8, 591.0], [87.9, 591.0], [88.0, 602.0], [88.1, 602.0], [88.2, 602.0], [88.3, 639.0], [88.4, 639.0], [88.5, 650.0], [88.6, 650.0], [88.7, 650.0], [88.8, 656.0], [88.9, 656.0], [89.0, 663.0], [89.1, 663.0], [89.2, 663.0], [89.3, 663.0], [89.4, 663.0], [89.5, 666.0], [89.6, 666.0], [89.7, 666.0], [89.8, 691.0], [89.9, 691.0], [90.0, 694.0], [90.1, 694.0], [90.2, 694.0], [90.3, 721.0], [90.4, 721.0], [90.5, 727.0], [90.6, 727.0], [90.7, 727.0], [90.8, 729.0], [90.9, 729.0], [91.0, 761.0], [91.1, 761.0], [91.2, 761.0], [91.3, 805.0], [91.4, 805.0], [91.5, 811.0], [91.6, 811.0], [91.7, 811.0], [91.8, 820.0], [91.9, 820.0], [92.0, 834.0], [92.1, 834.0], [92.2, 834.0], [92.3, 844.0], [92.4, 844.0], [92.5, 847.0], [92.6, 847.0], [92.7, 847.0], [92.8, 853.0], [92.9, 853.0], [93.0, 873.0], [93.1, 873.0], [93.2, 873.0], [93.3, 884.0], [93.4, 884.0], [93.5, 893.0], [93.6, 893.0], [93.7, 893.0], [93.8, 922.0], [93.9, 922.0], [94.0, 959.0], [94.1, 959.0], [94.2, 959.0], [94.3, 963.0], [94.4, 963.0], [94.5, 973.0], [94.6, 973.0], [94.7, 973.0], [94.8, 982.0], [94.9, 982.0], [95.0, 1022.0], [95.1, 1022.0], [95.2, 1022.0], [95.3, 1041.0], [95.4, 1041.0], [95.5, 1055.0], [95.6, 1055.0], [95.7, 1055.0], [95.8, 1060.0], [95.9, 1060.0], [96.0, 1107.0], [96.1, 1107.0], [96.2, 1107.0], [96.3, 1124.0], [96.4, 1124.0], [96.5, 1140.0], [96.6, 1140.0], [96.7, 1140.0], [96.8, 1160.0], [96.9, 1160.0], [97.0, 1177.0], [97.1, 1177.0], [97.2, 1177.0], [97.3, 1334.0], [97.4, 1334.0], [97.5, 1345.0], [97.6, 1345.0], [97.7, 1345.0], [97.8, 1506.0], [97.9, 1506.0], [98.0, 1564.0], [98.1, 1564.0], [98.2, 1564.0], [98.3, 1831.0], [98.4, 1831.0], [98.5, 1856.0], [98.6, 1856.0], [98.7, 1856.0], [98.8, 3123.0], [98.9, 3123.0], [99.0, 3123.0], [99.1, 3123.0], [99.2, 3123.0], [99.3, 3262.0], [99.4, 3262.0], [99.5, 3273.0], [99.6, 3273.0], [99.7, 3273.0], [99.8, 3319.0], [99.9, 3319.0]], "isOverall": false, "label": "4", "isController": false}, {"data": [[0.0, 78.0], [0.1, 81.0], [0.2, 92.0], [0.3, 94.0], [0.4, 95.0], [0.5, 98.0], [0.6, 99.0], [0.7, 102.0], [0.8, 106.0], [0.9, 110.0], [1.0, 112.0], [1.1, 112.0], [1.2, 117.0], [1.3, 118.0], [1.4, 119.0], [1.5, 120.0], [1.6, 120.0], [1.7, 123.0], [1.8, 123.0], [1.9, 125.0], [2.0, 127.0], [2.1, 128.0], [2.2, 129.0], [2.3, 129.0], [2.4, 130.0], [2.5, 130.0], [2.6, 130.0], [2.7, 133.0], [2.8, 134.0], [2.9, 136.0], [3.0, 137.0], [3.1, 137.0], [3.2, 138.0], [3.3, 139.0], [3.4, 139.0], [3.5, 143.0], [3.6, 143.0], [3.7, 144.0], [3.8, 145.0], [3.9, 145.0], [4.0, 146.0], [4.1, 146.0], [4.2, 147.0], [4.3, 147.0], [4.4, 148.0], [4.5, 149.0], [4.6, 149.0], [4.7, 150.0], [4.8, 150.0], [4.9, 150.0], [5.0, 152.0], [5.1, 152.0], [5.2, 152.0], [5.3, 153.0], [5.4, 154.0], [5.5, 156.0], [5.6, 157.0], [5.7, 158.0], [5.8, 158.0], [5.9, 159.0], [6.0, 159.0], [6.1, 159.0], [6.2, 160.0], [6.3, 161.0], [6.4, 161.0], [6.5, 162.0], [6.6, 163.0], [6.7, 163.0], [6.8, 163.0], [6.9, 164.0], [7.0, 164.0], [7.1, 164.0], [7.2, 166.0], [7.3, 167.0], [7.4, 167.0], [7.5, 167.0], [7.6, 167.0], [7.7, 169.0], [7.8, 169.0], [7.9, 169.0], [8.0, 170.0], [8.1, 171.0], [8.2, 172.0], [8.3, 172.0], [8.4, 174.0], [8.5, 174.0], [8.6, 174.0], [8.7, 176.0], [8.8, 176.0], [8.9, 176.0], [9.0, 177.0], [9.1, 177.0], [9.2, 178.0], [9.3, 179.0], [9.4, 179.0], [9.5, 180.0], [9.6, 180.0], [9.7, 181.0], [9.8, 181.0], [9.9, 182.0], [10.0, 182.0], [10.1, 183.0], [10.2, 184.0], [10.3, 185.0], [10.4, 186.0], [10.5, 187.0], [10.6, 187.0], [10.7, 188.0], [10.8, 189.0], [10.9, 190.0], [11.0, 190.0], [11.1, 190.0], [11.2, 191.0], [11.3, 191.0], [11.4, 192.0], [11.5, 193.0], [11.6, 193.0], [11.7, 195.0], [11.8, 196.0], [11.9, 196.0], [12.0, 197.0], [12.1, 197.0], [12.2, 198.0], [12.3, 198.0], [12.4, 200.0], [12.5, 201.0], [12.6, 201.0], [12.7, 202.0], [12.8, 202.0], [12.9, 203.0], [13.0, 204.0], [13.1, 206.0], [13.2, 207.0], [13.3, 207.0], [13.4, 208.0], [13.5, 208.0], [13.6, 209.0], [13.7, 211.0], [13.8, 211.0], [13.9, 212.0], [14.0, 213.0], [14.1, 213.0], [14.2, 213.0], [14.3, 214.0], [14.4, 215.0], [14.5, 217.0], [14.6, 217.0], [14.7, 218.0], [14.8, 220.0], [14.9, 220.0], [15.0, 221.0], [15.1, 221.0], [15.2, 222.0], [15.3, 223.0], [15.4, 227.0], [15.5, 228.0], [15.6, 229.0], [15.7, 231.0], [15.8, 231.0], [15.9, 231.0], [16.0, 232.0], [16.1, 233.0], [16.2, 234.0], [16.3, 234.0], [16.4, 235.0], [16.5, 236.0], [16.6, 236.0], [16.7, 236.0], [16.8, 237.0], [16.9, 239.0], [17.0, 239.0], [17.1, 239.0], [17.2, 239.0], [17.3, 240.0], [17.4, 241.0], [17.5, 241.0], [17.6, 241.0], [17.7, 243.0], [17.8, 243.0], [17.9, 244.0], [18.0, 245.0], [18.1, 245.0], [18.2, 246.0], [18.3, 246.0], [18.4, 247.0], [18.5, 247.0], [18.6, 247.0], [18.7, 249.0], [18.8, 249.0], [18.9, 249.0], [19.0, 250.0], [19.1, 251.0], [19.2, 252.0], [19.3, 252.0], [19.4, 252.0], [19.5, 253.0], [19.6, 253.0], [19.7, 255.0], [19.8, 255.0], [19.9, 257.0], [20.0, 258.0], [20.1, 258.0], [20.2, 259.0], [20.3, 259.0], [20.4, 260.0], [20.5, 260.0], [20.6, 261.0], [20.7, 262.0], [20.8, 262.0], [20.9, 263.0], [21.0, 263.0], [21.1, 263.0], [21.2, 264.0], [21.3, 265.0], [21.4, 265.0], [21.5, 266.0], [21.6, 266.0], [21.7, 267.0], [21.8, 267.0], [21.9, 268.0], [22.0, 268.0], [22.1, 269.0], [22.2, 269.0], [22.3, 269.0], [22.4, 271.0], [22.5, 272.0], [22.6, 272.0], [22.7, 273.0], [22.8, 273.0], [22.9, 274.0], [23.0, 274.0], [23.1, 275.0], [23.2, 275.0], [23.3, 275.0], [23.4, 276.0], [23.5, 278.0], [23.6, 278.0], [23.7, 278.0], [23.8, 278.0], [23.9, 279.0], [24.0, 279.0], [24.1, 280.0], [24.2, 283.0], [24.3, 283.0], [24.4, 284.0], [24.5, 285.0], [24.6, 285.0], [24.7, 285.0], [24.8, 285.0], [24.9, 287.0], [25.0, 287.0], [25.1, 288.0], [25.2, 288.0], [25.3, 290.0], [25.4, 290.0], [25.5, 291.0], [25.6, 291.0], [25.7, 292.0], [25.8, 292.0], [25.9, 293.0], [26.0, 293.0], [26.1, 294.0], [26.2, 295.0], [26.3, 296.0], [26.4, 297.0], [26.5, 298.0], [26.6, 298.0], [26.7, 298.0], [26.8, 299.0], [26.9, 300.0], [27.0, 300.0], [27.1, 301.0], [27.2, 302.0], [27.3, 302.0], [27.4, 303.0], [27.5, 304.0], [27.6, 304.0], [27.7, 305.0], [27.8, 305.0], [27.9, 306.0], [28.0, 307.0], [28.1, 307.0], [28.2, 308.0], [28.3, 309.0], [28.4, 309.0], [28.5, 313.0], [28.6, 313.0], [28.7, 314.0], [28.8, 314.0], [28.9, 315.0], [29.0, 317.0], [29.1, 317.0], [29.2, 317.0], [29.3, 317.0], [29.4, 320.0], [29.5, 321.0], [29.6, 321.0], [29.7, 321.0], [29.8, 321.0], [29.9, 323.0], [30.0, 323.0], [30.1, 324.0], [30.2, 325.0], [30.3, 326.0], [30.4, 327.0], [30.5, 328.0], [30.6, 328.0], [30.7, 330.0], [30.8, 331.0], [30.9, 332.0], [31.0, 334.0], [31.1, 334.0], [31.2, 335.0], [31.3, 335.0], [31.4, 338.0], [31.5, 340.0], [31.6, 340.0], [31.7, 341.0], [31.8, 341.0], [31.9, 342.0], [32.0, 343.0], [32.1, 345.0], [32.2, 345.0], [32.3, 345.0], [32.4, 345.0], [32.5, 345.0], [32.6, 346.0], [32.7, 346.0], [32.8, 346.0], [32.9, 349.0], [33.0, 349.0], [33.1, 350.0], [33.2, 351.0], [33.3, 351.0], [33.4, 352.0], [33.5, 353.0], [33.6, 355.0], [33.7, 357.0], [33.8, 357.0], [33.9, 359.0], [34.0, 359.0], [34.1, 359.0], [34.2, 360.0], [34.3, 360.0], [34.4, 360.0], [34.5, 361.0], [34.6, 361.0], [34.7, 363.0], [34.8, 363.0], [34.9, 363.0], [35.0, 364.0], [35.1, 365.0], [35.2, 366.0], [35.3, 368.0], [35.4, 368.0], [35.5, 369.0], [35.6, 370.0], [35.7, 371.0], [35.8, 372.0], [35.9, 373.0], [36.0, 373.0], [36.1, 374.0], [36.2, 377.0], [36.3, 378.0], [36.4, 378.0], [36.5, 379.0], [36.6, 380.0], [36.7, 381.0], [36.8, 381.0], [36.9, 384.0], [37.0, 384.0], [37.1, 384.0], [37.2, 386.0], [37.3, 386.0], [37.4, 387.0], [37.5, 388.0], [37.6, 389.0], [37.7, 390.0], [37.8, 390.0], [37.9, 392.0], [38.0, 393.0], [38.1, 394.0], [38.2, 396.0], [38.3, 397.0], [38.4, 397.0], [38.5, 398.0], [38.6, 399.0], [38.7, 400.0], [38.8, 400.0], [38.9, 400.0], [39.0, 401.0], [39.1, 401.0], [39.2, 403.0], [39.3, 403.0], [39.4, 404.0], [39.5, 404.0], [39.6, 404.0], [39.7, 404.0], [39.8, 405.0], [39.9, 408.0], [40.0, 412.0], [40.1, 414.0], [40.2, 415.0], [40.3, 416.0], [40.4, 417.0], [40.5, 417.0], [40.6, 418.0], [40.7, 420.0], [40.8, 420.0], [40.9, 420.0], [41.0, 422.0], [41.1, 423.0], [41.2, 425.0], [41.3, 425.0], [41.4, 426.0], [41.5, 427.0], [41.6, 428.0], [41.7, 428.0], [41.8, 429.0], [41.9, 432.0], [42.0, 433.0], [42.1, 434.0], [42.2, 435.0], [42.3, 436.0], [42.4, 437.0], [42.5, 437.0], [42.6, 437.0], [42.7, 438.0], [42.8, 439.0], [42.9, 440.0], [43.0, 441.0], [43.1, 442.0], [43.2, 443.0], [43.3, 443.0], [43.4, 446.0], [43.5, 446.0], [43.6, 447.0], [43.7, 448.0], [43.8, 449.0], [43.9, 450.0], [44.0, 451.0], [44.1, 451.0], [44.2, 452.0], [44.3, 452.0], [44.4, 454.0], [44.5, 455.0], [44.6, 456.0], [44.7, 458.0], [44.8, 458.0], [44.9, 462.0], [45.0, 462.0], [45.1, 462.0], [45.2, 462.0], [45.3, 462.0], [45.4, 463.0], [45.5, 465.0], [45.6, 465.0], [45.7, 467.0], [45.8, 467.0], [45.9, 469.0], [46.0, 470.0], [46.1, 470.0], [46.2, 471.0], [46.3, 471.0], [46.4, 473.0], [46.5, 474.0], [46.6, 474.0], [46.7, 474.0], [46.8, 477.0], [46.9, 479.0], [47.0, 480.0], [47.1, 480.0], [47.2, 481.0], [47.3, 482.0], [47.4, 483.0], [47.5, 484.0], [47.6, 485.0], [47.7, 485.0], [47.8, 486.0], [47.9, 490.0], [48.0, 493.0], [48.1, 493.0], [48.2, 494.0], [48.3, 495.0], [48.4, 495.0], [48.5, 496.0], [48.6, 498.0], [48.7, 499.0], [48.8, 500.0], [48.9, 501.0], [49.0, 504.0], [49.1, 505.0], [49.2, 508.0], [49.3, 508.0], [49.4, 512.0], [49.5, 512.0], [49.6, 513.0], [49.7, 514.0], [49.8, 514.0], [49.9, 514.0], [50.0, 515.0], [50.1, 516.0], [50.2, 517.0], [50.3, 519.0], [50.4, 519.0], [50.5, 521.0], [50.6, 521.0], [50.7, 522.0], [50.8, 522.0], [50.9, 523.0], [51.0, 525.0], [51.1, 525.0], [51.2, 527.0], [51.3, 528.0], [51.4, 529.0], [51.5, 530.0], [51.6, 531.0], [51.7, 532.0], [51.8, 532.0], [51.9, 533.0], [52.0, 534.0], [52.1, 535.0], [52.2, 535.0], [52.3, 535.0], [52.4, 537.0], [52.5, 538.0], [52.6, 538.0], [52.7, 539.0], [52.8, 539.0], [52.9, 543.0], [53.0, 544.0], [53.1, 544.0], [53.2, 545.0], [53.3, 545.0], [53.4, 546.0], [53.5, 551.0], [53.6, 553.0], [53.7, 554.0], [53.8, 554.0], [53.9, 555.0], [54.0, 556.0], [54.1, 556.0], [54.2, 557.0], [54.3, 557.0], [54.4, 562.0], [54.5, 564.0], [54.6, 564.0], [54.7, 565.0], [54.8, 566.0], [54.9, 567.0], [55.0, 570.0], [55.1, 571.0], [55.2, 573.0], [55.3, 575.0], [55.4, 576.0], [55.5, 579.0], [55.6, 581.0], [55.7, 583.0], [55.8, 584.0], [55.9, 585.0], [56.0, 585.0], [56.1, 585.0], [56.2, 586.0], [56.3, 587.0], [56.4, 588.0], [56.5, 589.0], [56.6, 591.0], [56.7, 593.0], [56.8, 593.0], [56.9, 597.0], [57.0, 598.0], [57.1, 600.0], [57.2, 603.0], [57.3, 604.0], [57.4, 604.0], [57.5, 605.0], [57.6, 605.0], [57.7, 607.0], [57.8, 608.0], [57.9, 609.0], [58.0, 610.0], [58.1, 611.0], [58.2, 614.0], [58.3, 616.0], [58.4, 617.0], [58.5, 619.0], [58.6, 621.0], [58.7, 623.0], [58.8, 626.0], [58.9, 627.0], [59.0, 629.0], [59.1, 630.0], [59.2, 634.0], [59.3, 634.0], [59.4, 638.0], [59.5, 639.0], [59.6, 641.0], [59.7, 642.0], [59.8, 644.0], [59.9, 644.0], [60.0, 646.0], [60.1, 649.0], [60.2, 652.0], [60.3, 654.0], [60.4, 655.0], [60.5, 656.0], [60.6, 656.0], [60.7, 657.0], [60.8, 657.0], [60.9, 658.0], [61.0, 665.0], [61.1, 665.0], [61.2, 666.0], [61.3, 668.0], [61.4, 671.0], [61.5, 675.0], [61.6, 676.0], [61.7, 676.0], [61.8, 677.0], [61.9, 677.0], [62.0, 678.0], [62.1, 679.0], [62.2, 683.0], [62.3, 683.0], [62.4, 684.0], [62.5, 685.0], [62.6, 687.0], [62.7, 688.0], [62.8, 688.0], [62.9, 689.0], [63.0, 690.0], [63.1, 691.0], [63.2, 695.0], [63.3, 695.0], [63.4, 697.0], [63.5, 701.0], [63.6, 704.0], [63.7, 705.0], [63.8, 707.0], [63.9, 708.0], [64.0, 711.0], [64.1, 717.0], [64.2, 718.0], [64.3, 718.0], [64.4, 719.0], [64.5, 720.0], [64.6, 721.0], [64.7, 727.0], [64.8, 727.0], [64.9, 730.0], [65.0, 732.0], [65.1, 732.0], [65.2, 733.0], [65.3, 736.0], [65.4, 741.0], [65.5, 742.0], [65.6, 743.0], [65.7, 744.0], [65.8, 745.0], [65.9, 748.0], [66.0, 750.0], [66.1, 757.0], [66.2, 757.0], [66.3, 759.0], [66.4, 760.0], [66.5, 763.0], [66.6, 766.0], [66.7, 768.0], [66.8, 773.0], [66.9, 779.0], [67.0, 783.0], [67.1, 791.0], [67.2, 794.0], [67.3, 795.0], [67.4, 797.0], [67.5, 799.0], [67.6, 799.0], [67.7, 800.0], [67.8, 804.0], [67.9, 809.0], [68.0, 811.0], [68.1, 815.0], [68.2, 816.0], [68.3, 817.0], [68.4, 818.0], [68.5, 823.0], [68.6, 824.0], [68.7, 826.0], [68.8, 826.0], [68.9, 832.0], [69.0, 836.0], [69.1, 839.0], [69.2, 842.0], [69.3, 843.0], [69.4, 846.0], [69.5, 848.0], [69.6, 849.0], [69.7, 852.0], [69.8, 852.0], [69.9, 853.0], [70.0, 856.0], [70.1, 856.0], [70.2, 862.0], [70.3, 864.0], [70.4, 868.0], [70.5, 870.0], [70.6, 870.0], [70.7, 877.0], [70.8, 880.0], [70.9, 882.0], [71.0, 885.0], [71.1, 885.0], [71.2, 889.0], [71.3, 891.0], [71.4, 899.0], [71.5, 901.0], [71.6, 903.0], [71.7, 907.0], [71.8, 908.0], [71.9, 915.0], [72.0, 916.0], [72.1, 918.0], [72.2, 920.0], [72.3, 924.0], [72.4, 928.0], [72.5, 934.0], [72.6, 935.0], [72.7, 940.0], [72.8, 941.0], [72.9, 942.0], [73.0, 944.0], [73.1, 948.0], [73.2, 951.0], [73.3, 951.0], [73.4, 962.0], [73.5, 965.0], [73.6, 966.0], [73.7, 968.0], [73.8, 968.0], [73.9, 973.0], [74.0, 981.0], [74.1, 982.0], [74.2, 985.0], [74.3, 991.0], [74.4, 1008.0], [74.5, 1012.0], [74.6, 1013.0], [74.7, 1015.0], [74.8, 1017.0], [74.9, 1021.0], [75.0, 1022.0], [75.1, 1023.0], [75.2, 1033.0], [75.3, 1035.0], [75.4, 1042.0], [75.5, 1044.0], [75.6, 1051.0], [75.7, 1055.0], [75.8, 1057.0], [75.9, 1067.0], [76.0, 1070.0], [76.1, 1081.0], [76.2, 1092.0], [76.3, 1093.0], [76.4, 1098.0], [76.5, 1099.0], [76.6, 1100.0], [76.7, 1108.0], [76.8, 1108.0], [76.9, 1120.0], [77.0, 1126.0], [77.1, 1126.0], [77.2, 1127.0], [77.3, 1127.0], [77.4, 1132.0], [77.5, 1139.0], [77.6, 1147.0], [77.7, 1156.0], [77.8, 1159.0], [77.9, 1168.0], [78.0, 1173.0], [78.1, 1179.0], [78.2, 1181.0], [78.3, 1183.0], [78.4, 1188.0], [78.5, 1190.0], [78.6, 1191.0], [78.7, 1198.0], [78.8, 1198.0], [78.9, 1201.0], [79.0, 1205.0], [79.1, 1206.0], [79.2, 1210.0], [79.3, 1211.0], [79.4, 1215.0], [79.5, 1221.0], [79.6, 1221.0], [79.7, 1226.0], [79.8, 1232.0], [79.9, 1233.0], [80.0, 1237.0], [80.1, 1243.0], [80.2, 1245.0], [80.3, 1248.0], [80.4, 1251.0], [80.5, 1260.0], [80.6, 1268.0], [80.7, 1279.0], [80.8, 1280.0], [80.9, 1283.0], [81.0, 1285.0], [81.1, 1290.0], [81.2, 1300.0], [81.3, 1300.0], [81.4, 1307.0], [81.5, 1310.0], [81.6, 1312.0], [81.7, 1327.0], [81.8, 1329.0], [81.9, 1344.0], [82.0, 1349.0], [82.1, 1350.0], [82.2, 1360.0], [82.3, 1369.0], [82.4, 1383.0], [82.5, 1398.0], [82.6, 1402.0], [82.7, 1412.0], [82.8, 1417.0], [82.9, 1429.0], [83.0, 1431.0], [83.1, 1439.0], [83.2, 1456.0], [83.3, 1457.0], [83.4, 1464.0], [83.5, 1467.0], [83.6, 1468.0], [83.7, 1478.0], [83.8, 1480.0], [83.9, 1512.0], [84.0, 1515.0], [84.1, 1517.0], [84.2, 1536.0], [84.3, 1539.0], [84.4, 1563.0], [84.5, 1565.0], [84.6, 1573.0], [84.7, 1585.0], [84.8, 1595.0], [84.9, 1601.0], [85.0, 1603.0], [85.1, 1623.0], [85.2, 1647.0], [85.3, 1651.0], [85.4, 1677.0], [85.5, 1686.0], [85.6, 1688.0], [85.7, 1705.0], [85.8, 1706.0], [85.9, 1723.0], [86.0, 1732.0], [86.1, 1737.0], [86.2, 1748.0], [86.3, 1763.0], [86.4, 1781.0], [86.5, 1788.0], [86.6, 1790.0], [86.7, 1805.0], [86.8, 1805.0], [86.9, 1806.0], [87.0, 1810.0], [87.1, 1824.0], [87.2, 1829.0], [87.3, 1850.0], [87.4, 1858.0], [87.5, 1892.0], [87.6, 1892.0], [87.7, 1925.0], [87.8, 1927.0], [87.9, 1938.0], [88.0, 1943.0], [88.1, 1946.0], [88.2, 2009.0], [88.3, 2011.0], [88.4, 2023.0], [88.5, 2032.0], [88.6, 2040.0], [88.7, 2072.0], [88.8, 2080.0], [88.9, 2098.0], [89.0, 2105.0], [89.1, 2107.0], [89.2, 2150.0], [89.3, 2151.0], [89.4, 2158.0], [89.5, 2185.0], [89.6, 2194.0], [89.7, 2217.0], [89.8, 2219.0], [89.9, 2222.0], [90.0, 2235.0], [90.1, 2236.0], [90.2, 2256.0], [90.3, 2272.0], [90.4, 2288.0], [90.5, 2298.0], [90.6, 2317.0], [90.7, 2342.0], [90.8, 2352.0], [90.9, 2369.0], [91.0, 2393.0], [91.1, 2410.0], [91.2, 2420.0], [91.3, 2429.0], [91.4, 2492.0], [91.5, 2508.0], [91.6, 2518.0], [91.7, 2543.0], [91.8, 2552.0], [91.9, 2568.0], [92.0, 2572.0], [92.1, 2582.0], [92.2, 2608.0], [92.3, 2609.0], [92.4, 2624.0], [92.5, 2660.0], [92.6, 2663.0], [92.7, 2680.0], [92.8, 2692.0], [92.9, 2710.0], [93.0, 2723.0], [93.1, 2846.0], [93.2, 2905.0], [93.3, 2944.0], [93.4, 2976.0], [93.5, 2998.0], [93.6, 3073.0], [93.7, 3179.0], [93.8, 3195.0], [93.9, 3432.0], [94.0, 3463.0], [94.1, 3487.0], [94.2, 3549.0], [94.3, 3550.0], [94.4, 3586.0], [94.5, 3621.0], [94.6, 3626.0], [94.7, 3655.0], [94.8, 3895.0], [94.9, 3975.0], [95.0, 4019.0], [95.1, 4067.0], [95.2, 4090.0], [95.3, 4098.0], [95.4, 4130.0], [95.5, 4260.0], [95.6, 4346.0], [95.7, 4392.0], [95.8, 4413.0], [95.9, 4555.0], [96.0, 4580.0], [96.1, 4658.0], [96.2, 4807.0], [96.3, 4827.0], [96.4, 4910.0], [96.5, 4914.0], [96.6, 4922.0], [96.7, 4958.0], [96.8, 5009.0], [96.9, 5115.0], [97.0, 5164.0], [97.1, 5202.0], [97.2, 5285.0], [97.3, 5305.0], [97.4, 5471.0], [97.5, 5516.0], [97.6, 5522.0], [97.7, 5551.0], [97.8, 5631.0], [97.9, 5892.0], [98.0, 6154.0], [98.1, 6204.0], [98.2, 6549.0], [98.3, 6577.0], [98.4, 6726.0], [98.5, 7246.0], [98.6, 7251.0], [98.7, 7437.0], [98.8, 7871.0], [98.9, 9117.0], [99.0, 9906.0], [99.1, 10019.0], [99.2, 12208.0], [99.3, 12214.0], [99.4, 19021.0], [99.5, 19417.0], [99.6, 24014.0], [99.7, 27240.0], [99.8, 30613.0], [99.9, 39836.0]], "isOverall": false, "label": "16", "isController": false}, {"data": [[0.0, 81.0], [0.1, 81.0], [0.2, 86.0], [0.3, 93.0], [0.4, 94.0], [0.5, 95.0], [0.6, 95.0], [0.7, 95.0], [0.8, 98.0], [0.9, 100.0], [1.0, 101.0], [1.1, 101.0], [1.2, 102.0], [1.3, 102.0], [1.4, 105.0], [1.5, 106.0], [1.6, 106.0], [1.7, 109.0], [1.8, 110.0], [1.9, 111.0], [2.0, 111.0], [2.1, 111.0], [2.2, 112.0], [2.3, 113.0], [2.4, 113.0], [2.5, 113.0], [2.6, 113.0], [2.7, 113.0], [2.8, 115.0], [2.9, 115.0], [3.0, 117.0], [3.1, 117.0], [3.2, 117.0], [3.3, 120.0], [3.4, 120.0], [3.5, 121.0], [3.6, 121.0], [3.7, 123.0], [3.8, 123.0], [3.9, 124.0], [4.0, 124.0], [4.1, 124.0], [4.2, 124.0], [4.3, 125.0], [4.4, 125.0], [4.5, 126.0], [4.6, 126.0], [4.7, 126.0], [4.8, 128.0], [4.9, 129.0], [5.0, 130.0], [5.1, 130.0], [5.2, 130.0], [5.3, 132.0], [5.4, 133.0], [5.5, 133.0], [5.6, 133.0], [5.7, 134.0], [5.8, 134.0], [5.9, 135.0], [6.0, 137.0], [6.1, 137.0], [6.2, 139.0], [6.3, 140.0], [6.4, 140.0], [6.5, 141.0], [6.6, 141.0], [6.7, 141.0], [6.8, 142.0], [6.9, 143.0], [7.0, 143.0], [7.1, 143.0], [7.2, 143.0], [7.3, 144.0], [7.4, 145.0], [7.5, 145.0], [7.6, 145.0], [7.7, 145.0], [7.8, 145.0], [7.9, 146.0], [8.0, 147.0], [8.1, 147.0], [8.2, 147.0], [8.3, 147.0], [8.4, 149.0], [8.5, 149.0], [8.6, 149.0], [8.7, 149.0], [8.8, 150.0], [8.9, 151.0], [9.0, 151.0], [9.1, 151.0], [9.2, 151.0], [9.3, 153.0], [9.4, 153.0], [9.5, 153.0], [9.6, 153.0], [9.7, 154.0], [9.8, 157.0], [9.9, 158.0], [10.0, 159.0], [10.1, 159.0], [10.2, 159.0], [10.3, 160.0], [10.4, 160.0], [10.5, 161.0], [10.6, 161.0], [10.7, 161.0], [10.8, 161.0], [10.9, 162.0], [11.0, 163.0], [11.1, 163.0], [11.2, 163.0], [11.3, 164.0], [11.4, 165.0], [11.5, 165.0], [11.6, 165.0], [11.7, 165.0], [11.8, 166.0], [11.9, 167.0], [12.0, 168.0], [12.1, 168.0], [12.2, 168.0], [12.3, 168.0], [12.4, 170.0], [12.5, 171.0], [12.6, 171.0], [12.7, 171.0], [12.8, 171.0], [12.9, 171.0], [13.0, 171.0], [13.1, 171.0], [13.2, 172.0], [13.3, 172.0], [13.4, 172.0], [13.5, 172.0], [13.6, 172.0], [13.7, 172.0], [13.8, 173.0], [13.9, 173.0], [14.0, 174.0], [14.1, 174.0], [14.2, 174.0], [14.3, 175.0], [14.4, 175.0], [14.5, 176.0], [14.6, 176.0], [14.7, 176.0], [14.8, 176.0], [14.9, 176.0], [15.0, 176.0], [15.1, 176.0], [15.2, 176.0], [15.3, 176.0], [15.4, 177.0], [15.5, 177.0], [15.6, 177.0], [15.7, 177.0], [15.8, 178.0], [15.9, 178.0], [16.0, 178.0], [16.1, 178.0], [16.2, 179.0], [16.3, 179.0], [16.4, 180.0], [16.5, 180.0], [16.6, 180.0], [16.7, 181.0], [16.8, 181.0], [16.9, 181.0], [17.0, 181.0], [17.1, 181.0], [17.2, 182.0], [17.3, 182.0], [17.4, 184.0], [17.5, 185.0], [17.6, 185.0], [17.7, 186.0], [17.8, 186.0], [17.9, 186.0], [18.0, 186.0], [18.1, 186.0], [18.2, 186.0], [18.3, 187.0], [18.4, 187.0], [18.5, 187.0], [18.6, 187.0], [18.7, 187.0], [18.8, 189.0], [18.9, 189.0], [19.0, 190.0], [19.1, 190.0], [19.2, 191.0], [19.3, 191.0], [19.4, 191.0], [19.5, 191.0], [19.6, 191.0], [19.7, 192.0], [19.8, 192.0], [19.9, 192.0], [20.0, 192.0], [20.1, 192.0], [20.2, 193.0], [20.3, 193.0], [20.4, 193.0], [20.5, 194.0], [20.6, 194.0], [20.7, 194.0], [20.8, 194.0], [20.9, 194.0], [21.0, 194.0], [21.1, 194.0], [21.2, 195.0], [21.3, 195.0], [21.4, 196.0], [21.5, 198.0], [21.6, 198.0], [21.7, 198.0], [21.8, 199.0], [21.9, 199.0], [22.0, 200.0], [22.1, 200.0], [22.2, 200.0], [22.3, 201.0], [22.4, 201.0], [22.5, 201.0], [22.6, 201.0], [22.7, 202.0], [22.8, 203.0], [22.9, 203.0], [23.0, 203.0], [23.1, 203.0], [23.2, 204.0], [23.3, 205.0], [23.4, 206.0], [23.5, 206.0], [23.6, 206.0], [23.7, 207.0], [23.8, 209.0], [23.9, 212.0], [24.0, 212.0], [24.1, 212.0], [24.2, 213.0], [24.3, 214.0], [24.4, 214.0], [24.5, 214.0], [24.6, 214.0], [24.7, 216.0], [24.8, 216.0], [24.9, 216.0], [25.0, 216.0], [25.1, 216.0], [25.2, 217.0], [25.3, 219.0], [25.4, 220.0], [25.5, 221.0], [25.6, 221.0], [25.7, 222.0], [25.8, 222.0], [25.9, 224.0], [26.0, 224.0], [26.1, 224.0], [26.2, 224.0], [26.3, 227.0], [26.4, 228.0], [26.5, 230.0], [26.6, 230.0], [26.7, 230.0], [26.8, 231.0], [26.9, 231.0], [27.0, 231.0], [27.1, 231.0], [27.2, 231.0], [27.3, 232.0], [27.4, 233.0], [27.5, 233.0], [27.6, 233.0], [27.7, 233.0], [27.8, 234.0], [27.9, 236.0], [28.0, 236.0], [28.1, 236.0], [28.2, 237.0], [28.3, 238.0], [28.4, 238.0], [28.5, 239.0], [28.6, 239.0], [28.7, 240.0], [28.8, 241.0], [28.9, 241.0], [29.0, 244.0], [29.1, 244.0], [29.2, 244.0], [29.3, 245.0], [29.4, 246.0], [29.5, 247.0], [29.6, 247.0], [29.7, 248.0], [29.8, 248.0], [29.9, 248.0], [30.0, 249.0], [30.1, 249.0], [30.2, 250.0], [30.3, 250.0], [30.4, 251.0], [30.5, 252.0], [30.6, 252.0], [30.7, 252.0], [30.8, 253.0], [30.9, 253.0], [31.0, 254.0], [31.1, 254.0], [31.2, 254.0], [31.3, 254.0], [31.4, 255.0], [31.5, 255.0], [31.6, 255.0], [31.7, 256.0], [31.8, 256.0], [31.9, 257.0], [32.0, 257.0], [32.1, 257.0], [32.2, 257.0], [32.3, 258.0], [32.4, 259.0], [32.5, 260.0], [32.6, 260.0], [32.7, 260.0], [32.8, 260.0], [32.9, 261.0], [33.0, 261.0], [33.1, 261.0], [33.2, 262.0], [33.3, 263.0], [33.4, 263.0], [33.5, 263.0], [33.6, 263.0], [33.7, 263.0], [33.8, 263.0], [33.9, 263.0], [34.0, 266.0], [34.1, 266.0], [34.2, 266.0], [34.3, 266.0], [34.4, 267.0], [34.5, 269.0], [34.6, 269.0], [34.7, 269.0], [34.8, 270.0], [34.9, 271.0], [35.0, 271.0], [35.1, 271.0], [35.2, 272.0], [35.3, 273.0], [35.4, 274.0], [35.5, 274.0], [35.6, 274.0], [35.7, 274.0], [35.8, 275.0], [35.9, 275.0], [36.0, 275.0], [36.1, 275.0], [36.2, 276.0], [36.3, 276.0], [36.4, 276.0], [36.5, 276.0], [36.6, 276.0], [36.7, 276.0], [36.8, 277.0], [36.9, 277.0], [37.0, 277.0], [37.1, 277.0], [37.2, 278.0], [37.3, 278.0], [37.4, 278.0], [37.5, 278.0], [37.6, 278.0], [37.7, 279.0], [37.8, 280.0], [37.9, 281.0], [38.0, 282.0], [38.1, 282.0], [38.2, 282.0], [38.3, 284.0], [38.4, 284.0], [38.5, 285.0], [38.6, 285.0], [38.7, 286.0], [38.8, 286.0], [38.9, 287.0], [39.0, 289.0], [39.1, 289.0], [39.2, 292.0], [39.3, 294.0], [39.4, 295.0], [39.5, 296.0], [39.6, 296.0], [39.7, 297.0], [39.8, 298.0], [39.9, 298.0], [40.0, 298.0], [40.1, 298.0], [40.2, 299.0], [40.3, 300.0], [40.4, 301.0], [40.5, 301.0], [40.6, 301.0], [40.7, 301.0], [40.8, 302.0], [40.9, 302.0], [41.0, 303.0], [41.1, 303.0], [41.2, 304.0], [41.3, 305.0], [41.4, 306.0], [41.5, 307.0], [41.6, 307.0], [41.7, 307.0], [41.8, 309.0], [41.9, 309.0], [42.0, 310.0], [42.1, 310.0], [42.2, 310.0], [42.3, 310.0], [42.4, 310.0], [42.5, 311.0], [42.6, 311.0], [42.7, 312.0], [42.8, 313.0], [42.9, 314.0], [43.0, 314.0], [43.1, 314.0], [43.2, 315.0], [43.3, 317.0], [43.4, 317.0], [43.5, 317.0], [43.6, 317.0], [43.7, 317.0], [43.8, 318.0], [43.9, 319.0], [44.0, 319.0], [44.1, 319.0], [44.2, 319.0], [44.3, 320.0], [44.4, 320.0], [44.5, 320.0], [44.6, 320.0], [44.7, 320.0], [44.8, 322.0], [44.9, 322.0], [45.0, 324.0], [45.1, 324.0], [45.2, 324.0], [45.3, 324.0], [45.4, 328.0], [45.5, 328.0], [45.6, 328.0], [45.7, 331.0], [45.8, 331.0], [45.9, 331.0], [46.0, 332.0], [46.1, 332.0], [46.2, 332.0], [46.3, 332.0], [46.4, 334.0], [46.5, 336.0], [46.6, 336.0], [46.7, 338.0], [46.8, 339.0], [46.9, 339.0], [47.0, 339.0], [47.1, 339.0], [47.2, 340.0], [47.3, 340.0], [47.4, 341.0], [47.5, 341.0], [47.6, 341.0], [47.7, 342.0], [47.8, 342.0], [47.9, 343.0], [48.0, 343.0], [48.1, 343.0], [48.2, 346.0], [48.3, 346.0], [48.4, 346.0], [48.5, 348.0], [48.6, 348.0], [48.7, 349.0], [48.8, 349.0], [48.9, 350.0], [49.0, 350.0], [49.1, 350.0], [49.2, 351.0], [49.3, 352.0], [49.4, 353.0], [49.5, 356.0], [49.6, 356.0], [49.7, 359.0], [49.8, 360.0], [49.9, 361.0], [50.0, 365.0], [50.1, 365.0], [50.2, 365.0], [50.3, 366.0], [50.4, 367.0], [50.5, 367.0], [50.6, 367.0], [50.7, 369.0], [50.8, 373.0], [50.9, 374.0], [51.0, 374.0], [51.1, 374.0], [51.2, 375.0], [51.3, 375.0], [51.4, 377.0], [51.5, 380.0], [51.6, 380.0], [51.7, 383.0], [51.8, 385.0], [51.9, 386.0], [52.0, 388.0], [52.1, 388.0], [52.2, 388.0], [52.3, 388.0], [52.4, 391.0], [52.5, 392.0], [52.6, 392.0], [52.7, 396.0], [52.8, 396.0], [52.9, 397.0], [53.0, 398.0], [53.1, 398.0], [53.2, 398.0], [53.3, 399.0], [53.4, 399.0], [53.5, 399.0], [53.6, 399.0], [53.7, 400.0], [53.8, 401.0], [53.9, 401.0], [54.0, 402.0], [54.1, 402.0], [54.2, 403.0], [54.3, 403.0], [54.4, 404.0], [54.5, 404.0], [54.6, 404.0], [54.7, 407.0], [54.8, 408.0], [54.9, 409.0], [55.0, 409.0], [55.1, 409.0], [55.2, 409.0], [55.3, 409.0], [55.4, 410.0], [55.5, 410.0], [55.6, 410.0], [55.7, 411.0], [55.8, 412.0], [55.9, 412.0], [56.0, 413.0], [56.1, 413.0], [56.2, 414.0], [56.3, 414.0], [56.4, 414.0], [56.5, 416.0], [56.6, 416.0], [56.7, 416.0], [56.8, 417.0], [56.9, 419.0], [57.0, 419.0], [57.1, 419.0], [57.2, 420.0], [57.3, 421.0], [57.4, 422.0], [57.5, 422.0], [57.6, 422.0], [57.7, 423.0], [57.8, 424.0], [57.9, 425.0], [58.0, 425.0], [58.1, 425.0], [58.2, 426.0], [58.3, 428.0], [58.4, 434.0], [58.5, 436.0], [58.6, 436.0], [58.7, 436.0], [58.8, 436.0], [58.9, 439.0], [59.0, 440.0], [59.1, 440.0], [59.2, 440.0], [59.3, 441.0], [59.4, 442.0], [59.5, 442.0], [59.6, 442.0], [59.7, 445.0], [59.8, 450.0], [59.9, 451.0], [60.0, 451.0], [60.1, 451.0], [60.2, 456.0], [60.3, 457.0], [60.4, 457.0], [60.5, 458.0], [60.6, 458.0], [60.7, 459.0], [60.8, 460.0], [60.9, 462.0], [61.0, 465.0], [61.1, 465.0], [61.2, 466.0], [61.3, 468.0], [61.4, 471.0], [61.5, 474.0], [61.6, 474.0], [61.7, 475.0], [61.8, 476.0], [61.9, 476.0], [62.0, 478.0], [62.1, 478.0], [62.2, 479.0], [62.3, 480.0], [62.4, 480.0], [62.5, 481.0], [62.6, 481.0], [62.7, 482.0], [62.8, 482.0], [62.9, 483.0], [63.0, 486.0], [63.1, 486.0], [63.2, 486.0], [63.3, 487.0], [63.4, 487.0], [63.5, 489.0], [63.6, 489.0], [63.7, 489.0], [63.8, 493.0], [63.9, 494.0], [64.0, 495.0], [64.1, 495.0], [64.2, 496.0], [64.3, 498.0], [64.4, 500.0], [64.5, 500.0], [64.6, 500.0], [64.7, 501.0], [64.8, 503.0], [64.9, 504.0], [65.0, 504.0], [65.1, 504.0], [65.2, 506.0], [65.3, 506.0], [65.4, 507.0], [65.5, 508.0], [65.6, 508.0], [65.7, 510.0], [65.8, 512.0], [65.9, 513.0], [66.0, 513.0], [66.1, 513.0], [66.2, 514.0], [66.3, 522.0], [66.4, 523.0], [66.5, 524.0], [66.6, 524.0], [66.7, 525.0], [66.8, 527.0], [66.9, 532.0], [67.0, 532.0], [67.1, 532.0], [67.2, 534.0], [67.3, 535.0], [67.4, 539.0], [67.5, 540.0], [67.6, 540.0], [67.7, 541.0], [67.8, 542.0], [67.9, 542.0], [68.0, 542.0], [68.1, 542.0], [68.2, 543.0], [68.3, 543.0], [68.4, 546.0], [68.5, 547.0], [68.6, 547.0], [68.7, 551.0], [68.8, 553.0], [68.9, 557.0], [69.0, 558.0], [69.1, 558.0], [69.2, 558.0], [69.3, 559.0], [69.4, 559.0], [69.5, 560.0], [69.6, 560.0], [69.7, 560.0], [69.8, 563.0], [69.9, 564.0], [70.0, 565.0], [70.1, 565.0], [70.2, 572.0], [70.3, 574.0], [70.4, 575.0], [70.5, 586.0], [70.6, 586.0], [70.7, 587.0], [70.8, 588.0], [70.9, 590.0], [71.0, 591.0], [71.1, 591.0], [71.2, 592.0], [71.3, 592.0], [71.4, 595.0], [71.5, 595.0], [71.6, 595.0], [71.7, 595.0], [71.8, 596.0], [71.9, 598.0], [72.0, 599.0], [72.1, 599.0], [72.2, 602.0], [72.3, 605.0], [72.4, 605.0], [72.5, 606.0], [72.6, 606.0], [72.7, 613.0], [72.8, 614.0], [72.9, 614.0], [73.0, 614.0], [73.1, 614.0], [73.2, 616.0], [73.3, 620.0], [73.4, 623.0], [73.5, 624.0], [73.6, 624.0], [73.7, 625.0], [73.8, 629.0], [73.9, 630.0], [74.0, 634.0], [74.1, 634.0], [74.2, 637.0], [74.3, 637.0], [74.4, 642.0], [74.5, 646.0], [74.6, 646.0], [74.7, 646.0], [74.8, 647.0], [74.9, 647.0], [75.0, 650.0], [75.1, 650.0], [75.2, 652.0], [75.3, 658.0], [75.4, 659.0], [75.5, 664.0], [75.6, 664.0], [75.7, 665.0], [75.8, 666.0], [75.9, 670.0], [76.0, 673.0], [76.1, 673.0], [76.2, 674.0], [76.3, 676.0], [76.4, 677.0], [76.5, 678.0], [76.6, 678.0], [76.7, 681.0], [76.8, 685.0], [76.9, 685.0], [77.0, 686.0], [77.1, 686.0], [77.2, 686.0], [77.3, 688.0], [77.4, 698.0], [77.5, 699.0], [77.6, 699.0], [77.7, 706.0], [77.8, 710.0], [77.9, 712.0], [78.0, 715.0], [78.1, 715.0], [78.2, 715.0], [78.3, 716.0], [78.4, 719.0], [78.5, 719.0], [78.6, 719.0], [78.7, 725.0], [78.8, 725.0], [78.9, 727.0], [79.0, 730.0], [79.1, 730.0], [79.2, 731.0], [79.3, 737.0], [79.4, 738.0], [79.5, 738.0], [79.6, 738.0], [79.7, 740.0], [79.8, 740.0], [79.9, 740.0], [80.0, 741.0], [80.1, 741.0], [80.2, 743.0], [80.3, 747.0], [80.4, 748.0], [80.5, 748.0], [80.6, 748.0], [80.7, 750.0], [80.8, 755.0], [80.9, 763.0], [81.0, 763.0], [81.1, 763.0], [81.2, 770.0], [81.3, 771.0], [81.4, 773.0], [81.5, 773.0], [81.6, 773.0], [81.7, 775.0], [81.8, 777.0], [81.9, 780.0], [82.0, 780.0], [82.1, 780.0], [82.2, 782.0], [82.3, 786.0], [82.4, 795.0], [82.5, 799.0], [82.6, 799.0], [82.7, 810.0], [82.8, 811.0], [82.9, 812.0], [83.0, 815.0], [83.1, 815.0], [83.2, 819.0], [83.3, 822.0], [83.4, 832.0], [83.5, 832.0], [83.6, 832.0], [83.7, 836.0], [83.8, 849.0], [83.9, 849.0], [84.0, 852.0], [84.1, 852.0], [84.2, 856.0], [84.3, 862.0], [84.4, 870.0], [84.5, 888.0], [84.6, 888.0], [84.7, 891.0], [84.8, 892.0], [84.9, 928.0], [85.0, 941.0], [85.1, 941.0], [85.2, 945.0], [85.3, 951.0], [85.4, 952.0], [85.5, 953.0], [85.6, 953.0], [85.7, 986.0], [85.8, 992.0], [85.9, 999.0], [86.0, 1003.0], [86.1, 1003.0], [86.2, 1015.0], [86.3, 1024.0], [86.4, 1028.0], [86.5, 1032.0], [86.6, 1032.0], [86.7, 1077.0], [86.8, 1080.0], [86.9, 1087.0], [87.0, 1088.0], [87.1, 1088.0], [87.2, 1090.0], [87.3, 1106.0], [87.4, 1112.0], [87.5, 1112.0], [87.6, 1112.0], [87.7, 1117.0], [87.8, 1120.0], [87.9, 1129.0], [88.0, 1146.0], [88.1, 1146.0], [88.2, 1153.0], [88.3, 1165.0], [88.4, 1187.0], [88.5, 1189.0], [88.6, 1189.0], [88.7, 1207.0], [88.8, 1209.0], [88.9, 1212.0], [89.0, 1235.0], [89.1, 1235.0], [89.2, 1248.0], [89.3, 1258.0], [89.4, 1285.0], [89.5, 1361.0], [89.6, 1361.0], [89.7, 1362.0], [89.8, 1368.0], [89.9, 1369.0], [90.0, 1388.0], [90.1, 1388.0], [90.2, 1415.0], [90.3, 1421.0], [90.4, 1426.0], [90.5, 1431.0], [90.6, 1431.0], [90.7, 1459.0], [90.8, 1464.0], [90.9, 1469.0], [91.0, 1486.0], [91.1, 1486.0], [91.2, 1489.0], [91.3, 1492.0], [91.4, 1497.0], [91.5, 1521.0], [91.6, 1521.0], [91.7, 1540.0], [91.8, 1560.0], [91.9, 1574.0], [92.0, 1581.0], [92.1, 1581.0], [92.2, 1586.0], [92.3, 1618.0], [92.4, 1619.0], [92.5, 1707.0], [92.6, 1707.0], [92.7, 1710.0], [92.8, 1724.0], [92.9, 1730.0], [93.0, 1748.0], [93.1, 1748.0], [93.2, 1762.0], [93.3, 1770.0], [93.4, 1776.0], [93.5, 1836.0], [93.6, 1836.0], [93.7, 1840.0], [93.8, 1903.0], [93.9, 1909.0], [94.0, 1910.0], [94.1, 1910.0], [94.2, 1919.0], [94.3, 1962.0], [94.4, 1970.0], [94.5, 2011.0], [94.6, 2011.0], [94.7, 2024.0], [94.8, 2033.0], [94.9, 2076.0], [95.0, 2088.0], [95.1, 2088.0], [95.2, 2097.0], [95.3, 2106.0], [95.4, 2122.0], [95.5, 2135.0], [95.6, 2135.0], [95.7, 2147.0], [95.8, 2166.0], [95.9, 2261.0], [96.0, 2347.0], [96.1, 2347.0], [96.2, 2372.0], [96.3, 2377.0], [96.4, 2381.0], [96.5, 2382.0], [96.6, 2382.0], [96.7, 2407.0], [96.8, 2418.0], [96.9, 2452.0], [97.0, 2454.0], [97.1, 2454.0], [97.2, 2470.0], [97.3, 2496.0], [97.4, 2507.0], [97.5, 2511.0], [97.6, 2511.0], [97.7, 2583.0], [97.8, 2641.0], [97.9, 2679.0], [98.0, 2769.0], [98.1, 2769.0], [98.2, 3008.0], [98.3, 3214.0], [98.4, 3915.0], [98.5, 3969.0], [98.6, 3969.0], [98.7, 3993.0], [98.8, 4012.0], [98.9, 4039.0], [99.0, 4502.0], [99.1, 4502.0], [99.2, 4563.0], [99.3, 4886.0], [99.4, 5108.0], [99.5, 5191.0], [99.6, 5191.0], [99.7, 5247.0], [99.8, 6403.0], [99.9, 7269.0]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 232.0, "series": [{"data": [[0.0, 23.0], [300.0, 5.0], [700.0, 1.0], [100.0, 57.0], [200.0, 8.0], [400.0, 3.0], [1600.0, 1.0], [1700.0, 1.0], [500.0, 1.0]], "isOverall": false, "label": "1", "isController": false}, {"data": [[0.0, 32.0], [2200.0, 2.0], [300.0, 11.0], [600.0, 2.0], [700.0, 3.0], [1400.0, 1.0], [100.0, 102.0], [200.0, 39.0], [400.0, 3.0], [800.0, 1.0], [900.0, 1.0], [500.0, 3.0]], "isOverall": false, "label": "2", "isController": false}, {"data": [[0.0, 19.0], [600.0, 9.0], [700.0, 4.0], [3100.0, 2.0], [200.0, 81.0], [800.0, 10.0], [3200.0, 2.0], [3300.0, 1.0], [900.0, 5.0], [1000.0, 4.0], [1100.0, 5.0], [300.0, 48.0], [1300.0, 2.0], [1500.0, 2.0], [100.0, 179.0], [400.0, 20.0], [1800.0, 2.0], [500.0, 5.0]], "isOverall": false, "label": "4", "isController": false}, {"data": [[0.0, 10.0], [600.0, 103.0], [700.0, 66.0], [800.0, 61.0], [900.0, 47.0], [1000.0, 35.0], [1100.0, 37.0], [1200.0, 37.0], [1300.0, 22.0], [1400.0, 21.0], [1500.0, 15.0], [1600.0, 14.0], [1700.0, 16.0], [1800.0, 15.0], [1900.0, 9.0], [2000.0, 12.0], [2100.0, 12.0], [2200.0, 14.0], [2300.0, 8.0], [2400.0, 6.0], [2500.0, 12.0], [2600.0, 11.0], [2700.0, 3.0], [2800.0, 2.0], [2900.0, 6.0], [3000.0, 1.0], [3100.0, 3.0], [3400.0, 5.0], [3500.0, 5.0], [3600.0, 5.0], [3800.0, 1.0], [3900.0, 3.0], [4000.0, 5.0], [4300.0, 3.0], [4100.0, 3.0], [4200.0, 1.0], [4500.0, 4.0], [4600.0, 1.0], [4400.0, 1.0], [4700.0, 1.0], [4800.0, 3.0], [5100.0, 3.0], [4900.0, 6.0], [5000.0, 2.0], [5300.0, 2.0], [5200.0, 3.0], [5400.0, 1.0], [5600.0, 1.0], [5500.0, 5.0], [5800.0, 1.0], [5700.0, 1.0], [6100.0, 1.0], [5900.0, 1.0], [6200.0, 1.0], [6400.0, 1.0], [6500.0, 2.0], [6600.0, 1.0], [6700.0, 1.0], [7000.0, 1.0], [7300.0, 1.0], [7400.0, 1.0], [7200.0, 2.0], [7800.0, 1.0], [8000.0, 1.0], [9100.0, 1.0], [9800.0, 1.0], [9900.0, 1.0], [10000.0, 1.0], [10900.0, 1.0], [12200.0, 2.0], [15600.0, 1.0], [19400.0, 1.0], [19000.0, 1.0], [19100.0, 1.0], [24000.0, 1.0], [24400.0, 1.0], [100.0, 188.0], [27200.0, 1.0], [30600.0, 1.0], [31200.0, 1.0], [39800.0, 1.0], [41500.0, 1.0], [200.0, 232.0], [300.0, 188.0], [400.0, 162.0], [500.0, 133.0]], "isOverall": false, "label": "16", "isController": false}, {"data": [[0.0, 7.0], [600.0, 44.0], [700.0, 40.0], [800.0, 18.0], [900.0, 9.0], [1000.0, 10.0], [1100.0, 11.0], [1200.0, 7.0], [1300.0, 5.0], [1400.0, 11.0], [1500.0, 6.0], [100.0, 169.0], [1600.0, 2.0], [1700.0, 8.0], [1800.0, 2.0], [1900.0, 6.0], [2000.0, 6.0], [2100.0, 5.0], [2300.0, 5.0], [2200.0, 1.0], [2400.0, 6.0], [2500.0, 3.0], [2600.0, 2.0], [2700.0, 1.0], [3000.0, 1.0], [200.0, 146.0], [3200.0, 1.0], [3900.0, 3.0], [4000.0, 2.0], [4500.0, 2.0], [300.0, 107.0], [4800.0, 1.0], [5100.0, 2.0], [5200.0, 1.0], [400.0, 86.0], [6400.0, 1.0], [7200.0, 1.0], [500.0, 62.0]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 41500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 339.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1928.0, "series": [{"data": [[0.0, 1928.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 833.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 339.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.70759275E12, "maxY": 16.0, "series": [{"data": [[1.70759277E12, 1.0], [1.70759276E12, 1.0], [1.70759275E12, 1.0]], "isOverall": false, "label": "1", "isController": false}, {"data": [[1.70759279E12, 1.9277108433734942], [1.70759278E12, 2.0], [1.70759277E12, 1.8888888888888888], [1.7075928E12, 1.0]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.70759283E12, 3.2280701754385963], [1.70759282E12, 4.0], [1.70759281E12, 4.0], [1.7075928E12, 3.8490566037735845]], "isOverall": false, "label": "4", "isController": false}, {"data": [[1.70759294E12, 16.0], [1.70759292E12, 16.0], [1.7075929E12, 15.34313725490196], [1.70759303E12, 1.0], [1.70759301E12, 8.303278688524596], [1.70759299E12, 14.326241134751777], [1.70759297E12, 16.0], [1.70759295E12, 16.0], [1.70759293E12, 16.0], [1.70759291E12, 16.0], [1.70759289E12, 3.3333333333333335], [1.70759302E12, 3.7755102040816344], [1.707593E12, 10.448979591836734], [1.70759298E12, 15.776699029126219], [1.70759296E12, 16.0]], "isOverall": false, "label": "16", "isController": false}, {"data": [[1.70759289E12, 5.310344827586209], [1.70759288E12, 7.9292035398230105], [1.70759287E12, 8.0], [1.70759286E12, 8.0], [1.70759285E12, 8.0], [1.70759284E12, 8.0], [1.70759283E12, 7.344827586206895]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.70759303E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 113.2, "minX": 1.0, "maxY": 1469.652631578948, "series": [{"data": [[1.0, 196.80999999999995]], "isOverall": false, "label": "1", "isController": false}, {"data": [[1.0, 196.80999999999995]], "isOverall": false, "label": "1-Aggregated", "isController": false}, {"data": [[1.0, 157.3], [2.0, 222.8263157894736]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.949999999999999, 219.5499999999999]], "isOverall": false, "label": "2-Aggregated", "isController": false}, {"data": [[1.0, 113.2], [2.0, 165.5625], [4.0, 345.6666666666666], [3.0, 249.07692307692307]], "isOverall": false, "label": "4", "isController": false}, {"data": [[3.8499999999999996, 332.4175000000003]], "isOverall": false, "label": "4-Aggregated", "isController": false}, {"data": [[2.0, 180.60000000000002], [8.0, 801.1176470588236], [9.0, 610.7272727272727], [10.0, 1469.652631578948], [11.0, 862.2812499999998], [12.0, 215.0], [3.0, 203.5], [13.0, 940.15], [14.0, 863.15873015873], [15.0, 1300.7499999999993], [4.0, 384.0270270270271], [16.0, 1233.115915363387], [1.0, 225.27027027027026], [5.0, 995.5], [6.0, 359.92682926829264], [7.0, 820.6666666666666]], "isOverall": false, "label": "16", "isController": false}, {"data": [[13.937500000000005, 1127.199375000002]], "isOverall": false, "label": "16-Aggregated", "isController": false}, {"data": [[2.0, 187.76923076923077], [4.0, 198.2], [8.0, 636.8736842105275], [1.0, 153.14285714285714], [5.0, 356.8666666666667], [3.0, 183.72727272727272], [6.0, 786.6666666666667], [7.0, 552.0350877192984]], "isOverall": false, "label": "8", "isController": false}, {"data": [[7.552499999999997, 610.1312500000008]], "isOverall": false, "label": "8-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 16.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 198.1, "minX": 1.70759275E12, "maxY": 1.42717477E7, "series": [{"data": [[1.70759279E12, 7537861.7], [1.70759292E12, 9542116.4], [1.70759275E12, 1055152.8], [1.70759288E12, 9806772.7], [1.70759301E12, 1.24294961E7], [1.70759284E12, 1.30513312E7], [1.70759297E12, 1.04964649E7], [1.7075928E12, 9738178.3], [1.70759293E12, 8623775.3], [1.70759276E12, 5426063.6], [1.70759289E12, 1.20148848E7], [1.70759302E12, 8750393.8], [1.70759285E12, 1.21370311E7], [1.70759298E12, 1.07723642E7], [1.70759281E12, 1.15933162E7], [1.70759294E12, 1.23648335E7], [1.70759277E12, 6464203.0], [1.7075929E12, 1.1470553E7], [1.70759303E12, 3788952.7], [1.70759286E12, 1.09017686E7], [1.70759299E12, 1.37283521E7], [1.70759282E12, 1.03529534E7], [1.70759295E12, 9893185.1], [1.70759278E12, 7894648.7], [1.70759291E12, 1.00386514E7], [1.70759287E12, 1.24663408E7], [1.707593E12, 1.40208552E7], [1.70759283E12, 8621737.4], [1.70759296E12, 1.42717477E7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.70759279E12, 1822.0], [1.70759292E12, 2788.0], [1.70759275E12, 198.1], [1.70759288E12, 2480.8], [1.70759301E12, 2678.1], [1.70759284E12, 2854.4], [1.70759297E12, 2700.4], [1.7075928E12, 2349.1], [1.70759293E12, 2304.8], [1.70759276E12, 1250.9], [1.70759289E12, 2612.2], [1.70759302E12, 2151.2], [1.70759285E12, 2743.4], [1.70759298E12, 2261.3], [1.70759281E12, 2699.8], [1.70759294E12, 3007.2], [1.70759277E12, 1338.7], [1.7075929E12, 2239.6], [1.70759303E12, 373.6], [1.70759286E12, 2656.4], [1.70759299E12, 3094.8], [1.70759282E12, 2502.8], [1.70759295E12, 2437.0], [1.70759278E12, 1954.0], [1.70759291E12, 3730.9], [1.70759287E12, 3006.8], [1.707593E12, 2151.9], [1.70759283E12, 2524.2], [1.70759296E12, 3138.9]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.70759303E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 121.0, "minX": 1.70759275E12, "maxY": 1703.9611650485433, "series": [{"data": [[1.70759277E12, 213.82352941176464], [1.70759276E12, 185.87719298245617], [1.70759275E12, 201.7777777777778]], "isOverall": false, "label": "1", "isController": false}, {"data": [[1.70759279E12, 228.60240963855415], [1.70759278E12, 224.01123595505607], [1.70759277E12, 180.62962962962962], [1.7075928E12, 122.0]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.70759283E12, 304.1052631578947], [1.70759282E12, 330.3157894736842], [1.70759281E12, 343.7723577235772], [1.7075928E12, 336.72641509433976]], "isOverall": false, "label": "4", "isController": false}, {"data": [[1.70759294E12, 1202.7883211678832], [1.70759292E12, 1052.2125984251968], [1.7075929E12, 1440.745098039216], [1.70759303E12, 293.8235294117647], [1.70759301E12, 755.2868852459014], [1.70759299E12, 1158.2482269503548], [1.70759297E12, 1107.0731707317077], [1.70759295E12, 1359.882882882883], [1.70759293E12, 1155.3142857142861], [1.70759291E12, 858.5823529411765], [1.70759289E12, 121.0], [1.70759302E12, 355.04081632653055], [1.707593E12, 1477.2755102040821], [1.70759298E12, 1703.9611650485433], [1.70759296E12, 1313.8111888111898]], "isOverall": false, "label": "16", "isController": false}, {"data": [[1.70759289E12, 499.46551724137953], [1.70759288E12, 643.6460176991151], [1.70759287E12, 613.1970802919709], [1.70759286E12, 634.0495867768597], [1.70759285E12, 680.7039999999997], [1.70759284E12, 649.7230769230766], [1.70759283E12, 468.1896551724139]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.70759303E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 61.088235294117645, "minX": 1.70759275E12, "maxY": 229.05714285714288, "series": [{"data": [[1.70759277E12, 61.088235294117645], [1.70759276E12, 71.03508771929822], [1.70759275E12, 71.44444444444444]], "isOverall": false, "label": "1", "isController": false}, {"data": [[1.70759279E12, 76.50602409638557], [1.70759278E12, 71.47191011235952], [1.70759277E12, 77.00000000000001], [1.7075928E12, 66.0]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.70759283E12, 87.40350877192984], [1.70759282E12, 89.41228070175441], [1.70759281E12, 98.88617886178868], [1.7075928E12, 86.7924528301887]], "isOverall": false, "label": "4", "isController": false}, {"data": [[1.70759294E12, 166.6204379562044], [1.70759292E12, 170.28346456692924], [1.7075929E12, 153.77450980392152], [1.70759303E12, 70.82352941176471], [1.70759301E12, 153.2377049180328], [1.70759299E12, 163.34751773049655], [1.70759297E12, 165.26016260162604], [1.70759295E12, 157.57657657657654], [1.70759293E12, 229.05714285714288], [1.70759291E12, 193.38235294117655], [1.70759289E12, 69.0], [1.70759302E12, 91.83673469387756], [1.707593E12, 152.28571428571425], [1.70759298E12, 225.65048543689315], [1.70759296E12, 193.18181818181816]], "isOverall": false, "label": "16", "isController": false}, {"data": [[1.70759289E12, 107.97413793103445], [1.70759288E12, 136.90265486725664], [1.70759287E12, 137.14598540145982], [1.70759286E12, 128.14049586776864], [1.70759285E12, 121.072], [1.70759284E12, 123.48461538461541], [1.70759283E12, 117.08620689655173]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.70759303E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 14.666666666666666, "minX": 1.70759275E12, "maxY": 70.44660194174757, "series": [{"data": [[1.70759277E12, 16.029411764705884], [1.70759276E12, 17.47368421052632], [1.70759275E12, 18.88888888888889]], "isOverall": false, "label": "1", "isController": false}, {"data": [[1.70759279E12, 18.06024096385542], [1.70759278E12, 18.2808988764045], [1.70759277E12, 17.925925925925927], [1.7075928E12, 15.0]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.70759283E12, 17.59649122807017], [1.70759282E12, 20.868421052631582], [1.70759281E12, 22.20325203252032], [1.7075928E12, 21.25471698113207]], "isOverall": false, "label": "4", "isController": false}, {"data": [[1.70759294E12, 27.45255474452555], [1.70759292E12, 28.85826771653543], [1.7075929E12, 31.068627450980383], [1.70759303E12, 17.352941176470583], [1.70759301E12, 47.51639344262298], [1.70759299E12, 26.361702127659573], [1.70759297E12, 27.373983739837385], [1.70759295E12, 23.639639639639643], [1.70759293E12, 64.35238095238097], [1.70759291E12, 51.752941176470586], [1.70759289E12, 14.666666666666666], [1.70759302E12, 21.244897959183664], [1.707593E12, 24.755102040816332], [1.70759298E12, 70.44660194174757], [1.70759296E12, 46.15384615384616]], "isOverall": false, "label": "16", "isController": false}, {"data": [[1.70759289E12, 21.97413793103448], [1.70759288E12, 31.54867256637168], [1.70759287E12, 24.284671532846712], [1.70759286E12, 25.06611570247934], [1.70759285E12, 23.984], [1.70759284E12, 23.061538461538458], [1.70759283E12, 22.08620689655172]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.70759303E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 65.0, "minX": 1.70759275E12, "maxY": 41545.0, "series": [{"data": [[1.70759279E12, 2297.0], [1.70759292E12, 6726.0], [1.70759275E12, 510.0], [1.70759288E12, 6403.0], [1.70759301E12, 9117.0], [1.70759284E12, 5191.0], [1.70759297E12, 24414.0], [1.7075928E12, 3262.0], [1.70759293E12, 7437.0], [1.70759276E12, 1700.0], [1.70759289E12, 4502.0], [1.70759302E12, 3487.0], [1.70759285E12, 7269.0], [1.70759298E12, 39836.0], [1.70759281E12, 3273.0], [1.70759294E12, 27240.0], [1.70759277E12, 1689.0], [1.7075929E12, 9906.0], [1.70759303E12, 1684.0], [1.70759286E12, 5247.0], [1.70759299E12, 30613.0], [1.70759282E12, 3319.0], [1.70759295E12, 41545.0], [1.70759278E12, 2212.0], [1.70759291E12, 7394.0], [1.70759287E12, 5108.0], [1.707593E12, 31266.0], [1.70759283E12, 3123.0], [1.70759296E12, 24014.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.70759279E12, 70.0], [1.70759292E12, 137.0], [1.70759275E12, 108.0], [1.70759288E12, 111.0], [1.70759301E12, 94.0], [1.70759284E12, 106.0], [1.70759297E12, 136.0], [1.7075928E12, 69.0], [1.70759293E12, 130.0], [1.70759276E12, 65.0], [1.70759289E12, 81.0], [1.70759302E12, 78.0], [1.70759285E12, 95.0], [1.70759298E12, 146.0], [1.70759281E12, 74.0], [1.70759294E12, 135.0], [1.70759277E12, 68.0], [1.7075929E12, 98.0], [1.70759303E12, 87.0], [1.70759286E12, 113.0], [1.70759299E12, 145.0], [1.70759282E12, 88.0], [1.70759295E12, 139.0], [1.70759278E12, 71.0], [1.70759291E12, 119.0], [1.70759287E12, 109.0], [1.707593E12, 108.0], [1.70759283E12, 81.0], [1.70759296E12, 130.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.70759279E12, 407.00000000000045], [1.70759292E12, 2570.000000000001], [1.70759275E12, 510.0], [1.70759288E12, 1587.4000000000008], [1.70759301E12, 1496.2000000000003], [1.70759284E12, 1415.0000000000005], [1.70759297E12, 2033.600000000002], [1.7075928E12, 769.8000000000002], [1.70759293E12, 2595.2000000000003], [1.70759276E12, 281.80000000000007], [1.70759289E12, 1129.0], [1.70759302E12, 889.3000000000001], [1.70759285E12, 1798.0000000000005], [1.70759298E12, 3097.6000000000004], [1.70759281E12, 692.6000000000006], [1.70759294E12, 1959.2000000000003], [1.70759277E12, 368.6], [1.7075929E12, 4858.700000000001], [1.70759303E12, 751.9999999999992], [1.70759286E12, 1367.6], [1.70759299E12, 2232.2], [1.70759282E12, 822.5], [1.70759295E12, 2490.7999999999984], [1.70759278E12, 364.0], [1.70759291E12, 1802.7000000000005], [1.70759287E12, 1198.2], [1.707593E12, 2294.200000000004], [1.70759283E12, 778.2], [1.70759296E12, 2397.2]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.70759279E12, 2297.0], [1.70759292E12, 6340.159999999998], [1.70759275E12, 510.0], [1.70759288E12, 5852.379999999997], [1.70759301E12, 8130.299999999983], [1.70759284E12, 5096.449999999999], [1.70759297E12, 21484.560000000063], [1.7075928E12, 3126.1600000000026], [1.70759293E12, 7391.0999999999985], [1.70759276E12, 1700.0], [1.70759289E12, 4403.999999999998], [1.70759302E12, 3487.0], [1.70759285E12, 6429.199999999983], [1.70759298E12, 39003.39999999987], [1.70759281E12, 3237.000000000001], [1.70759294E12, 24267.260000000035], [1.70759277E12, 1689.0], [1.7075929E12, 9904.02], [1.70759303E12, 1684.0], [1.70759286E12, 4701.840000000003], [1.70759299E12, 21963.52000000026], [1.70759282E12, 3022.8999999999887], [1.70759295E12, 37873.839999999866], [1.70759278E12, 2212.0], [1.70759291E12, 6756.419999999993], [1.70759287E12, 4900.900000000002], [1.707593E12, 31266.0], [1.70759283E12, 2964.9200000000033], [1.70759296E12, 18822.00000000003]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.70759279E12, 153.0], [1.70759292E12, 585.0], [1.70759275E12, 125.0], [1.70759288E12, 398.0], [1.70759301E12, 441.5], [1.70759284E12, 384.0], [1.70759297E12, 516.0], [1.7075928E12, 209.0], [1.70759293E12, 556.0], [1.70759276E12, 140.0], [1.70759289E12, 256.0], [1.70759302E12, 208.0], [1.70759285E12, 342.0], [1.70759298E12, 629.0], [1.70759281E12, 211.0], [1.70759294E12, 579.0], [1.70759277E12, 141.0], [1.7075929E12, 553.5], [1.70759303E12, 130.0], [1.70759286E12, 409.0], [1.70759299E12, 575.0], [1.70759282E12, 203.5], [1.70759295E12, 532.0], [1.70759278E12, 149.0], [1.70759291E12, 482.5], [1.70759287E12, 417.0], [1.707593E12, 513.5], [1.70759283E12, 202.0], [1.70759296E12, 610.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.70759279E12, 722.7999999999995], [1.70759292E12, 4129.599999999999], [1.70759275E12, 510.0], [1.70759288E12, 2294.2999999999997], [1.70759301E12, 2546.8999999999996], [1.70759284E12, 2236.9999999999977], [1.70759297E12, 3512.799999999998], [1.7075928E12, 1107.9999999999995], [1.70759293E12, 5083.499999999995], [1.70759276E12, 444.3999999999984], [1.70759289E12, 1903.0], [1.70759302E12, 1275.249999999999], [1.70759285E12, 2482.7999999999993], [1.70759298E12, 5894.999999999999], [1.70759281E12, 1012.1999999999998], [1.70759294E12, 2763.2999999999947], [1.70759277E12, 481.0999999999999], [1.7075929E12, 5086.649999999999], [1.70759303E12, 1684.0], [1.70759286E12, 2070.0999999999985], [1.70759299E12, 3540.4000000000005], [1.70759282E12, 1013.25], [1.70759295E12, 4350.8], [1.70759278E12, 621.5], [1.70759291E12, 2560.849999999999], [1.70759287E12, 1848.5999999999992], [1.707593E12, 5244.699999999992], [1.70759283E12, 1619.1999999999966], [1.70759296E12, 5401.799999999992]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.70759303E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 175.0, "minX": 1.0, "maxY": 1358.0, "series": [{"data": [[2.0, 259.5], [3.0, 700.0], [4.0, 834.5], [5.0, 259.0], [6.0, 256.5], [7.0, 175.0], [8.0, 315.5], [9.0, 346.0], [10.0, 510.0], [11.0, 490.0], [12.0, 344.5], [13.0, 335.0], [14.0, 414.0], [15.0, 442.0], [1.0, 477.5], [16.0, 438.0], [17.0, 417.0], [18.0, 240.0], [19.0, 393.5], [20.0, 429.5], [21.0, 278.0], [22.0, 223.5], [23.0, 424.5], [24.0, 1358.0], [27.0, 467.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 27.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 63.0, "minX": 1.0, "maxY": 162.0, "series": [{"data": [[2.0, 63.0], [3.0, 66.0], [4.0, 162.0], [5.0, 98.0], [6.0, 126.0], [7.0, 87.0], [8.0, 118.0], [9.0, 117.0], [10.0, 151.0], [11.0, 152.0], [12.0, 123.0], [13.0, 130.5], [14.0, 136.5], [15.0, 139.0], [1.0, 130.5], [16.0, 142.5], [17.0, 148.0], [18.0, 100.0], [19.0, 131.0], [20.0, 129.0], [21.0, 123.0], [22.0, 95.0], [23.0, 147.0], [24.0, 154.0], [27.0, 137.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 27.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.70759275E12, "maxY": 17.0, "series": [{"data": [[1.70759279E12, 8.2], [1.70759292E12, 12.7], [1.70759275E12, 1.0], [1.70759288E12, 11.2], [1.70759301E12, 11.8], [1.70759284E12, 13.0], [1.70759297E12, 12.3], [1.7075928E12, 11.0], [1.70759293E12, 10.5], [1.70759276E12, 5.7], [1.70759289E12, 11.7], [1.70759302E12, 9.3], [1.70759285E12, 12.5], [1.70759298E12, 10.2], [1.70759281E12, 12.3], [1.70759294E12, 13.7], [1.70759277E12, 6.2], [1.7075929E12, 11.3], [1.70759303E12, 1.6], [1.70759286E12, 12.1], [1.70759299E12, 13.9], [1.70759282E12, 11.4], [1.70759295E12, 11.1], [1.70759278E12, 8.9], [1.70759291E12, 17.0], [1.70759287E12, 13.7], [1.707593E12, 9.5], [1.70759283E12, 11.9], [1.70759296E12, 14.3]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.70759303E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.9, "minX": 1.70759275E12, "maxY": 17.0, "series": [{"data": [[1.70759279E12, 8.3], [1.70759292E12, 12.7], [1.70759275E12, 0.9], [1.70759288E12, 11.3], [1.70759301E12, 12.2], [1.70759284E12, 13.0], [1.70759297E12, 12.3], [1.7075928E12, 10.7], [1.70759293E12, 10.5], [1.70759276E12, 5.7], [1.70759289E12, 11.9], [1.70759302E12, 9.8], [1.70759285E12, 12.5], [1.70759298E12, 10.3], [1.70759281E12, 12.3], [1.70759294E12, 13.7], [1.70759277E12, 6.1], [1.7075929E12, 10.2], [1.70759303E12, 1.7], [1.70759286E12, 12.1], [1.70759299E12, 14.1], [1.70759282E12, 11.4], [1.70759295E12, 11.1], [1.70759278E12, 8.9], [1.70759291E12, 17.0], [1.70759287E12, 13.7], [1.707593E12, 9.8], [1.70759283E12, 11.5], [1.70759296E12, 14.3]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.70759303E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.70759275E12, "maxY": 17.0, "series": [{"data": [[1.70759294E12, 13.7], [1.70759292E12, 12.7], [1.7075929E12, 10.2], [1.70759303E12, 1.7], [1.70759301E12, 12.2], [1.70759299E12, 14.1], [1.70759297E12, 12.3], [1.70759295E12, 11.1], [1.70759293E12, 10.5], [1.70759291E12, 17.0], [1.70759289E12, 0.3], [1.70759302E12, 9.8], [1.707593E12, 9.8], [1.70759298E12, 10.3], [1.70759296E12, 14.3]], "isOverall": false, "label": "16-success", "isController": false}, {"data": [[1.70759277E12, 3.4], [1.70759276E12, 5.7], [1.70759275E12, 0.9]], "isOverall": false, "label": "1-success", "isController": false}, {"data": [[1.70759283E12, 5.7], [1.70759282E12, 11.4], [1.70759281E12, 12.3], [1.7075928E12, 10.6]], "isOverall": false, "label": "4-success", "isController": false}, {"data": [[1.70759289E12, 11.6], [1.70759288E12, 11.3], [1.70759287E12, 13.7], [1.70759286E12, 12.1], [1.70759285E12, 12.5], [1.70759284E12, 13.0], [1.70759283E12, 5.8]], "isOverall": false, "label": "8-success", "isController": false}, {"data": [[1.70759279E12, 8.3], [1.70759278E12, 8.9], [1.70759277E12, 2.7], [1.7075928E12, 0.1]], "isOverall": false, "label": "2-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.70759303E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.9, "minX": 1.70759275E12, "maxY": 17.0, "series": [{"data": [[1.70759279E12, 8.3], [1.70759292E12, 12.7], [1.70759275E12, 0.9], [1.70759288E12, 11.3], [1.70759301E12, 12.2], [1.70759284E12, 13.0], [1.70759297E12, 12.3], [1.7075928E12, 10.7], [1.70759293E12, 10.5], [1.70759276E12, 5.7], [1.70759289E12, 11.9], [1.70759302E12, 9.8], [1.70759285E12, 12.5], [1.70759298E12, 10.3], [1.70759281E12, 12.3], [1.70759294E12, 13.7], [1.70759277E12, 6.1], [1.7075929E12, 10.2], [1.70759303E12, 1.7], [1.70759286E12, 12.1], [1.70759299E12, 14.1], [1.70759282E12, 11.4], [1.70759295E12, 11.1], [1.70759278E12, 8.9], [1.70759291E12, 17.0], [1.70759287E12, 13.7], [1.707593E12, 9.8], [1.70759283E12, 11.5], [1.70759296E12, 14.3]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.70759303E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

