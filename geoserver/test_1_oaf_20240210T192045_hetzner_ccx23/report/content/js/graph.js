/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 29.0, "minX": 0.0, "maxY": 20771.0, "series": [{"data": [[0.0, 31.0], [0.1, 31.0], [0.2, 31.0], [0.3, 31.0], [0.4, 31.0], [0.5, 31.0], [0.6, 31.0], [0.7, 31.0], [0.8, 31.0], [0.9, 31.0], [1.0, 36.0], [1.1, 36.0], [1.2, 36.0], [1.3, 36.0], [1.4, 36.0], [1.5, 36.0], [1.6, 36.0], [1.7, 36.0], [1.8, 36.0], [1.9, 36.0], [2.0, 37.0], [2.1, 37.0], [2.2, 37.0], [2.3, 37.0], [2.4, 37.0], [2.5, 37.0], [2.6, 37.0], [2.7, 37.0], [2.8, 37.0], [2.9, 37.0], [3.0, 41.0], [3.1, 41.0], [3.2, 41.0], [3.3, 41.0], [3.4, 41.0], [3.5, 41.0], [3.6, 41.0], [3.7, 41.0], [3.8, 41.0], [3.9, 41.0], [4.0, 41.0], [4.1, 41.0], [4.2, 41.0], [4.3, 41.0], [4.4, 41.0], [4.5, 41.0], [4.6, 41.0], [4.7, 41.0], [4.8, 41.0], [4.9, 41.0], [5.0, 42.0], [5.1, 42.0], [5.2, 42.0], [5.3, 42.0], [5.4, 42.0], [5.5, 42.0], [5.6, 42.0], [5.7, 42.0], [5.8, 42.0], [5.9, 42.0], [6.0, 44.0], [6.1, 44.0], [6.2, 44.0], [6.3, 44.0], [6.4, 44.0], [6.5, 44.0], [6.6, 44.0], [6.7, 44.0], [6.8, 44.0], [6.9, 44.0], [7.0, 45.0], [7.1, 45.0], [7.2, 45.0], [7.3, 45.0], [7.4, 45.0], [7.5, 45.0], [7.6, 45.0], [7.7, 45.0], [7.8, 45.0], [7.9, 45.0], [8.0, 45.0], [8.1, 45.0], [8.2, 45.0], [8.3, 45.0], [8.4, 45.0], [8.5, 45.0], [8.6, 45.0], [8.7, 45.0], [8.8, 45.0], [8.9, 45.0], [9.0, 46.0], [9.1, 46.0], [9.2, 46.0], [9.3, 46.0], [9.4, 46.0], [9.5, 46.0], [9.6, 46.0], [9.7, 46.0], [9.8, 46.0], [9.9, 46.0], [10.0, 46.0], [10.1, 46.0], [10.2, 46.0], [10.3, 46.0], [10.4, 46.0], [10.5, 46.0], [10.6, 46.0], [10.7, 46.0], [10.8, 46.0], [10.9, 46.0], [11.0, 46.0], [11.1, 46.0], [11.2, 46.0], [11.3, 46.0], [11.4, 46.0], [11.5, 46.0], [11.6, 46.0], [11.7, 46.0], [11.8, 46.0], [11.9, 46.0], [12.0, 47.0], [12.1, 47.0], [12.2, 47.0], [12.3, 47.0], [12.4, 47.0], [12.5, 47.0], [12.6, 47.0], [12.7, 47.0], [12.8, 47.0], [12.9, 47.0], [13.0, 47.0], [13.1, 47.0], [13.2, 47.0], [13.3, 47.0], [13.4, 47.0], [13.5, 47.0], [13.6, 47.0], [13.7, 47.0], [13.8, 47.0], [13.9, 47.0], [14.0, 48.0], [14.1, 48.0], [14.2, 48.0], [14.3, 48.0], [14.4, 48.0], [14.5, 48.0], [14.6, 48.0], [14.7, 48.0], [14.8, 48.0], [14.9, 48.0], [15.0, 48.0], [15.1, 48.0], [15.2, 48.0], [15.3, 48.0], [15.4, 48.0], [15.5, 48.0], [15.6, 48.0], [15.7, 48.0], [15.8, 48.0], [15.9, 48.0], [16.0, 52.0], [16.1, 52.0], [16.2, 52.0], [16.3, 52.0], [16.4, 52.0], [16.5, 52.0], [16.6, 52.0], [16.7, 52.0], [16.8, 52.0], [16.9, 52.0], [17.0, 52.0], [17.1, 52.0], [17.2, 52.0], [17.3, 52.0], [17.4, 52.0], [17.5, 52.0], [17.6, 52.0], [17.7, 52.0], [17.8, 52.0], [17.9, 52.0], [18.0, 52.0], [18.1, 52.0], [18.2, 52.0], [18.3, 52.0], [18.4, 52.0], [18.5, 52.0], [18.6, 52.0], [18.7, 52.0], [18.8, 52.0], [18.9, 52.0], [19.0, 54.0], [19.1, 54.0], [19.2, 54.0], [19.3, 54.0], [19.4, 54.0], [19.5, 54.0], [19.6, 54.0], [19.7, 54.0], [19.8, 54.0], [19.9, 54.0], [20.0, 56.0], [20.1, 56.0], [20.2, 56.0], [20.3, 56.0], [20.4, 56.0], [20.5, 56.0], [20.6, 56.0], [20.7, 56.0], [20.8, 56.0], [20.9, 56.0], [21.0, 60.0], [21.1, 60.0], [21.2, 60.0], [21.3, 60.0], [21.4, 60.0], [21.5, 60.0], [21.6, 60.0], [21.7, 60.0], [21.8, 60.0], [21.9, 60.0], [22.0, 63.0], [22.1, 63.0], [22.2, 63.0], [22.3, 63.0], [22.4, 63.0], [22.5, 63.0], [22.6, 63.0], [22.7, 63.0], [22.8, 63.0], [22.9, 63.0], [23.0, 64.0], [23.1, 64.0], [23.2, 64.0], [23.3, 64.0], [23.4, 64.0], [23.5, 64.0], [23.6, 64.0], [23.7, 64.0], [23.8, 64.0], [23.9, 64.0], [24.0, 65.0], [24.1, 65.0], [24.2, 65.0], [24.3, 65.0], [24.4, 65.0], [24.5, 65.0], [24.6, 65.0], [24.7, 65.0], [24.8, 65.0], [24.9, 65.0], [25.0, 66.0], [25.1, 66.0], [25.2, 66.0], [25.3, 66.0], [25.4, 66.0], [25.5, 66.0], [25.6, 66.0], [25.7, 66.0], [25.8, 66.0], [25.9, 66.0], [26.0, 66.0], [26.1, 66.0], [26.2, 66.0], [26.3, 66.0], [26.4, 66.0], [26.5, 66.0], [26.6, 66.0], [26.7, 66.0], [26.8, 66.0], [26.9, 66.0], [27.0, 68.0], [27.1, 68.0], [27.2, 68.0], [27.3, 68.0], [27.4, 68.0], [27.5, 68.0], [27.6, 68.0], [27.7, 68.0], [27.8, 68.0], [27.9, 68.0], [28.0, 69.0], [28.1, 69.0], [28.2, 69.0], [28.3, 69.0], [28.4, 69.0], [28.5, 69.0], [28.6, 69.0], [28.7, 69.0], [28.8, 69.0], [28.9, 69.0], [29.0, 69.0], [29.1, 69.0], [29.2, 69.0], [29.3, 69.0], [29.4, 69.0], [29.5, 69.0], [29.6, 69.0], [29.7, 69.0], [29.8, 69.0], [29.9, 69.0], [30.0, 69.0], [30.1, 69.0], [30.2, 69.0], [30.3, 69.0], [30.4, 69.0], [30.5, 69.0], [30.6, 69.0], [30.7, 69.0], [30.8, 69.0], [30.9, 69.0], [31.0, 70.0], [31.1, 70.0], [31.2, 70.0], [31.3, 70.0], [31.4, 70.0], [31.5, 70.0], [31.6, 70.0], [31.7, 70.0], [31.8, 70.0], [31.9, 70.0], [32.0, 71.0], [32.1, 71.0], [32.2, 71.0], [32.3, 71.0], [32.4, 71.0], [32.5, 71.0], [32.6, 71.0], [32.7, 71.0], [32.8, 71.0], [32.9, 71.0], [33.0, 71.0], [33.1, 71.0], [33.2, 71.0], [33.3, 71.0], [33.4, 71.0], [33.5, 71.0], [33.6, 71.0], [33.7, 71.0], [33.8, 71.0], [33.9, 71.0], [34.0, 71.0], [34.1, 71.0], [34.2, 71.0], [34.3, 71.0], [34.4, 71.0], [34.5, 71.0], [34.6, 71.0], [34.7, 71.0], [34.8, 71.0], [34.9, 71.0], [35.0, 74.0], [35.1, 74.0], [35.2, 74.0], [35.3, 74.0], [35.4, 74.0], [35.5, 74.0], [35.6, 74.0], [35.7, 74.0], [35.8, 74.0], [35.9, 74.0], [36.0, 74.0], [36.1, 74.0], [36.2, 74.0], [36.3, 74.0], [36.4, 74.0], [36.5, 74.0], [36.6, 74.0], [36.7, 74.0], [36.8, 74.0], [36.9, 74.0], [37.0, 76.0], [37.1, 76.0], [37.2, 76.0], [37.3, 76.0], [37.4, 76.0], [37.5, 76.0], [37.6, 76.0], [37.7, 76.0], [37.8, 76.0], [37.9, 76.0], [38.0, 79.0], [38.1, 79.0], [38.2, 79.0], [38.3, 79.0], [38.4, 79.0], [38.5, 79.0], [38.6, 79.0], [38.7, 79.0], [38.8, 79.0], [38.9, 79.0], [39.0, 79.0], [39.1, 79.0], [39.2, 79.0], [39.3, 79.0], [39.4, 79.0], [39.5, 79.0], [39.6, 79.0], [39.7, 79.0], [39.8, 79.0], [39.9, 79.0], [40.0, 81.0], [40.1, 81.0], [40.2, 81.0], [40.3, 81.0], [40.4, 81.0], [40.5, 81.0], [40.6, 81.0], [40.7, 81.0], [40.8, 81.0], [40.9, 81.0], [41.0, 82.0], [41.1, 82.0], [41.2, 82.0], [41.3, 82.0], [41.4, 82.0], [41.5, 82.0], [41.6, 82.0], [41.7, 82.0], [41.8, 82.0], [41.9, 82.0], [42.0, 83.0], [42.1, 83.0], [42.2, 83.0], [42.3, 83.0], [42.4, 83.0], [42.5, 83.0], [42.6, 83.0], [42.7, 83.0], [42.8, 83.0], [42.9, 83.0], [43.0, 84.0], [43.1, 84.0], [43.2, 84.0], [43.3, 84.0], [43.4, 84.0], [43.5, 84.0], [43.6, 84.0], [43.7, 84.0], [43.8, 84.0], [43.9, 84.0], [44.0, 85.0], [44.1, 85.0], [44.2, 85.0], [44.3, 85.0], [44.4, 85.0], [44.5, 85.0], [44.6, 85.0], [44.7, 85.0], [44.8, 85.0], [44.9, 85.0], [45.0, 85.0], [45.1, 85.0], [45.2, 85.0], [45.3, 85.0], [45.4, 85.0], [45.5, 85.0], [45.6, 85.0], [45.7, 85.0], [45.8, 85.0], [45.9, 85.0], [46.0, 86.0], [46.1, 86.0], [46.2, 86.0], [46.3, 86.0], [46.4, 86.0], [46.5, 86.0], [46.6, 86.0], [46.7, 86.0], [46.8, 86.0], [46.9, 86.0], [47.0, 86.0], [47.1, 86.0], [47.2, 86.0], [47.3, 86.0], [47.4, 86.0], [47.5, 86.0], [47.6, 86.0], [47.7, 86.0], [47.8, 86.0], [47.9, 86.0], [48.0, 88.0], [48.1, 88.0], [48.2, 88.0], [48.3, 88.0], [48.4, 88.0], [48.5, 88.0], [48.6, 88.0], [48.7, 88.0], [48.8, 88.0], [48.9, 88.0], [49.0, 88.0], [49.1, 88.0], [49.2, 88.0], [49.3, 88.0], [49.4, 88.0], [49.5, 88.0], [49.6, 88.0], [49.7, 88.0], [49.8, 88.0], [49.9, 88.0], [50.0, 89.0], [50.1, 89.0], [50.2, 89.0], [50.3, 89.0], [50.4, 89.0], [50.5, 89.0], [50.6, 89.0], [50.7, 89.0], [50.8, 89.0], [50.9, 89.0], [51.0, 90.0], [51.1, 90.0], [51.2, 90.0], [51.3, 90.0], [51.4, 90.0], [51.5, 90.0], [51.6, 90.0], [51.7, 90.0], [51.8, 90.0], [51.9, 90.0], [52.0, 94.0], [52.1, 94.0], [52.2, 94.0], [52.3, 94.0], [52.4, 94.0], [52.5, 94.0], [52.6, 94.0], [52.7, 94.0], [52.8, 94.0], [52.9, 94.0], [53.0, 97.0], [53.1, 97.0], [53.2, 97.0], [53.3, 97.0], [53.4, 97.0], [53.5, 97.0], [53.6, 97.0], [53.7, 97.0], [53.8, 97.0], [53.9, 97.0], [54.0, 97.0], [54.1, 97.0], [54.2, 97.0], [54.3, 97.0], [54.4, 97.0], [54.5, 97.0], [54.6, 97.0], [54.7, 97.0], [54.8, 97.0], [54.9, 97.0], [55.0, 100.0], [55.1, 100.0], [55.2, 100.0], [55.3, 100.0], [55.4, 100.0], [55.5, 100.0], [55.6, 100.0], [55.7, 100.0], [55.8, 100.0], [55.9, 100.0], [56.0, 103.0], [56.1, 103.0], [56.2, 103.0], [56.3, 103.0], [56.4, 103.0], [56.5, 103.0], [56.6, 103.0], [56.7, 103.0], [56.8, 103.0], [56.9, 103.0], [57.0, 107.0], [57.1, 107.0], [57.2, 107.0], [57.3, 107.0], [57.4, 107.0], [57.5, 107.0], [57.6, 107.0], [57.7, 107.0], [57.8, 107.0], [57.9, 107.0], [58.0, 109.0], [58.1, 109.0], [58.2, 109.0], [58.3, 109.0], [58.4, 109.0], [58.5, 109.0], [58.6, 109.0], [58.7, 109.0], [58.8, 109.0], [58.9, 109.0], [59.0, 109.0], [59.1, 109.0], [59.2, 109.0], [59.3, 109.0], [59.4, 109.0], [59.5, 109.0], [59.6, 109.0], [59.7, 109.0], [59.8, 109.0], [59.9, 109.0], [60.0, 110.0], [60.1, 110.0], [60.2, 110.0], [60.3, 110.0], [60.4, 110.0], [60.5, 110.0], [60.6, 110.0], [60.7, 110.0], [60.8, 110.0], [60.9, 110.0], [61.0, 111.0], [61.1, 111.0], [61.2, 111.0], [61.3, 111.0], [61.4, 111.0], [61.5, 111.0], [61.6, 111.0], [61.7, 111.0], [61.8, 111.0], [61.9, 111.0], [62.0, 118.0], [62.1, 118.0], [62.2, 118.0], [62.3, 118.0], [62.4, 118.0], [62.5, 118.0], [62.6, 118.0], [62.7, 118.0], [62.8, 118.0], [62.9, 118.0], [63.0, 118.0], [63.1, 118.0], [63.2, 118.0], [63.3, 118.0], [63.4, 118.0], [63.5, 118.0], [63.6, 118.0], [63.7, 118.0], [63.8, 118.0], [63.9, 118.0], [64.0, 123.0], [64.1, 123.0], [64.2, 123.0], [64.3, 123.0], [64.4, 123.0], [64.5, 123.0], [64.6, 123.0], [64.7, 123.0], [64.8, 123.0], [64.9, 123.0], [65.0, 124.0], [65.1, 124.0], [65.2, 124.0], [65.3, 124.0], [65.4, 124.0], [65.5, 124.0], [65.6, 124.0], [65.7, 124.0], [65.8, 124.0], [65.9, 124.0], [66.0, 124.0], [66.1, 124.0], [66.2, 124.0], [66.3, 124.0], [66.4, 124.0], [66.5, 124.0], [66.6, 124.0], [66.7, 124.0], [66.8, 124.0], [66.9, 124.0], [67.0, 125.0], [67.1, 125.0], [67.2, 125.0], [67.3, 125.0], [67.4, 125.0], [67.5, 125.0], [67.6, 125.0], [67.7, 125.0], [67.8, 125.0], [67.9, 125.0], [68.0, 128.0], [68.1, 128.0], [68.2, 128.0], [68.3, 128.0], [68.4, 128.0], [68.5, 128.0], [68.6, 128.0], [68.7, 128.0], [68.8, 128.0], [68.9, 128.0], [69.0, 130.0], [69.1, 130.0], [69.2, 130.0], [69.3, 130.0], [69.4, 130.0], [69.5, 130.0], [69.6, 130.0], [69.7, 130.0], [69.8, 130.0], [69.9, 130.0], [70.0, 135.0], [70.1, 135.0], [70.2, 135.0], [70.3, 135.0], [70.4, 135.0], [70.5, 135.0], [70.6, 135.0], [70.7, 135.0], [70.8, 135.0], [70.9, 135.0], [71.0, 142.0], [71.1, 142.0], [71.2, 142.0], [71.3, 142.0], [71.4, 142.0], [71.5, 142.0], [71.6, 142.0], [71.7, 142.0], [71.8, 142.0], [71.9, 142.0], [72.0, 144.0], [72.1, 144.0], [72.2, 144.0], [72.3, 144.0], [72.4, 144.0], [72.5, 144.0], [72.6, 144.0], [72.7, 144.0], [72.8, 144.0], [72.9, 144.0], [73.0, 144.0], [73.1, 144.0], [73.2, 144.0], [73.3, 144.0], [73.4, 144.0], [73.5, 144.0], [73.6, 144.0], [73.7, 144.0], [73.8, 144.0], [73.9, 144.0], [74.0, 145.0], [74.1, 145.0], [74.2, 145.0], [74.3, 145.0], [74.4, 145.0], [74.5, 145.0], [74.6, 145.0], [74.7, 145.0], [74.8, 145.0], [74.9, 145.0], [75.0, 153.0], [75.1, 153.0], [75.2, 153.0], [75.3, 153.0], [75.4, 153.0], [75.5, 153.0], [75.6, 153.0], [75.7, 153.0], [75.8, 153.0], [75.9, 153.0], [76.0, 164.0], [76.1, 164.0], [76.2, 164.0], [76.3, 164.0], [76.4, 164.0], [76.5, 164.0], [76.6, 164.0], [76.7, 164.0], [76.8, 164.0], [76.9, 164.0], [77.0, 166.0], [77.1, 166.0], [77.2, 166.0], [77.3, 166.0], [77.4, 166.0], [77.5, 166.0], [77.6, 166.0], [77.7, 166.0], [77.8, 166.0], [77.9, 166.0], [78.0, 184.0], [78.1, 184.0], [78.2, 184.0], [78.3, 184.0], [78.4, 184.0], [78.5, 184.0], [78.6, 184.0], [78.7, 184.0], [78.8, 184.0], [78.9, 184.0], [79.0, 196.0], [79.1, 196.0], [79.2, 196.0], [79.3, 196.0], [79.4, 196.0], [79.5, 196.0], [79.6, 196.0], [79.7, 196.0], [79.8, 196.0], [79.9, 196.0], [80.0, 208.0], [80.1, 208.0], [80.2, 208.0], [80.3, 208.0], [80.4, 208.0], [80.5, 208.0], [80.6, 208.0], [80.7, 208.0], [80.8, 208.0], [80.9, 208.0], [81.0, 214.0], [81.1, 214.0], [81.2, 214.0], [81.3, 214.0], [81.4, 214.0], [81.5, 214.0], [81.6, 214.0], [81.7, 214.0], [81.8, 214.0], [81.9, 214.0], [82.0, 215.0], [82.1, 215.0], [82.2, 215.0], [82.3, 215.0], [82.4, 215.0], [82.5, 215.0], [82.6, 215.0], [82.7, 215.0], [82.8, 215.0], [82.9, 215.0], [83.0, 217.0], [83.1, 217.0], [83.2, 217.0], [83.3, 217.0], [83.4, 217.0], [83.5, 217.0], [83.6, 217.0], [83.7, 217.0], [83.8, 217.0], [83.9, 217.0], [84.0, 221.0], [84.1, 221.0], [84.2, 221.0], [84.3, 221.0], [84.4, 221.0], [84.5, 221.0], [84.6, 221.0], [84.7, 221.0], [84.8, 221.0], [84.9, 221.0], [85.0, 239.0], [85.1, 239.0], [85.2, 239.0], [85.3, 239.0], [85.4, 239.0], [85.5, 239.0], [85.6, 239.0], [85.7, 239.0], [85.8, 239.0], [85.9, 239.0], [86.0, 258.0], [86.1, 258.0], [86.2, 258.0], [86.3, 258.0], [86.4, 258.0], [86.5, 258.0], [86.6, 258.0], [86.7, 258.0], [86.8, 258.0], [86.9, 258.0], [87.0, 285.0], [87.1, 285.0], [87.2, 285.0], [87.3, 285.0], [87.4, 285.0], [87.5, 285.0], [87.6, 285.0], [87.7, 285.0], [87.8, 285.0], [87.9, 285.0], [88.0, 402.0], [88.1, 402.0], [88.2, 402.0], [88.3, 402.0], [88.4, 402.0], [88.5, 402.0], [88.6, 402.0], [88.7, 402.0], [88.8, 402.0], [88.9, 402.0], [89.0, 415.0], [89.1, 415.0], [89.2, 415.0], [89.3, 415.0], [89.4, 415.0], [89.5, 415.0], [89.6, 415.0], [89.7, 415.0], [89.8, 415.0], [89.9, 415.0], [90.0, 418.0], [90.1, 418.0], [90.2, 418.0], [90.3, 418.0], [90.4, 418.0], [90.5, 418.0], [90.6, 418.0], [90.7, 418.0], [90.8, 418.0], [90.9, 418.0], [91.0, 499.0], [91.1, 499.0], [91.2, 499.0], [91.3, 499.0], [91.4, 499.0], [91.5, 499.0], [91.6, 499.0], [91.7, 499.0], [91.8, 499.0], [91.9, 499.0], [92.0, 499.0], [92.1, 499.0], [92.2, 499.0], [92.3, 499.0], [92.4, 499.0], [92.5, 499.0], [92.6, 499.0], [92.7, 499.0], [92.8, 499.0], [92.9, 499.0], [93.0, 506.0], [93.1, 506.0], [93.2, 506.0], [93.3, 506.0], [93.4, 506.0], [93.5, 506.0], [93.6, 506.0], [93.7, 506.0], [93.8, 506.0], [93.9, 506.0], [94.0, 513.0], [94.1, 513.0], [94.2, 513.0], [94.3, 513.0], [94.4, 513.0], [94.5, 513.0], [94.6, 513.0], [94.7, 513.0], [94.8, 513.0], [94.9, 513.0], [95.0, 651.0], [95.1, 651.0], [95.2, 651.0], [95.3, 651.0], [95.4, 651.0], [95.5, 651.0], [95.6, 651.0], [95.7, 651.0], [95.8, 651.0], [95.9, 651.0], [96.0, 682.0], [96.1, 682.0], [96.2, 682.0], [96.3, 682.0], [96.4, 682.0], [96.5, 682.0], [96.6, 682.0], [96.7, 682.0], [96.8, 682.0], [96.9, 682.0], [97.0, 829.0], [97.1, 829.0], [97.2, 829.0], [97.3, 829.0], [97.4, 829.0], [97.5, 829.0], [97.6, 829.0], [97.7, 829.0], [97.8, 829.0], [97.9, 829.0], [98.0, 2044.0], [98.1, 2044.0], [98.2, 2044.0], [98.3, 2044.0], [98.4, 2044.0], [98.5, 2044.0], [98.6, 2044.0], [98.7, 2044.0], [98.8, 2044.0], [98.9, 2044.0], [99.0, 2057.0], [99.1, 2057.0], [99.2, 2057.0], [99.3, 2057.0], [99.4, 2057.0], [99.5, 2057.0], [99.6, 2057.0], [99.7, 2057.0], [99.8, 2057.0], [99.9, 2057.0]], "isOverall": false, "label": "1", "isController": false}, {"data": [[0.0, 30.0], [0.1, 30.0], [0.2, 30.0], [0.3, 30.0], [0.4, 30.0], [0.5, 31.0], [0.6, 31.0], [0.7, 31.0], [0.8, 31.0], [0.9, 31.0], [1.0, 32.0], [1.1, 32.0], [1.2, 32.0], [1.3, 32.0], [1.4, 32.0], [1.5, 32.0], [1.6, 32.0], [1.7, 32.0], [1.8, 32.0], [1.9, 32.0], [2.0, 32.0], [2.1, 32.0], [2.2, 32.0], [2.3, 32.0], [2.4, 32.0], [2.5, 34.0], [2.6, 34.0], [2.7, 34.0], [2.8, 34.0], [2.9, 34.0], [3.0, 34.0], [3.1, 34.0], [3.2, 34.0], [3.3, 34.0], [3.4, 34.0], [3.5, 35.0], [3.6, 35.0], [3.7, 35.0], [3.8, 35.0], [3.9, 35.0], [4.0, 35.0], [4.1, 35.0], [4.2, 35.0], [4.3, 35.0], [4.4, 35.0], [4.5, 35.0], [4.6, 35.0], [4.7, 35.0], [4.8, 35.0], [4.9, 35.0], [5.0, 36.0], [5.1, 36.0], [5.2, 36.0], [5.3, 36.0], [5.4, 36.0], [5.5, 37.0], [5.6, 37.0], [5.7, 37.0], [5.8, 37.0], [5.9, 37.0], [6.0, 38.0], [6.1, 38.0], [6.2, 38.0], [6.3, 38.0], [6.4, 38.0], [6.5, 38.0], [6.6, 38.0], [6.7, 38.0], [6.8, 38.0], [6.9, 38.0], [7.0, 39.0], [7.1, 39.0], [7.2, 39.0], [7.3, 39.0], [7.4, 39.0], [7.5, 39.0], [7.6, 39.0], [7.7, 39.0], [7.8, 39.0], [7.9, 39.0], [8.0, 39.0], [8.1, 39.0], [8.2, 39.0], [8.3, 39.0], [8.4, 39.0], [8.5, 41.0], [8.6, 41.0], [8.7, 41.0], [8.8, 41.0], [8.9, 41.0], [9.0, 41.0], [9.1, 41.0], [9.2, 41.0], [9.3, 41.0], [9.4, 41.0], [9.5, 41.0], [9.6, 41.0], [9.7, 41.0], [9.8, 41.0], [9.9, 41.0], [10.0, 42.0], [10.1, 42.0], [10.2, 42.0], [10.3, 42.0], [10.4, 42.0], [10.5, 42.0], [10.6, 42.0], [10.7, 42.0], [10.8, 42.0], [10.9, 42.0], [11.0, 43.0], [11.1, 43.0], [11.2, 43.0], [11.3, 43.0], [11.4, 43.0], [11.5, 44.0], [11.6, 44.0], [11.7, 44.0], [11.8, 44.0], [11.9, 44.0], [12.0, 44.0], [12.1, 44.0], [12.2, 44.0], [12.3, 44.0], [12.4, 44.0], [12.5, 44.0], [12.6, 44.0], [12.7, 44.0], [12.8, 44.0], [12.9, 44.0], [13.0, 45.0], [13.1, 45.0], [13.2, 45.0], [13.3, 45.0], [13.4, 45.0], [13.5, 45.0], [13.6, 45.0], [13.7, 45.0], [13.8, 45.0], [13.9, 45.0], [14.0, 45.0], [14.1, 45.0], [14.2, 45.0], [14.3, 45.0], [14.4, 45.0], [14.5, 47.0], [14.6, 47.0], [14.7, 47.0], [14.8, 47.0], [14.9, 47.0], [15.0, 48.0], [15.1, 48.0], [15.2, 48.0], [15.3, 48.0], [15.4, 48.0], [15.5, 48.0], [15.6, 48.0], [15.7, 48.0], [15.8, 48.0], [15.9, 48.0], [16.0, 48.0], [16.1, 48.0], [16.2, 48.0], [16.3, 48.0], [16.4, 48.0], [16.5, 49.0], [16.6, 49.0], [16.7, 49.0], [16.8, 49.0], [16.9, 49.0], [17.0, 50.0], [17.1, 50.0], [17.2, 50.0], [17.3, 50.0], [17.4, 50.0], [17.5, 51.0], [17.6, 51.0], [17.7, 51.0], [17.8, 51.0], [17.9, 51.0], [18.0, 51.0], [18.1, 51.0], [18.2, 51.0], [18.3, 51.0], [18.4, 51.0], [18.5, 53.0], [18.6, 53.0], [18.7, 53.0], [18.8, 53.0], [18.9, 53.0], [19.0, 54.0], [19.1, 54.0], [19.2, 54.0], [19.3, 54.0], [19.4, 54.0], [19.5, 54.0], [19.6, 54.0], [19.7, 54.0], [19.8, 54.0], [19.9, 54.0], [20.0, 54.0], [20.1, 54.0], [20.2, 54.0], [20.3, 54.0], [20.4, 54.0], [20.5, 55.0], [20.6, 55.0], [20.7, 55.0], [20.8, 55.0], [20.9, 55.0], [21.0, 56.0], [21.1, 56.0], [21.2, 56.0], [21.3, 56.0], [21.4, 56.0], [21.5, 57.0], [21.6, 57.0], [21.7, 57.0], [21.8, 57.0], [21.9, 57.0], [22.0, 59.0], [22.1, 59.0], [22.2, 59.0], [22.3, 59.0], [22.4, 59.0], [22.5, 60.0], [22.6, 60.0], [22.7, 60.0], [22.8, 60.0], [22.9, 60.0], [23.0, 62.0], [23.1, 62.0], [23.2, 62.0], [23.3, 62.0], [23.4, 62.0], [23.5, 63.0], [23.6, 63.0], [23.7, 63.0], [23.8, 63.0], [23.9, 63.0], [24.0, 63.0], [24.1, 63.0], [24.2, 63.0], [24.3, 63.0], [24.4, 63.0], [24.5, 64.0], [24.6, 64.0], [24.7, 64.0], [24.8, 64.0], [24.9, 64.0], [25.0, 64.0], [25.1, 64.0], [25.2, 64.0], [25.3, 64.0], [25.4, 64.0], [25.5, 64.0], [25.6, 64.0], [25.7, 64.0], [25.8, 64.0], [25.9, 64.0], [26.0, 65.0], [26.1, 65.0], [26.2, 65.0], [26.3, 65.0], [26.4, 65.0], [26.5, 65.0], [26.6, 65.0], [26.7, 65.0], [26.8, 65.0], [26.9, 65.0], [27.0, 66.0], [27.1, 66.0], [27.2, 66.0], [27.3, 66.0], [27.4, 66.0], [27.5, 66.0], [27.6, 66.0], [27.7, 66.0], [27.8, 66.0], [27.9, 66.0], [28.0, 67.0], [28.1, 67.0], [28.2, 67.0], [28.3, 67.0], [28.4, 67.0], [28.5, 68.0], [28.6, 68.0], [28.7, 68.0], [28.8, 68.0], [28.9, 68.0], [29.0, 68.0], [29.1, 68.0], [29.2, 68.0], [29.3, 68.0], [29.4, 68.0], [29.5, 68.0], [29.6, 68.0], [29.7, 68.0], [29.8, 68.0], [29.9, 68.0], [30.0, 68.0], [30.1, 68.0], [30.2, 68.0], [30.3, 68.0], [30.4, 68.0], [30.5, 69.0], [30.6, 69.0], [30.7, 69.0], [30.8, 69.0], [30.9, 69.0], [31.0, 71.0], [31.1, 71.0], [31.2, 71.0], [31.3, 71.0], [31.4, 71.0], [31.5, 73.0], [31.6, 73.0], [31.7, 73.0], [31.8, 73.0], [31.9, 73.0], [32.0, 74.0], [32.1, 74.0], [32.2, 74.0], [32.3, 74.0], [32.4, 74.0], [32.5, 76.0], [32.6, 76.0], [32.7, 76.0], [32.8, 76.0], [32.9, 76.0], [33.0, 76.0], [33.1, 76.0], [33.2, 76.0], [33.3, 76.0], [33.4, 76.0], [33.5, 78.0], [33.6, 78.0], [33.7, 78.0], [33.8, 78.0], [33.9, 78.0], [34.0, 78.0], [34.1, 78.0], [34.2, 78.0], [34.3, 78.0], [34.4, 78.0], [34.5, 79.0], [34.6, 79.0], [34.7, 79.0], [34.8, 79.0], [34.9, 79.0], [35.0, 79.0], [35.1, 79.0], [35.2, 79.0], [35.3, 79.0], [35.4, 79.0], [35.5, 79.0], [35.6, 79.0], [35.7, 79.0], [35.8, 79.0], [35.9, 79.0], [36.0, 79.0], [36.1, 79.0], [36.2, 79.0], [36.3, 79.0], [36.4, 79.0], [36.5, 80.0], [36.6, 80.0], [36.7, 80.0], [36.8, 80.0], [36.9, 80.0], [37.0, 80.0], [37.1, 80.0], [37.2, 80.0], [37.3, 80.0], [37.4, 80.0], [37.5, 80.0], [37.6, 80.0], [37.7, 80.0], [37.8, 80.0], [37.9, 80.0], [38.0, 82.0], [38.1, 82.0], [38.2, 82.0], [38.3, 82.0], [38.4, 82.0], [38.5, 82.0], [38.6, 82.0], [38.7, 82.0], [38.8, 82.0], [38.9, 82.0], [39.0, 82.0], [39.1, 82.0], [39.2, 82.0], [39.3, 82.0], [39.4, 82.0], [39.5, 83.0], [39.6, 83.0], [39.7, 83.0], [39.8, 83.0], [39.9, 83.0], [40.0, 83.0], [40.1, 83.0], [40.2, 83.0], [40.3, 83.0], [40.4, 83.0], [40.5, 83.0], [40.6, 83.0], [40.7, 83.0], [40.8, 83.0], [40.9, 83.0], [41.0, 84.0], [41.1, 84.0], [41.2, 84.0], [41.3, 84.0], [41.4, 84.0], [41.5, 84.0], [41.6, 84.0], [41.7, 84.0], [41.8, 84.0], [41.9, 84.0], [42.0, 84.0], [42.1, 84.0], [42.2, 84.0], [42.3, 84.0], [42.4, 84.0], [42.5, 85.0], [42.6, 85.0], [42.7, 85.0], [42.8, 85.0], [42.9, 85.0], [43.0, 85.0], [43.1, 85.0], [43.2, 85.0], [43.3, 85.0], [43.4, 85.0], [43.5, 85.0], [43.6, 85.0], [43.7, 85.0], [43.8, 85.0], [43.9, 85.0], [44.0, 86.0], [44.1, 86.0], [44.2, 86.0], [44.3, 86.0], [44.4, 86.0], [44.5, 86.0], [44.6, 86.0], [44.7, 86.0], [44.8, 86.0], [44.9, 86.0], [45.0, 86.0], [45.1, 86.0], [45.2, 86.0], [45.3, 86.0], [45.4, 86.0], [45.5, 87.0], [45.6, 87.0], [45.7, 87.0], [45.8, 87.0], [45.9, 87.0], [46.0, 87.0], [46.1, 87.0], [46.2, 87.0], [46.3, 87.0], [46.4, 87.0], [46.5, 90.0], [46.6, 90.0], [46.7, 90.0], [46.8, 90.0], [46.9, 90.0], [47.0, 90.0], [47.1, 90.0], [47.2, 90.0], [47.3, 90.0], [47.4, 90.0], [47.5, 91.0], [47.6, 91.0], [47.7, 91.0], [47.8, 91.0], [47.9, 91.0], [48.0, 92.0], [48.1, 92.0], [48.2, 92.0], [48.3, 92.0], [48.4, 92.0], [48.5, 92.0], [48.6, 92.0], [48.7, 92.0], [48.8, 92.0], [48.9, 92.0], [49.0, 92.0], [49.1, 92.0], [49.2, 92.0], [49.3, 92.0], [49.4, 92.0], [49.5, 92.0], [49.6, 92.0], [49.7, 92.0], [49.8, 92.0], [49.9, 92.0], [50.0, 93.0], [50.1, 93.0], [50.2, 93.0], [50.3, 93.0], [50.4, 93.0], [50.5, 93.0], [50.6, 93.0], [50.7, 93.0], [50.8, 93.0], [50.9, 93.0], [51.0, 95.0], [51.1, 95.0], [51.2, 95.0], [51.3, 95.0], [51.4, 95.0], [51.5, 95.0], [51.6, 95.0], [51.7, 95.0], [51.8, 95.0], [51.9, 95.0], [52.0, 96.0], [52.1, 96.0], [52.2, 96.0], [52.3, 96.0], [52.4, 96.0], [52.5, 97.0], [52.6, 97.0], [52.7, 97.0], [52.8, 97.0], [52.9, 97.0], [53.0, 97.0], [53.1, 97.0], [53.2, 97.0], [53.3, 97.0], [53.4, 97.0], [53.5, 98.0], [53.6, 98.0], [53.7, 98.0], [53.8, 98.0], [53.9, 98.0], [54.0, 98.0], [54.1, 98.0], [54.2, 98.0], [54.3, 98.0], [54.4, 98.0], [54.5, 99.0], [54.6, 99.0], [54.7, 99.0], [54.8, 99.0], [54.9, 99.0], [55.0, 99.0], [55.1, 99.0], [55.2, 99.0], [55.3, 99.0], [55.4, 99.0], [55.5, 100.0], [55.6, 100.0], [55.7, 100.0], [55.8, 100.0], [55.9, 100.0], [56.0, 100.0], [56.1, 100.0], [56.2, 100.0], [56.3, 100.0], [56.4, 100.0], [56.5, 101.0], [56.6, 101.0], [56.7, 101.0], [56.8, 101.0], [56.9, 101.0], [57.0, 101.0], [57.1, 101.0], [57.2, 101.0], [57.3, 101.0], [57.4, 101.0], [57.5, 102.0], [57.6, 102.0], [57.7, 102.0], [57.8, 102.0], [57.9, 102.0], [58.0, 103.0], [58.1, 103.0], [58.2, 103.0], [58.3, 103.0], [58.4, 103.0], [58.5, 103.0], [58.6, 103.0], [58.7, 103.0], [58.8, 103.0], [58.9, 103.0], [59.0, 104.0], [59.1, 104.0], [59.2, 104.0], [59.3, 104.0], [59.4, 104.0], [59.5, 105.0], [59.6, 105.0], [59.7, 105.0], [59.8, 105.0], [59.9, 105.0], [60.0, 106.0], [60.1, 106.0], [60.2, 106.0], [60.3, 106.0], [60.4, 106.0], [60.5, 107.0], [60.6, 107.0], [60.7, 107.0], [60.8, 107.0], [60.9, 107.0], [61.0, 110.0], [61.1, 110.0], [61.2, 110.0], [61.3, 110.0], [61.4, 110.0], [61.5, 111.0], [61.6, 111.0], [61.7, 111.0], [61.8, 111.0], [61.9, 111.0], [62.0, 113.0], [62.1, 113.0], [62.2, 113.0], [62.3, 113.0], [62.4, 113.0], [62.5, 114.0], [62.6, 114.0], [62.7, 114.0], [62.8, 114.0], [62.9, 114.0], [63.0, 117.0], [63.1, 117.0], [63.2, 117.0], [63.3, 117.0], [63.4, 117.0], [63.5, 118.0], [63.6, 118.0], [63.7, 118.0], [63.8, 118.0], [63.9, 118.0], [64.0, 119.0], [64.1, 119.0], [64.2, 119.0], [64.3, 119.0], [64.4, 119.0], [64.5, 119.0], [64.6, 119.0], [64.7, 119.0], [64.8, 119.0], [64.9, 119.0], [65.0, 121.0], [65.1, 121.0], [65.2, 121.0], [65.3, 121.0], [65.4, 121.0], [65.5, 121.0], [65.6, 121.0], [65.7, 121.0], [65.8, 121.0], [65.9, 121.0], [66.0, 122.0], [66.1, 122.0], [66.2, 122.0], [66.3, 122.0], [66.4, 122.0], [66.5, 122.0], [66.6, 122.0], [66.7, 122.0], [66.8, 122.0], [66.9, 122.0], [67.0, 124.0], [67.1, 124.0], [67.2, 124.0], [67.3, 124.0], [67.4, 124.0], [67.5, 125.0], [67.6, 125.0], [67.7, 125.0], [67.8, 125.0], [67.9, 125.0], [68.0, 126.0], [68.1, 126.0], [68.2, 126.0], [68.3, 126.0], [68.4, 126.0], [68.5, 126.0], [68.6, 126.0], [68.7, 126.0], [68.8, 126.0], [68.9, 126.0], [69.0, 130.0], [69.1, 130.0], [69.2, 130.0], [69.3, 130.0], [69.4, 130.0], [69.5, 134.0], [69.6, 134.0], [69.7, 134.0], [69.8, 134.0], [69.9, 134.0], [70.0, 138.0], [70.1, 138.0], [70.2, 138.0], [70.3, 138.0], [70.4, 138.0], [70.5, 138.0], [70.6, 138.0], [70.7, 138.0], [70.8, 138.0], [70.9, 138.0], [71.0, 140.0], [71.1, 140.0], [71.2, 140.0], [71.3, 140.0], [71.4, 140.0], [71.5, 141.0], [71.6, 141.0], [71.7, 141.0], [71.8, 141.0], [71.9, 141.0], [72.0, 143.0], [72.1, 143.0], [72.2, 143.0], [72.3, 143.0], [72.4, 143.0], [72.5, 144.0], [72.6, 144.0], [72.7, 144.0], [72.8, 144.0], [72.9, 144.0], [73.0, 144.0], [73.1, 144.0], [73.2, 144.0], [73.3, 144.0], [73.4, 144.0], [73.5, 146.0], [73.6, 146.0], [73.7, 146.0], [73.8, 146.0], [73.9, 146.0], [74.0, 146.0], [74.1, 146.0], [74.2, 146.0], [74.3, 146.0], [74.4, 146.0], [74.5, 147.0], [74.6, 147.0], [74.7, 147.0], [74.8, 147.0], [74.9, 147.0], [75.0, 147.0], [75.1, 147.0], [75.2, 147.0], [75.3, 147.0], [75.4, 147.0], [75.5, 150.0], [75.6, 150.0], [75.7, 150.0], [75.8, 150.0], [75.9, 150.0], [76.0, 153.0], [76.1, 153.0], [76.2, 153.0], [76.3, 153.0], [76.4, 153.0], [76.5, 156.0], [76.6, 156.0], [76.7, 156.0], [76.8, 156.0], [76.9, 156.0], [77.0, 159.0], [77.1, 159.0], [77.2, 159.0], [77.3, 159.0], [77.4, 159.0], [77.5, 162.0], [77.6, 162.0], [77.7, 162.0], [77.8, 162.0], [77.9, 162.0], [78.0, 164.0], [78.1, 164.0], [78.2, 164.0], [78.3, 164.0], [78.4, 164.0], [78.5, 164.0], [78.6, 164.0], [78.7, 164.0], [78.8, 164.0], [78.9, 164.0], [79.0, 164.0], [79.1, 164.0], [79.2, 164.0], [79.3, 164.0], [79.4, 164.0], [79.5, 165.0], [79.6, 165.0], [79.7, 165.0], [79.8, 165.0], [79.9, 165.0], [80.0, 175.0], [80.1, 175.0], [80.2, 175.0], [80.3, 175.0], [80.4, 175.0], [80.5, 193.0], [80.6, 193.0], [80.7, 193.0], [80.8, 193.0], [80.9, 193.0], [81.0, 196.0], [81.1, 196.0], [81.2, 196.0], [81.3, 196.0], [81.4, 196.0], [81.5, 197.0], [81.6, 197.0], [81.7, 197.0], [81.8, 197.0], [81.9, 197.0], [82.0, 198.0], [82.1, 198.0], [82.2, 198.0], [82.3, 198.0], [82.4, 198.0], [82.5, 199.0], [82.6, 199.0], [82.7, 199.0], [82.8, 199.0], [82.9, 199.0], [83.0, 199.0], [83.1, 199.0], [83.2, 199.0], [83.3, 199.0], [83.4, 199.0], [83.5, 203.0], [83.6, 203.0], [83.7, 203.0], [83.8, 203.0], [83.9, 203.0], [84.0, 209.0], [84.1, 209.0], [84.2, 209.0], [84.3, 209.0], [84.4, 209.0], [84.5, 209.0], [84.6, 209.0], [84.7, 209.0], [84.8, 209.0], [84.9, 209.0], [85.0, 215.0], [85.1, 215.0], [85.2, 215.0], [85.3, 215.0], [85.4, 215.0], [85.5, 218.0], [85.6, 218.0], [85.7, 218.0], [85.8, 218.0], [85.9, 218.0], [86.0, 223.0], [86.1, 223.0], [86.2, 223.0], [86.3, 223.0], [86.4, 223.0], [86.5, 228.0], [86.6, 228.0], [86.7, 228.0], [86.8, 228.0], [86.9, 228.0], [87.0, 229.0], [87.1, 229.0], [87.2, 229.0], [87.3, 229.0], [87.4, 229.0], [87.5, 239.0], [87.6, 239.0], [87.7, 239.0], [87.8, 239.0], [87.9, 239.0], [88.0, 247.0], [88.1, 247.0], [88.2, 247.0], [88.3, 247.0], [88.4, 247.0], [88.5, 289.0], [88.6, 289.0], [88.7, 289.0], [88.8, 289.0], [88.9, 289.0], [89.0, 295.0], [89.1, 295.0], [89.2, 295.0], [89.3, 295.0], [89.4, 295.0], [89.5, 300.0], [89.6, 300.0], [89.7, 300.0], [89.8, 300.0], [89.9, 300.0], [90.0, 300.0], [90.1, 300.0], [90.2, 300.0], [90.3, 300.0], [90.4, 300.0], [90.5, 302.0], [90.6, 302.0], [90.7, 302.0], [90.8, 302.0], [90.9, 302.0], [91.0, 304.0], [91.1, 304.0], [91.2, 304.0], [91.3, 304.0], [91.4, 304.0], [91.5, 307.0], [91.6, 307.0], [91.7, 307.0], [91.8, 307.0], [91.9, 307.0], [92.0, 323.0], [92.1, 323.0], [92.2, 323.0], [92.3, 323.0], [92.4, 323.0], [92.5, 351.0], [92.6, 351.0], [92.7, 351.0], [92.8, 351.0], [92.9, 351.0], [93.0, 368.0], [93.1, 368.0], [93.2, 368.0], [93.3, 368.0], [93.4, 368.0], [93.5, 389.0], [93.6, 389.0], [93.7, 389.0], [93.8, 389.0], [93.9, 389.0], [94.0, 450.0], [94.1, 450.0], [94.2, 450.0], [94.3, 450.0], [94.4, 450.0], [94.5, 461.0], [94.6, 461.0], [94.7, 461.0], [94.8, 461.0], [94.9, 461.0], [95.0, 504.0], [95.1, 504.0], [95.2, 504.0], [95.3, 504.0], [95.4, 504.0], [95.5, 513.0], [95.6, 513.0], [95.7, 513.0], [95.8, 513.0], [95.9, 513.0], [96.0, 587.0], [96.1, 587.0], [96.2, 587.0], [96.3, 587.0], [96.4, 587.0], [96.5, 642.0], [96.6, 642.0], [96.7, 642.0], [96.8, 642.0], [96.9, 642.0], [97.0, 715.0], [97.1, 715.0], [97.2, 715.0], [97.3, 715.0], [97.4, 715.0], [97.5, 875.0], [97.6, 875.0], [97.7, 875.0], [97.8, 875.0], [97.9, 875.0], [98.0, 950.0], [98.1, 950.0], [98.2, 950.0], [98.3, 950.0], [98.4, 950.0], [98.5, 980.0], [98.6, 980.0], [98.7, 980.0], [98.8, 980.0], [98.9, 980.0], [99.0, 2173.0], [99.1, 2173.0], [99.2, 2173.0], [99.3, 2173.0], [99.4, 2173.0], [99.5, 2289.0], [99.6, 2289.0], [99.7, 2289.0], [99.8, 2289.0], [99.9, 2289.0]], "isOverall": false, "label": "2", "isController": false}, {"data": [[0.0, 30.0], [0.1, 30.0], [0.2, 30.0], [0.3, 33.0], [0.4, 33.0], [0.5, 34.0], [0.6, 34.0], [0.7, 34.0], [0.8, 34.0], [0.9, 34.0], [1.0, 34.0], [1.1, 34.0], [1.2, 34.0], [1.3, 35.0], [1.4, 35.0], [1.5, 35.0], [1.6, 35.0], [1.7, 35.0], [1.8, 36.0], [1.9, 36.0], [2.0, 36.0], [2.1, 36.0], [2.2, 36.0], [2.3, 37.0], [2.4, 37.0], [2.5, 37.0], [2.6, 37.0], [2.7, 37.0], [2.8, 37.0], [2.9, 37.0], [3.0, 37.0], [3.1, 37.0], [3.2, 37.0], [3.3, 37.0], [3.4, 37.0], [3.5, 38.0], [3.6, 38.0], [3.7, 38.0], [3.8, 38.0], [3.9, 38.0], [4.0, 38.0], [4.1, 38.0], [4.2, 38.0], [4.3, 38.0], [4.4, 38.0], [4.5, 40.0], [4.6, 40.0], [4.7, 40.0], [4.8, 40.0], [4.9, 40.0], [5.0, 41.0], [5.1, 41.0], [5.2, 41.0], [5.3, 42.0], [5.4, 42.0], [5.5, 42.0], [5.6, 42.0], [5.7, 42.0], [5.8, 42.0], [5.9, 42.0], [6.0, 42.0], [6.1, 42.0], [6.2, 42.0], [6.3, 43.0], [6.4, 43.0], [6.5, 43.0], [6.6, 43.0], [6.7, 43.0], [6.8, 43.0], [6.9, 43.0], [7.0, 44.0], [7.1, 44.0], [7.2, 44.0], [7.3, 44.0], [7.4, 44.0], [7.5, 44.0], [7.6, 44.0], [7.7, 44.0], [7.8, 45.0], [7.9, 45.0], [8.0, 46.0], [8.1, 46.0], [8.2, 46.0], [8.3, 46.0], [8.4, 46.0], [8.5, 47.0], [8.6, 47.0], [8.7, 47.0], [8.8, 47.0], [8.9, 47.0], [9.0, 47.0], [9.1, 47.0], [9.2, 47.0], [9.3, 47.0], [9.4, 47.0], [9.5, 48.0], [9.6, 48.0], [9.7, 48.0], [9.8, 48.0], [9.9, 48.0], [10.0, 48.0], [10.1, 48.0], [10.2, 48.0], [10.3, 48.0], [10.4, 48.0], [10.5, 48.0], [10.6, 48.0], [10.7, 48.0], [10.8, 49.0], [10.9, 49.0], [11.0, 49.0], [11.1, 49.0], [11.2, 49.0], [11.3, 49.0], [11.4, 49.0], [11.5, 50.0], [11.6, 50.0], [11.7, 50.0], [11.8, 51.0], [11.9, 51.0], [12.0, 51.0], [12.1, 51.0], [12.2, 51.0], [12.3, 52.0], [12.4, 52.0], [12.5, 52.0], [12.6, 52.0], [12.7, 52.0], [12.8, 52.0], [12.9, 52.0], [13.0, 52.0], [13.1, 52.0], [13.2, 52.0], [13.3, 53.0], [13.4, 53.0], [13.5, 53.0], [13.6, 53.0], [13.7, 53.0], [13.8, 53.0], [13.9, 53.0], [14.0, 54.0], [14.1, 54.0], [14.2, 54.0], [14.3, 55.0], [14.4, 55.0], [14.5, 55.0], [14.6, 55.0], [14.7, 55.0], [14.8, 55.0], [14.9, 55.0], [15.0, 56.0], [15.1, 56.0], [15.2, 56.0], [15.3, 56.0], [15.4, 56.0], [15.5, 56.0], [15.6, 56.0], [15.7, 56.0], [15.8, 56.0], [15.9, 56.0], [16.0, 57.0], [16.1, 57.0], [16.2, 57.0], [16.3, 57.0], [16.4, 57.0], [16.5, 57.0], [16.6, 57.0], [16.7, 57.0], [16.8, 57.0], [16.9, 57.0], [17.0, 57.0], [17.1, 57.0], [17.2, 57.0], [17.3, 57.0], [17.4, 57.0], [17.5, 58.0], [17.6, 58.0], [17.7, 58.0], [17.8, 59.0], [17.9, 59.0], [18.0, 59.0], [18.1, 59.0], [18.2, 59.0], [18.3, 60.0], [18.4, 60.0], [18.5, 60.0], [18.6, 60.0], [18.7, 60.0], [18.8, 61.0], [18.9, 61.0], [19.0, 62.0], [19.1, 62.0], [19.2, 62.0], [19.3, 62.0], [19.4, 62.0], [19.5, 62.0], [19.6, 62.0], [19.7, 62.0], [19.8, 63.0], [19.9, 63.0], [20.0, 64.0], [20.1, 64.0], [20.2, 64.0], [20.3, 64.0], [20.4, 64.0], [20.5, 64.0], [20.6, 64.0], [20.7, 64.0], [20.8, 64.0], [20.9, 64.0], [21.0, 64.0], [21.1, 64.0], [21.2, 64.0], [21.3, 64.0], [21.4, 64.0], [21.5, 64.0], [21.6, 64.0], [21.7, 64.0], [21.8, 65.0], [21.9, 65.0], [22.0, 65.0], [22.1, 65.0], [22.2, 65.0], [22.3, 65.0], [22.4, 65.0], [22.5, 65.0], [22.6, 65.0], [22.7, 65.0], [22.8, 65.0], [22.9, 65.0], [23.0, 66.0], [23.1, 66.0], [23.2, 66.0], [23.3, 66.0], [23.4, 66.0], [23.5, 67.0], [23.6, 67.0], [23.7, 67.0], [23.8, 67.0], [23.9, 67.0], [24.0, 68.0], [24.1, 68.0], [24.2, 68.0], [24.3, 68.0], [24.4, 68.0], [24.5, 68.0], [24.6, 68.0], [24.7, 68.0], [24.8, 68.0], [24.9, 68.0], [25.0, 69.0], [25.1, 69.0], [25.2, 69.0], [25.3, 70.0], [25.4, 70.0], [25.5, 70.0], [25.6, 70.0], [25.7, 70.0], [25.8, 71.0], [25.9, 71.0], [26.0, 71.0], [26.1, 71.0], [26.2, 71.0], [26.3, 71.0], [26.4, 71.0], [26.5, 71.0], [26.6, 71.0], [26.7, 71.0], [26.8, 72.0], [26.9, 72.0], [27.0, 75.0], [27.1, 75.0], [27.2, 75.0], [27.3, 77.0], [27.4, 77.0], [27.5, 77.0], [27.6, 77.0], [27.7, 77.0], [27.8, 77.0], [27.9, 77.0], [28.0, 77.0], [28.1, 77.0], [28.2, 77.0], [28.3, 77.0], [28.4, 77.0], [28.5, 79.0], [28.6, 79.0], [28.7, 79.0], [28.8, 79.0], [28.9, 79.0], [29.0, 79.0], [29.1, 79.0], [29.2, 79.0], [29.3, 79.0], [29.4, 79.0], [29.5, 80.0], [29.6, 80.0], [29.7, 80.0], [29.8, 80.0], [29.9, 80.0], [30.0, 80.0], [30.1, 80.0], [30.2, 80.0], [30.3, 81.0], [30.4, 81.0], [30.5, 81.0], [30.6, 81.0], [30.7, 81.0], [30.8, 81.0], [30.9, 81.0], [31.0, 82.0], [31.1, 82.0], [31.2, 82.0], [31.3, 82.0], [31.4, 82.0], [31.5, 82.0], [31.6, 82.0], [31.7, 82.0], [31.8, 82.0], [31.9, 82.0], [32.0, 82.0], [32.1, 82.0], [32.2, 82.0], [32.3, 82.0], [32.4, 82.0], [32.5, 82.0], [32.6, 82.0], [32.7, 82.0], [32.8, 83.0], [32.9, 83.0], [33.0, 83.0], [33.1, 83.0], [33.2, 83.0], [33.3, 83.0], [33.4, 83.0], [33.5, 83.0], [33.6, 83.0], [33.7, 83.0], [33.8, 84.0], [33.9, 84.0], [34.0, 84.0], [34.1, 84.0], [34.2, 84.0], [34.3, 85.0], [34.4, 85.0], [34.5, 85.0], [34.6, 85.0], [34.7, 85.0], [34.8, 86.0], [34.9, 86.0], [35.0, 86.0], [35.1, 86.0], [35.2, 86.0], [35.3, 86.0], [35.4, 86.0], [35.5, 87.0], [35.6, 87.0], [35.7, 87.0], [35.8, 87.0], [35.9, 87.0], [36.0, 87.0], [36.1, 87.0], [36.2, 87.0], [36.3, 87.0], [36.4, 87.0], [36.5, 87.0], [36.6, 87.0], [36.7, 87.0], [36.8, 88.0], [36.9, 88.0], [37.0, 88.0], [37.1, 88.0], [37.2, 88.0], [37.3, 88.0], [37.4, 88.0], [37.5, 89.0], [37.6, 89.0], [37.7, 89.0], [37.8, 90.0], [37.9, 90.0], [38.0, 91.0], [38.1, 91.0], [38.2, 91.0], [38.3, 91.0], [38.4, 91.0], [38.5, 91.0], [38.6, 91.0], [38.7, 91.0], [38.8, 91.0], [38.9, 91.0], [39.0, 91.0], [39.1, 91.0], [39.2, 91.0], [39.3, 92.0], [39.4, 92.0], [39.5, 92.0], [39.6, 92.0], [39.7, 92.0], [39.8, 93.0], [39.9, 93.0], [40.0, 94.0], [40.1, 94.0], [40.2, 94.0], [40.3, 95.0], [40.4, 95.0], [40.5, 95.0], [40.6, 95.0], [40.7, 95.0], [40.8, 96.0], [40.9, 96.0], [41.0, 96.0], [41.1, 96.0], [41.2, 96.0], [41.3, 96.0], [41.4, 96.0], [41.5, 97.0], [41.6, 97.0], [41.7, 97.0], [41.8, 97.0], [41.9, 97.0], [42.0, 98.0], [42.1, 98.0], [42.2, 98.0], [42.3, 98.0], [42.4, 98.0], [42.5, 98.0], [42.6, 98.0], [42.7, 98.0], [42.8, 99.0], [42.9, 99.0], [43.0, 99.0], [43.1, 99.0], [43.2, 99.0], [43.3, 99.0], [43.4, 99.0], [43.5, 99.0], [43.6, 99.0], [43.7, 99.0], [43.8, 99.0], [43.9, 99.0], [44.0, 100.0], [44.1, 100.0], [44.2, 100.0], [44.3, 101.0], [44.4, 101.0], [44.5, 102.0], [44.6, 102.0], [44.7, 102.0], [44.8, 102.0], [44.9, 102.0], [45.0, 103.0], [45.1, 103.0], [45.2, 103.0], [45.3, 103.0], [45.4, 103.0], [45.5, 103.0], [45.6, 103.0], [45.7, 103.0], [45.8, 103.0], [45.9, 103.0], [46.0, 104.0], [46.1, 104.0], [46.2, 104.0], [46.3, 104.0], [46.4, 104.0], [46.5, 104.0], [46.6, 104.0], [46.7, 104.0], [46.8, 104.0], [46.9, 104.0], [47.0, 105.0], [47.1, 105.0], [47.2, 105.0], [47.3, 105.0], [47.4, 105.0], [47.5, 105.0], [47.6, 105.0], [47.7, 105.0], [47.8, 105.0], [47.9, 105.0], [48.0, 106.0], [48.1, 106.0], [48.2, 106.0], [48.3, 107.0], [48.4, 107.0], [48.5, 107.0], [48.6, 107.0], [48.7, 107.0], [48.8, 107.0], [48.9, 107.0], [49.0, 107.0], [49.1, 107.0], [49.2, 107.0], [49.3, 108.0], [49.4, 108.0], [49.5, 109.0], [49.6, 109.0], [49.7, 109.0], [49.8, 109.0], [49.9, 109.0], [50.0, 110.0], [50.1, 110.0], [50.2, 110.0], [50.3, 111.0], [50.4, 111.0], [50.5, 111.0], [50.6, 111.0], [50.7, 111.0], [50.8, 111.0], [50.9, 111.0], [51.0, 111.0], [51.1, 111.0], [51.2, 111.0], [51.3, 112.0], [51.4, 112.0], [51.5, 112.0], [51.6, 112.0], [51.7, 112.0], [51.8, 115.0], [51.9, 115.0], [52.0, 115.0], [52.1, 115.0], [52.2, 115.0], [52.3, 116.0], [52.4, 116.0], [52.5, 116.0], [52.6, 116.0], [52.7, 116.0], [52.8, 116.0], [52.9, 116.0], [53.0, 116.0], [53.1, 116.0], [53.2, 116.0], [53.3, 118.0], [53.4, 118.0], [53.5, 118.0], [53.6, 118.0], [53.7, 118.0], [53.8, 118.0], [53.9, 118.0], [54.0, 118.0], [54.1, 118.0], [54.2, 118.0], [54.3, 119.0], [54.4, 119.0], [54.5, 120.0], [54.6, 120.0], [54.7, 120.0], [54.8, 120.0], [54.9, 120.0], [55.0, 122.0], [55.1, 122.0], [55.2, 122.0], [55.3, 123.0], [55.4, 123.0], [55.5, 123.0], [55.6, 123.0], [55.7, 123.0], [55.8, 123.0], [55.9, 123.0], [56.0, 124.0], [56.1, 124.0], [56.2, 124.0], [56.3, 125.0], [56.4, 125.0], [56.5, 125.0], [56.6, 125.0], [56.7, 125.0], [56.8, 125.0], [56.9, 125.0], [57.0, 126.0], [57.1, 126.0], [57.2, 126.0], [57.3, 126.0], [57.4, 126.0], [57.5, 127.0], [57.6, 127.0], [57.7, 127.0], [57.8, 127.0], [57.9, 127.0], [58.0, 128.0], [58.1, 128.0], [58.2, 128.0], [58.3, 128.0], [58.4, 128.0], [58.5, 130.0], [58.6, 130.0], [58.7, 130.0], [58.8, 130.0], [58.9, 130.0], [59.0, 131.0], [59.1, 131.0], [59.2, 131.0], [59.3, 132.0], [59.4, 132.0], [59.5, 132.0], [59.6, 132.0], [59.7, 132.0], [59.8, 133.0], [59.9, 133.0], [60.0, 133.0], [60.1, 133.0], [60.2, 133.0], [60.3, 134.0], [60.4, 134.0], [60.5, 134.0], [60.6, 134.0], [60.7, 134.0], [60.8, 135.0], [60.9, 135.0], [61.0, 136.0], [61.1, 136.0], [61.2, 136.0], [61.3, 137.0], [61.4, 137.0], [61.5, 137.0], [61.6, 137.0], [61.7, 137.0], [61.8, 138.0], [61.9, 138.0], [62.0, 139.0], [62.1, 139.0], [62.2, 139.0], [62.3, 139.0], [62.4, 139.0], [62.5, 140.0], [62.6, 140.0], [62.7, 140.0], [62.8, 141.0], [62.9, 141.0], [63.0, 142.0], [63.1, 142.0], [63.2, 142.0], [63.3, 143.0], [63.4, 143.0], [63.5, 144.0], [63.6, 144.0], [63.7, 144.0], [63.8, 145.0], [63.9, 145.0], [64.0, 146.0], [64.1, 146.0], [64.2, 146.0], [64.3, 146.0], [64.4, 146.0], [64.5, 147.0], [64.6, 147.0], [64.7, 147.0], [64.8, 148.0], [64.9, 148.0], [65.0, 149.0], [65.1, 149.0], [65.2, 149.0], [65.3, 157.0], [65.4, 157.0], [65.5, 157.0], [65.6, 157.0], [65.7, 157.0], [65.8, 158.0], [65.9, 158.0], [66.0, 158.0], [66.1, 158.0], [66.2, 158.0], [66.3, 162.0], [66.4, 162.0], [66.5, 164.0], [66.6, 164.0], [66.7, 164.0], [66.8, 165.0], [66.9, 165.0], [67.0, 165.0], [67.1, 165.0], [67.2, 165.0], [67.3, 166.0], [67.4, 166.0], [67.5, 166.0], [67.6, 166.0], [67.7, 166.0], [67.8, 166.0], [67.9, 166.0], [68.0, 168.0], [68.1, 168.0], [68.2, 168.0], [68.3, 169.0], [68.4, 169.0], [68.5, 169.0], [68.6, 169.0], [68.7, 169.0], [68.8, 170.0], [68.9, 170.0], [69.0, 170.0], [69.1, 170.0], [69.2, 170.0], [69.3, 175.0], [69.4, 175.0], [69.5, 176.0], [69.6, 176.0], [69.7, 176.0], [69.8, 176.0], [69.9, 176.0], [70.0, 178.0], [70.1, 178.0], [70.2, 178.0], [70.3, 178.0], [70.4, 178.0], [70.5, 180.0], [70.6, 180.0], [70.7, 180.0], [70.8, 180.0], [70.9, 180.0], [71.0, 183.0], [71.1, 183.0], [71.2, 183.0], [71.3, 187.0], [71.4, 187.0], [71.5, 187.0], [71.6, 187.0], [71.7, 187.0], [71.8, 191.0], [71.9, 191.0], [72.0, 195.0], [72.1, 195.0], [72.2, 195.0], [72.3, 201.0], [72.4, 201.0], [72.5, 205.0], [72.6, 205.0], [72.7, 205.0], [72.8, 205.0], [72.9, 205.0], [73.0, 205.0], [73.1, 205.0], [73.2, 205.0], [73.3, 206.0], [73.4, 206.0], [73.5, 209.0], [73.6, 209.0], [73.7, 209.0], [73.8, 209.0], [73.9, 209.0], [74.0, 211.0], [74.1, 211.0], [74.2, 211.0], [74.3, 213.0], [74.4, 213.0], [74.5, 214.0], [74.6, 214.0], [74.7, 214.0], [74.8, 215.0], [74.9, 215.0], [75.0, 219.0], [75.1, 219.0], [75.2, 219.0], [75.3, 221.0], [75.4, 221.0], [75.5, 222.0], [75.6, 222.0], [75.7, 222.0], [75.8, 228.0], [75.9, 228.0], [76.0, 229.0], [76.1, 229.0], [76.2, 229.0], [76.3, 231.0], [76.4, 231.0], [76.5, 232.0], [76.6, 232.0], [76.7, 232.0], [76.8, 238.0], [76.9, 238.0], [77.0, 240.0], [77.1, 240.0], [77.2, 240.0], [77.3, 240.0], [77.4, 240.0], [77.5, 244.0], [77.6, 244.0], [77.7, 244.0], [77.8, 249.0], [77.9, 249.0], [78.0, 250.0], [78.1, 250.0], [78.2, 250.0], [78.3, 254.0], [78.4, 254.0], [78.5, 255.0], [78.6, 255.0], [78.7, 255.0], [78.8, 256.0], [78.9, 256.0], [79.0, 264.0], [79.1, 264.0], [79.2, 264.0], [79.3, 264.0], [79.4, 264.0], [79.5, 273.0], [79.6, 273.0], [79.7, 273.0], [79.8, 274.0], [79.9, 274.0], [80.0, 274.0], [80.1, 274.0], [80.2, 274.0], [80.3, 275.0], [80.4, 275.0], [80.5, 278.0], [80.6, 278.0], [80.7, 278.0], [80.8, 278.0], [80.9, 278.0], [81.0, 278.0], [81.1, 278.0], [81.2, 278.0], [81.3, 281.0], [81.4, 281.0], [81.5, 286.0], [81.6, 286.0], [81.7, 286.0], [81.8, 288.0], [81.9, 288.0], [82.0, 290.0], [82.1, 290.0], [82.2, 290.0], [82.3, 292.0], [82.4, 292.0], [82.5, 294.0], [82.6, 294.0], [82.7, 294.0], [82.8, 296.0], [82.9, 296.0], [83.0, 299.0], [83.1, 299.0], [83.2, 299.0], [83.3, 301.0], [83.4, 301.0], [83.5, 306.0], [83.6, 306.0], [83.7, 306.0], [83.8, 307.0], [83.9, 307.0], [84.0, 309.0], [84.1, 309.0], [84.2, 309.0], [84.3, 310.0], [84.4, 310.0], [84.5, 311.0], [84.6, 311.0], [84.7, 311.0], [84.8, 320.0], [84.9, 320.0], [85.0, 320.0], [85.1, 320.0], [85.2, 320.0], [85.3, 324.0], [85.4, 324.0], [85.5, 329.0], [85.6, 329.0], [85.7, 329.0], [85.8, 336.0], [85.9, 336.0], [86.0, 338.0], [86.1, 338.0], [86.2, 338.0], [86.3, 340.0], [86.4, 340.0], [86.5, 340.0], [86.6, 340.0], [86.7, 340.0], [86.8, 343.0], [86.9, 343.0], [87.0, 343.0], [87.1, 343.0], [87.2, 343.0], [87.3, 347.0], [87.4, 347.0], [87.5, 355.0], [87.6, 355.0], [87.7, 355.0], [87.8, 357.0], [87.9, 357.0], [88.0, 357.0], [88.1, 357.0], [88.2, 357.0], [88.3, 360.0], [88.4, 360.0], [88.5, 373.0], [88.6, 373.0], [88.7, 373.0], [88.8, 375.0], [88.9, 375.0], [89.0, 389.0], [89.1, 389.0], [89.2, 389.0], [89.3, 396.0], [89.4, 396.0], [89.5, 403.0], [89.6, 403.0], [89.7, 403.0], [89.8, 415.0], [89.9, 415.0], [90.0, 425.0], [90.1, 425.0], [90.2, 425.0], [90.3, 435.0], [90.4, 435.0], [90.5, 448.0], [90.6, 448.0], [90.7, 448.0], [90.8, 449.0], [90.9, 449.0], [91.0, 457.0], [91.1, 457.0], [91.2, 457.0], [91.3, 462.0], [91.4, 462.0], [91.5, 468.0], [91.6, 468.0], [91.7, 468.0], [91.8, 469.0], [91.9, 469.0], [92.0, 471.0], [92.1, 471.0], [92.2, 471.0], [92.3, 476.0], [92.4, 476.0], [92.5, 507.0], [92.6, 507.0], [92.7, 507.0], [92.8, 509.0], [92.9, 509.0], [93.0, 546.0], [93.1, 546.0], [93.2, 546.0], [93.3, 594.0], [93.4, 594.0], [93.5, 602.0], [93.6, 602.0], [93.7, 602.0], [93.8, 629.0], [93.9, 629.0], [94.0, 647.0], [94.1, 647.0], [94.2, 647.0], [94.3, 649.0], [94.4, 649.0], [94.5, 658.0], [94.6, 658.0], [94.7, 658.0], [94.8, 689.0], [94.9, 689.0], [95.0, 766.0], [95.1, 766.0], [95.2, 766.0], [95.3, 838.0], [95.4, 838.0], [95.5, 843.0], [95.6, 843.0], [95.7, 843.0], [95.8, 878.0], [95.9, 878.0], [96.0, 882.0], [96.1, 882.0], [96.2, 882.0], [96.3, 889.0], [96.4, 889.0], [96.5, 895.0], [96.6, 895.0], [96.7, 895.0], [96.8, 903.0], [96.9, 903.0], [97.0, 1027.0], [97.1, 1027.0], [97.2, 1027.0], [97.3, 1079.0], [97.4, 1079.0], [97.5, 1121.0], [97.6, 1121.0], [97.7, 1121.0], [97.8, 1138.0], [97.9, 1138.0], [98.0, 1167.0], [98.1, 1167.0], [98.2, 1167.0], [98.3, 1236.0], [98.4, 1236.0], [98.5, 1360.0], [98.6, 1360.0], [98.7, 1360.0], [98.8, 2356.0], [98.9, 2356.0], [99.0, 2417.0], [99.1, 2417.0], [99.2, 2417.0], [99.3, 2419.0], [99.4, 2419.0], [99.5, 2451.0], [99.6, 2451.0], [99.7, 2451.0], [99.8, 2589.0], [99.9, 2589.0]], "isOverall": false, "label": "4", "isController": false}, {"data": [[0.0, 35.0], [0.1, 37.0], [0.2, 41.0], [0.3, 43.0], [0.4, 44.0], [0.5, 45.0], [0.6, 45.0], [0.7, 47.0], [0.8, 48.0], [0.9, 50.0], [1.0, 52.0], [1.1, 53.0], [1.2, 56.0], [1.3, 56.0], [1.4, 58.0], [1.5, 62.0], [1.6, 62.0], [1.7, 63.0], [1.8, 63.0], [1.9, 66.0], [2.0, 67.0], [2.1, 67.0], [2.2, 69.0], [2.3, 70.0], [2.4, 71.0], [2.5, 72.0], [2.6, 73.0], [2.7, 73.0], [2.8, 76.0], [2.9, 76.0], [3.0, 78.0], [3.1, 80.0], [3.2, 81.0], [3.3, 81.0], [3.4, 82.0], [3.5, 83.0], [3.6, 83.0], [3.7, 83.0], [3.8, 83.0], [3.9, 84.0], [4.0, 84.0], [4.1, 85.0], [4.2, 85.0], [4.3, 85.0], [4.4, 86.0], [4.5, 87.0], [4.6, 87.0], [4.7, 88.0], [4.8, 88.0], [4.9, 88.0], [5.0, 89.0], [5.1, 90.0], [5.2, 90.0], [5.3, 90.0], [5.4, 92.0], [5.5, 92.0], [5.6, 93.0], [5.7, 94.0], [5.8, 94.0], [5.9, 94.0], [6.0, 94.0], [6.1, 95.0], [6.2, 96.0], [6.3, 96.0], [6.4, 96.0], [6.5, 98.0], [6.6, 99.0], [6.7, 99.0], [6.8, 99.0], [6.9, 100.0], [7.0, 100.0], [7.1, 100.0], [7.2, 100.0], [7.3, 101.0], [7.4, 101.0], [7.5, 102.0], [7.6, 102.0], [7.7, 102.0], [7.8, 102.0], [7.9, 103.0], [8.0, 103.0], [8.1, 104.0], [8.2, 104.0], [8.3, 104.0], [8.4, 105.0], [8.5, 105.0], [8.6, 106.0], [8.7, 106.0], [8.8, 106.0], [8.9, 106.0], [9.0, 107.0], [9.1, 107.0], [9.2, 107.0], [9.3, 107.0], [9.4, 108.0], [9.5, 108.0], [9.6, 109.0], [9.7, 109.0], [9.8, 109.0], [9.9, 110.0], [10.0, 110.0], [10.1, 111.0], [10.2, 111.0], [10.3, 112.0], [10.4, 112.0], [10.5, 113.0], [10.6, 113.0], [10.7, 114.0], [10.8, 115.0], [10.9, 116.0], [11.0, 117.0], [11.1, 117.0], [11.2, 117.0], [11.3, 118.0], [11.4, 118.0], [11.5, 119.0], [11.6, 119.0], [11.7, 120.0], [11.8, 120.0], [11.9, 122.0], [12.0, 123.0], [12.1, 123.0], [12.2, 123.0], [12.3, 124.0], [12.4, 124.0], [12.5, 125.0], [12.6, 125.0], [12.7, 125.0], [12.8, 126.0], [12.9, 127.0], [13.0, 127.0], [13.1, 128.0], [13.2, 128.0], [13.3, 128.0], [13.4, 129.0], [13.5, 130.0], [13.6, 131.0], [13.7, 131.0], [13.8, 131.0], [13.9, 132.0], [14.0, 133.0], [14.1, 133.0], [14.2, 133.0], [14.3, 133.0], [14.4, 133.0], [14.5, 134.0], [14.6, 134.0], [14.7, 136.0], [14.8, 136.0], [14.9, 136.0], [15.0, 137.0], [15.1, 137.0], [15.2, 137.0], [15.3, 138.0], [15.4, 138.0], [15.5, 140.0], [15.6, 140.0], [15.7, 141.0], [15.8, 141.0], [15.9, 141.0], [16.0, 142.0], [16.1, 143.0], [16.2, 143.0], [16.3, 143.0], [16.4, 144.0], [16.5, 144.0], [16.6, 145.0], [16.7, 146.0], [16.8, 146.0], [16.9, 147.0], [17.0, 150.0], [17.1, 150.0], [17.2, 151.0], [17.3, 151.0], [17.4, 151.0], [17.5, 151.0], [17.6, 151.0], [17.7, 152.0], [17.8, 152.0], [17.9, 153.0], [18.0, 154.0], [18.1, 154.0], [18.2, 155.0], [18.3, 155.0], [18.4, 156.0], [18.5, 156.0], [18.6, 156.0], [18.7, 157.0], [18.8, 158.0], [18.9, 158.0], [19.0, 158.0], [19.1, 158.0], [19.2, 159.0], [19.3, 159.0], [19.4, 160.0], [19.5, 160.0], [19.6, 161.0], [19.7, 162.0], [19.8, 163.0], [19.9, 164.0], [20.0, 165.0], [20.1, 165.0], [20.2, 166.0], [20.3, 166.0], [20.4, 167.0], [20.5, 167.0], [20.6, 168.0], [20.7, 168.0], [20.8, 169.0], [20.9, 169.0], [21.0, 170.0], [21.1, 170.0], [21.2, 172.0], [21.3, 173.0], [21.4, 173.0], [21.5, 174.0], [21.6, 174.0], [21.7, 175.0], [21.8, 175.0], [21.9, 177.0], [22.0, 177.0], [22.1, 177.0], [22.2, 178.0], [22.3, 178.0], [22.4, 178.0], [22.5, 179.0], [22.6, 179.0], [22.7, 181.0], [22.8, 181.0], [22.9, 182.0], [23.0, 183.0], [23.1, 184.0], [23.2, 186.0], [23.3, 186.0], [23.4, 188.0], [23.5, 189.0], [23.6, 189.0], [23.7, 190.0], [23.8, 191.0], [23.9, 191.0], [24.0, 191.0], [24.1, 192.0], [24.2, 192.0], [24.3, 193.0], [24.4, 194.0], [24.5, 194.0], [24.6, 195.0], [24.7, 198.0], [24.8, 199.0], [24.9, 199.0], [25.0, 200.0], [25.1, 201.0], [25.2, 202.0], [25.3, 202.0], [25.4, 202.0], [25.5, 203.0], [25.6, 203.0], [25.7, 204.0], [25.8, 205.0], [25.9, 206.0], [26.0, 206.0], [26.1, 207.0], [26.2, 208.0], [26.3, 208.0], [26.4, 208.0], [26.5, 208.0], [26.6, 209.0], [26.7, 209.0], [26.8, 210.0], [26.9, 212.0], [27.0, 212.0], [27.1, 212.0], [27.2, 213.0], [27.3, 213.0], [27.4, 214.0], [27.5, 216.0], [27.6, 216.0], [27.7, 216.0], [27.8, 217.0], [27.9, 217.0], [28.0, 218.0], [28.1, 218.0], [28.2, 218.0], [28.3, 219.0], [28.4, 219.0], [28.5, 220.0], [28.6, 220.0], [28.7, 221.0], [28.8, 222.0], [28.9, 222.0], [29.0, 223.0], [29.1, 223.0], [29.2, 224.0], [29.3, 225.0], [29.4, 225.0], [29.5, 226.0], [29.6, 227.0], [29.7, 227.0], [29.8, 228.0], [29.9, 229.0], [30.0, 229.0], [30.1, 230.0], [30.2, 231.0], [30.3, 231.0], [30.4, 231.0], [30.5, 232.0], [30.6, 232.0], [30.7, 233.0], [30.8, 233.0], [30.9, 234.0], [31.0, 234.0], [31.1, 235.0], [31.2, 236.0], [31.3, 236.0], [31.4, 237.0], [31.5, 238.0], [31.6, 239.0], [31.7, 240.0], [31.8, 241.0], [31.9, 241.0], [32.0, 241.0], [32.1, 243.0], [32.2, 244.0], [32.3, 245.0], [32.4, 246.0], [32.5, 247.0], [32.6, 248.0], [32.7, 249.0], [32.8, 250.0], [32.9, 250.0], [33.0, 250.0], [33.1, 250.0], [33.2, 251.0], [33.3, 252.0], [33.4, 252.0], [33.5, 252.0], [33.6, 253.0], [33.7, 254.0], [33.8, 255.0], [33.9, 256.0], [34.0, 256.0], [34.1, 256.0], [34.2, 257.0], [34.3, 257.0], [34.4, 259.0], [34.5, 260.0], [34.6, 260.0], [34.7, 261.0], [34.8, 262.0], [34.9, 263.0], [35.0, 263.0], [35.1, 263.0], [35.2, 264.0], [35.3, 265.0], [35.4, 266.0], [35.5, 267.0], [35.6, 268.0], [35.7, 268.0], [35.8, 269.0], [35.9, 270.0], [36.0, 272.0], [36.1, 272.0], [36.2, 272.0], [36.3, 272.0], [36.4, 273.0], [36.5, 276.0], [36.6, 277.0], [36.7, 278.0], [36.8, 279.0], [36.9, 279.0], [37.0, 280.0], [37.1, 280.0], [37.2, 282.0], [37.3, 282.0], [37.4, 282.0], [37.5, 283.0], [37.6, 283.0], [37.7, 284.0], [37.8, 285.0], [37.9, 286.0], [38.0, 287.0], [38.1, 288.0], [38.2, 288.0], [38.3, 289.0], [38.4, 289.0], [38.5, 290.0], [38.6, 290.0], [38.7, 291.0], [38.8, 291.0], [38.9, 292.0], [39.0, 293.0], [39.1, 293.0], [39.2, 294.0], [39.3, 294.0], [39.4, 295.0], [39.5, 295.0], [39.6, 295.0], [39.7, 296.0], [39.8, 296.0], [39.9, 297.0], [40.0, 298.0], [40.1, 299.0], [40.2, 299.0], [40.3, 299.0], [40.4, 300.0], [40.5, 300.0], [40.6, 302.0], [40.7, 303.0], [40.8, 304.0], [40.9, 304.0], [41.0, 304.0], [41.1, 304.0], [41.2, 306.0], [41.3, 306.0], [41.4, 307.0], [41.5, 307.0], [41.6, 307.0], [41.7, 308.0], [41.8, 308.0], [41.9, 309.0], [42.0, 310.0], [42.1, 311.0], [42.2, 312.0], [42.3, 313.0], [42.4, 313.0], [42.5, 314.0], [42.6, 314.0], [42.7, 315.0], [42.8, 316.0], [42.9, 317.0], [43.0, 318.0], [43.1, 318.0], [43.2, 319.0], [43.3, 321.0], [43.4, 323.0], [43.5, 324.0], [43.6, 324.0], [43.7, 324.0], [43.8, 325.0], [43.9, 326.0], [44.0, 326.0], [44.1, 326.0], [44.2, 328.0], [44.3, 328.0], [44.4, 329.0], [44.5, 330.0], [44.6, 330.0], [44.7, 331.0], [44.8, 331.0], [44.9, 331.0], [45.0, 333.0], [45.1, 333.0], [45.2, 335.0], [45.3, 336.0], [45.4, 337.0], [45.5, 337.0], [45.6, 339.0], [45.7, 340.0], [45.8, 340.0], [45.9, 340.0], [46.0, 341.0], [46.1, 341.0], [46.2, 342.0], [46.3, 342.0], [46.4, 344.0], [46.5, 344.0], [46.6, 344.0], [46.7, 345.0], [46.8, 346.0], [46.9, 347.0], [47.0, 348.0], [47.1, 349.0], [47.2, 350.0], [47.3, 350.0], [47.4, 351.0], [47.5, 352.0], [47.6, 353.0], [47.7, 354.0], [47.8, 354.0], [47.9, 356.0], [48.0, 356.0], [48.1, 356.0], [48.2, 357.0], [48.3, 358.0], [48.4, 360.0], [48.5, 361.0], [48.6, 361.0], [48.7, 362.0], [48.8, 362.0], [48.9, 363.0], [49.0, 363.0], [49.1, 363.0], [49.2, 363.0], [49.3, 365.0], [49.4, 365.0], [49.5, 366.0], [49.6, 366.0], [49.7, 367.0], [49.8, 367.0], [49.9, 369.0], [50.0, 369.0], [50.1, 370.0], [50.2, 371.0], [50.3, 371.0], [50.4, 372.0], [50.5, 375.0], [50.6, 375.0], [50.7, 376.0], [50.8, 377.0], [50.9, 377.0], [51.0, 378.0], [51.1, 378.0], [51.2, 379.0], [51.3, 380.0], [51.4, 381.0], [51.5, 382.0], [51.6, 383.0], [51.7, 383.0], [51.8, 384.0], [51.9, 384.0], [52.0, 388.0], [52.1, 389.0], [52.2, 391.0], [52.3, 391.0], [52.4, 392.0], [52.5, 392.0], [52.6, 392.0], [52.7, 393.0], [52.8, 393.0], [52.9, 395.0], [53.0, 396.0], [53.1, 397.0], [53.2, 397.0], [53.3, 397.0], [53.4, 398.0], [53.5, 398.0], [53.6, 400.0], [53.7, 401.0], [53.8, 402.0], [53.9, 402.0], [54.0, 404.0], [54.1, 405.0], [54.2, 406.0], [54.3, 406.0], [54.4, 407.0], [54.5, 407.0], [54.6, 408.0], [54.7, 408.0], [54.8, 408.0], [54.9, 409.0], [55.0, 409.0], [55.1, 410.0], [55.2, 410.0], [55.3, 411.0], [55.4, 411.0], [55.5, 413.0], [55.6, 413.0], [55.7, 414.0], [55.8, 414.0], [55.9, 414.0], [56.0, 415.0], [56.1, 416.0], [56.2, 417.0], [56.3, 417.0], [56.4, 418.0], [56.5, 419.0], [56.6, 421.0], [56.7, 422.0], [56.8, 423.0], [56.9, 425.0], [57.0, 426.0], [57.1, 427.0], [57.2, 428.0], [57.3, 428.0], [57.4, 429.0], [57.5, 429.0], [57.6, 432.0], [57.7, 432.0], [57.8, 432.0], [57.9, 434.0], [58.0, 435.0], [58.1, 435.0], [58.2, 437.0], [58.3, 438.0], [58.4, 443.0], [58.5, 445.0], [58.6, 446.0], [58.7, 448.0], [58.8, 448.0], [58.9, 452.0], [59.0, 454.0], [59.1, 454.0], [59.2, 456.0], [59.3, 457.0], [59.4, 457.0], [59.5, 460.0], [59.6, 460.0], [59.7, 460.0], [59.8, 460.0], [59.9, 461.0], [60.0, 463.0], [60.1, 465.0], [60.2, 466.0], [60.3, 466.0], [60.4, 468.0], [60.5, 468.0], [60.6, 469.0], [60.7, 469.0], [60.8, 470.0], [60.9, 471.0], [61.0, 471.0], [61.1, 471.0], [61.2, 472.0], [61.3, 472.0], [61.4, 474.0], [61.5, 476.0], [61.6, 476.0], [61.7, 476.0], [61.8, 477.0], [61.9, 480.0], [62.0, 482.0], [62.1, 484.0], [62.2, 487.0], [62.3, 487.0], [62.4, 488.0], [62.5, 489.0], [62.6, 489.0], [62.7, 490.0], [62.8, 491.0], [62.9, 492.0], [63.0, 492.0], [63.1, 493.0], [63.2, 495.0], [63.3, 495.0], [63.4, 497.0], [63.5, 498.0], [63.6, 498.0], [63.7, 500.0], [63.8, 501.0], [63.9, 504.0], [64.0, 505.0], [64.1, 506.0], [64.2, 510.0], [64.3, 510.0], [64.4, 511.0], [64.5, 513.0], [64.6, 513.0], [64.7, 518.0], [64.8, 519.0], [64.9, 519.0], [65.0, 522.0], [65.1, 523.0], [65.2, 525.0], [65.3, 526.0], [65.4, 526.0], [65.5, 527.0], [65.6, 528.0], [65.7, 529.0], [65.8, 530.0], [65.9, 532.0], [66.0, 535.0], [66.1, 535.0], [66.2, 538.0], [66.3, 538.0], [66.4, 542.0], [66.5, 542.0], [66.6, 544.0], [66.7, 546.0], [66.8, 548.0], [66.9, 550.0], [67.0, 552.0], [67.1, 552.0], [67.2, 556.0], [67.3, 556.0], [67.4, 559.0], [67.5, 560.0], [67.6, 561.0], [67.7, 565.0], [67.8, 570.0], [67.9, 572.0], [68.0, 577.0], [68.1, 577.0], [68.2, 580.0], [68.3, 581.0], [68.4, 584.0], [68.5, 585.0], [68.6, 589.0], [68.7, 590.0], [68.8, 590.0], [68.9, 593.0], [69.0, 594.0], [69.1, 598.0], [69.2, 600.0], [69.3, 601.0], [69.4, 601.0], [69.5, 604.0], [69.6, 606.0], [69.7, 608.0], [69.8, 609.0], [69.9, 612.0], [70.0, 612.0], [70.1, 615.0], [70.2, 619.0], [70.3, 620.0], [70.4, 620.0], [70.5, 625.0], [70.6, 628.0], [70.7, 629.0], [70.8, 630.0], [70.9, 632.0], [71.0, 636.0], [71.1, 638.0], [71.2, 639.0], [71.3, 641.0], [71.4, 642.0], [71.5, 643.0], [71.6, 645.0], [71.7, 646.0], [71.8, 646.0], [71.9, 649.0], [72.0, 652.0], [72.1, 654.0], [72.2, 660.0], [72.3, 661.0], [72.4, 664.0], [72.5, 671.0], [72.6, 672.0], [72.7, 675.0], [72.8, 676.0], [72.9, 677.0], [73.0, 685.0], [73.1, 685.0], [73.2, 687.0], [73.3, 688.0], [73.4, 690.0], [73.5, 693.0], [73.6, 693.0], [73.7, 694.0], [73.8, 695.0], [73.9, 697.0], [74.0, 698.0], [74.1, 698.0], [74.2, 702.0], [74.3, 705.0], [74.4, 705.0], [74.5, 706.0], [74.6, 709.0], [74.7, 711.0], [74.8, 714.0], [74.9, 716.0], [75.0, 717.0], [75.1, 717.0], [75.2, 719.0], [75.3, 720.0], [75.4, 720.0], [75.5, 725.0], [75.6, 728.0], [75.7, 730.0], [75.8, 731.0], [75.9, 735.0], [76.0, 738.0], [76.1, 740.0], [76.2, 741.0], [76.3, 741.0], [76.4, 747.0], [76.5, 751.0], [76.6, 752.0], [76.7, 758.0], [76.8, 759.0], [76.9, 760.0], [77.0, 765.0], [77.1, 767.0], [77.2, 769.0], [77.3, 770.0], [77.4, 774.0], [77.5, 779.0], [77.6, 781.0], [77.7, 786.0], [77.8, 786.0], [77.9, 788.0], [78.0, 792.0], [78.1, 794.0], [78.2, 795.0], [78.3, 796.0], [78.4, 807.0], [78.5, 811.0], [78.6, 816.0], [78.7, 817.0], [78.8, 819.0], [78.9, 820.0], [79.0, 823.0], [79.1, 823.0], [79.2, 825.0], [79.3, 829.0], [79.4, 831.0], [79.5, 837.0], [79.6, 839.0], [79.7, 847.0], [79.8, 849.0], [79.9, 849.0], [80.0, 850.0], [80.1, 851.0], [80.2, 853.0], [80.3, 858.0], [80.4, 861.0], [80.5, 863.0], [80.6, 866.0], [80.7, 867.0], [80.8, 867.0], [80.9, 871.0], [81.0, 872.0], [81.1, 873.0], [81.2, 881.0], [81.3, 881.0], [81.4, 885.0], [81.5, 893.0], [81.6, 894.0], [81.7, 895.0], [81.8, 895.0], [81.9, 898.0], [82.0, 899.0], [82.1, 899.0], [82.2, 903.0], [82.3, 904.0], [82.4, 906.0], [82.5, 908.0], [82.6, 911.0], [82.7, 912.0], [82.8, 920.0], [82.9, 928.0], [83.0, 935.0], [83.1, 937.0], [83.2, 938.0], [83.3, 943.0], [83.4, 951.0], [83.5, 957.0], [83.6, 964.0], [83.7, 972.0], [83.8, 975.0], [83.9, 980.0], [84.0, 982.0], [84.1, 984.0], [84.2, 985.0], [84.3, 989.0], [84.4, 994.0], [84.5, 1006.0], [84.6, 1006.0], [84.7, 1013.0], [84.8, 1015.0], [84.9, 1021.0], [85.0, 1023.0], [85.1, 1029.0], [85.2, 1039.0], [85.3, 1050.0], [85.4, 1057.0], [85.5, 1058.0], [85.6, 1063.0], [85.7, 1067.0], [85.8, 1068.0], [85.9, 1078.0], [86.0, 1083.0], [86.1, 1083.0], [86.2, 1089.0], [86.3, 1092.0], [86.4, 1104.0], [86.5, 1106.0], [86.6, 1106.0], [86.7, 1121.0], [86.8, 1127.0], [86.9, 1139.0], [87.0, 1141.0], [87.1, 1145.0], [87.2, 1164.0], [87.3, 1166.0], [87.4, 1173.0], [87.5, 1220.0], [87.6, 1236.0], [87.7, 1237.0], [87.8, 1237.0], [87.9, 1244.0], [88.0, 1253.0], [88.1, 1269.0], [88.2, 1274.0], [88.3, 1275.0], [88.4, 1280.0], [88.5, 1288.0], [88.6, 1296.0], [88.7, 1305.0], [88.8, 1313.0], [88.9, 1331.0], [89.0, 1345.0], [89.1, 1350.0], [89.2, 1355.0], [89.3, 1356.0], [89.4, 1358.0], [89.5, 1384.0], [89.6, 1392.0], [89.7, 1406.0], [89.8, 1437.0], [89.9, 1447.0], [90.0, 1454.0], [90.1, 1455.0], [90.2, 1478.0], [90.3, 1494.0], [90.4, 1499.0], [90.5, 1512.0], [90.6, 1534.0], [90.7, 1564.0], [90.8, 1572.0], [90.9, 1599.0], [91.0, 1631.0], [91.1, 1632.0], [91.2, 1644.0], [91.3, 1652.0], [91.4, 1680.0], [91.5, 1713.0], [91.6, 1715.0], [91.7, 1722.0], [91.8, 1756.0], [91.9, 1775.0], [92.0, 1782.0], [92.1, 1786.0], [92.2, 1789.0], [92.3, 1795.0], [92.4, 1816.0], [92.5, 1840.0], [92.6, 1847.0], [92.7, 1860.0], [92.8, 1868.0], [92.9, 1881.0], [93.0, 1915.0], [93.1, 1918.0], [93.2, 1979.0], [93.3, 1986.0], [93.4, 2045.0], [93.5, 2070.0], [93.6, 2079.0], [93.7, 2093.0], [93.8, 2102.0], [93.9, 2126.0], [94.0, 2136.0], [94.1, 2148.0], [94.2, 2222.0], [94.3, 2223.0], [94.4, 2271.0], [94.5, 2332.0], [94.6, 2333.0], [94.7, 2340.0], [94.8, 2368.0], [94.9, 2377.0], [95.0, 2387.0], [95.1, 2448.0], [95.2, 2468.0], [95.3, 2471.0], [95.4, 2487.0], [95.5, 2535.0], [95.6, 2570.0], [95.7, 2582.0], [95.8, 2586.0], [95.9, 2632.0], [96.0, 2670.0], [96.1, 2692.0], [96.2, 2705.0], [96.3, 2782.0], [96.4, 2810.0], [96.5, 2874.0], [96.6, 2880.0], [96.7, 3034.0], [96.8, 3055.0], [96.9, 3091.0], [97.0, 3221.0], [97.1, 3291.0], [97.2, 3392.0], [97.3, 3395.0], [97.4, 3457.0], [97.5, 3528.0], [97.6, 3534.0], [97.7, 3637.0], [97.8, 3640.0], [97.9, 3727.0], [98.0, 4072.0], [98.1, 4091.0], [98.2, 4194.0], [98.3, 4325.0], [98.4, 4450.0], [98.5, 4570.0], [98.6, 4852.0], [98.7, 5084.0], [98.8, 5124.0], [98.9, 5598.0], [99.0, 5702.0], [99.1, 5834.0], [99.2, 6708.0], [99.3, 6805.0], [99.4, 7188.0], [99.5, 7391.0], [99.6, 7738.0], [99.7, 9002.0], [99.8, 10571.0], [99.9, 12906.0]], "isOverall": false, "label": "16", "isController": false}, {"data": [[0.0, 29.0], [0.1, 29.0], [0.2, 31.0], [0.3, 33.0], [0.4, 33.0], [0.5, 34.0], [0.6, 34.0], [0.7, 34.0], [0.8, 35.0], [0.9, 36.0], [1.0, 39.0], [1.1, 39.0], [1.2, 39.0], [1.3, 39.0], [1.4, 40.0], [1.5, 40.0], [1.6, 40.0], [1.7, 41.0], [1.8, 41.0], [1.9, 41.0], [2.0, 41.0], [2.1, 41.0], [2.2, 42.0], [2.3, 43.0], [2.4, 43.0], [2.5, 43.0], [2.6, 43.0], [2.7, 44.0], [2.8, 44.0], [2.9, 44.0], [3.0, 44.0], [3.1, 44.0], [3.2, 45.0], [3.3, 45.0], [3.4, 45.0], [3.5, 45.0], [3.6, 45.0], [3.7, 45.0], [3.8, 46.0], [3.9, 46.0], [4.0, 46.0], [4.1, 46.0], [4.2, 47.0], [4.3, 47.0], [4.4, 48.0], [4.5, 48.0], [4.6, 48.0], [4.7, 49.0], [4.8, 49.0], [4.9, 49.0], [5.0, 49.0], [5.1, 49.0], [5.2, 50.0], [5.3, 50.0], [5.4, 51.0], [5.5, 51.0], [5.6, 51.0], [5.7, 51.0], [5.8, 51.0], [5.9, 51.0], [6.0, 53.0], [6.1, 53.0], [6.2, 54.0], [6.3, 54.0], [6.4, 54.0], [6.5, 54.0], [6.6, 54.0], [6.7, 54.0], [6.8, 54.0], [6.9, 55.0], [7.0, 55.0], [7.1, 55.0], [7.2, 55.0], [7.3, 55.0], [7.4, 55.0], [7.5, 56.0], [7.6, 56.0], [7.7, 56.0], [7.8, 56.0], [7.9, 56.0], [8.0, 56.0], [8.1, 56.0], [8.2, 56.0], [8.3, 56.0], [8.4, 57.0], [8.5, 57.0], [8.6, 57.0], [8.7, 58.0], [8.8, 58.0], [8.9, 59.0], [9.0, 60.0], [9.1, 60.0], [9.2, 60.0], [9.3, 62.0], [9.4, 62.0], [9.5, 63.0], [9.6, 63.0], [9.7, 63.0], [9.8, 63.0], [9.9, 63.0], [10.0, 63.0], [10.1, 63.0], [10.2, 64.0], [10.3, 64.0], [10.4, 64.0], [10.5, 64.0], [10.6, 64.0], [10.7, 64.0], [10.8, 64.0], [10.9, 64.0], [11.0, 65.0], [11.1, 65.0], [11.2, 65.0], [11.3, 66.0], [11.4, 67.0], [11.5, 68.0], [11.6, 68.0], [11.7, 68.0], [11.8, 68.0], [11.9, 69.0], [12.0, 71.0], [12.1, 71.0], [12.2, 72.0], [12.3, 73.0], [12.4, 73.0], [12.5, 73.0], [12.6, 73.0], [12.7, 73.0], [12.8, 73.0], [12.9, 74.0], [13.0, 74.0], [13.1, 74.0], [13.2, 75.0], [13.3, 75.0], [13.4, 76.0], [13.5, 78.0], [13.6, 78.0], [13.7, 78.0], [13.8, 78.0], [13.9, 79.0], [14.0, 79.0], [14.1, 79.0], [14.2, 79.0], [14.3, 79.0], [14.4, 79.0], [14.5, 80.0], [14.6, 80.0], [14.7, 80.0], [14.8, 80.0], [14.9, 80.0], [15.0, 80.0], [15.1, 80.0], [15.2, 80.0], [15.3, 80.0], [15.4, 81.0], [15.5, 81.0], [15.6, 81.0], [15.7, 81.0], [15.8, 82.0], [15.9, 83.0], [16.0, 83.0], [16.1, 83.0], [16.2, 84.0], [16.3, 85.0], [16.4, 85.0], [16.5, 85.0], [16.6, 85.0], [16.7, 86.0], [16.8, 86.0], [16.9, 87.0], [17.0, 87.0], [17.1, 87.0], [17.2, 87.0], [17.3, 88.0], [17.4, 88.0], [17.5, 89.0], [17.6, 89.0], [17.7, 89.0], [17.8, 89.0], [17.9, 89.0], [18.0, 89.0], [18.1, 89.0], [18.2, 89.0], [18.3, 89.0], [18.4, 89.0], [18.5, 90.0], [18.6, 90.0], [18.7, 90.0], [18.8, 90.0], [18.9, 91.0], [19.0, 91.0], [19.1, 91.0], [19.2, 92.0], [19.3, 92.0], [19.4, 92.0], [19.5, 94.0], [19.6, 94.0], [19.7, 94.0], [19.8, 95.0], [19.9, 95.0], [20.0, 96.0], [20.1, 96.0], [20.2, 96.0], [20.3, 96.0], [20.4, 96.0], [20.5, 96.0], [20.6, 96.0], [20.7, 96.0], [20.8, 96.0], [20.9, 97.0], [21.0, 97.0], [21.1, 97.0], [21.2, 97.0], [21.3, 97.0], [21.4, 97.0], [21.5, 97.0], [21.6, 97.0], [21.7, 98.0], [21.8, 98.0], [21.9, 98.0], [22.0, 98.0], [22.1, 98.0], [22.2, 98.0], [22.3, 99.0], [22.4, 99.0], [22.5, 100.0], [22.6, 100.0], [22.7, 100.0], [22.8, 100.0], [22.9, 100.0], [23.0, 100.0], [23.1, 100.0], [23.2, 101.0], [23.3, 101.0], [23.4, 101.0], [23.5, 102.0], [23.6, 102.0], [23.7, 103.0], [23.8, 104.0], [23.9, 104.0], [24.0, 104.0], [24.1, 104.0], [24.2, 104.0], [24.3, 105.0], [24.4, 105.0], [24.5, 106.0], [24.6, 106.0], [24.7, 106.0], [24.8, 106.0], [24.9, 106.0], [25.0, 107.0], [25.1, 107.0], [25.2, 107.0], [25.3, 107.0], [25.4, 107.0], [25.5, 107.0], [25.6, 107.0], [25.7, 107.0], [25.8, 107.0], [25.9, 108.0], [26.0, 108.0], [26.1, 108.0], [26.2, 109.0], [26.3, 110.0], [26.4, 110.0], [26.5, 110.0], [26.6, 110.0], [26.7, 111.0], [26.8, 112.0], [26.9, 112.0], [27.0, 112.0], [27.1, 112.0], [27.2, 112.0], [27.3, 113.0], [27.4, 113.0], [27.5, 113.0], [27.6, 113.0], [27.7, 114.0], [27.8, 114.0], [27.9, 114.0], [28.0, 116.0], [28.1, 116.0], [28.2, 116.0], [28.3, 116.0], [28.4, 117.0], [28.5, 117.0], [28.6, 117.0], [28.7, 118.0], [28.8, 118.0], [28.9, 118.0], [29.0, 119.0], [29.1, 119.0], [29.2, 119.0], [29.3, 120.0], [29.4, 120.0], [29.5, 120.0], [29.6, 120.0], [29.7, 121.0], [29.8, 123.0], [29.9, 123.0], [30.0, 124.0], [30.1, 124.0], [30.2, 124.0], [30.3, 125.0], [30.4, 125.0], [30.5, 125.0], [30.6, 125.0], [30.7, 126.0], [30.8, 126.0], [30.9, 127.0], [31.0, 127.0], [31.1, 127.0], [31.2, 127.0], [31.3, 128.0], [31.4, 128.0], [31.5, 129.0], [31.6, 129.0], [31.7, 129.0], [31.8, 129.0], [31.9, 129.0], [32.0, 129.0], [32.1, 129.0], [32.2, 133.0], [32.3, 133.0], [32.4, 133.0], [32.5, 134.0], [32.6, 134.0], [32.7, 134.0], [32.8, 134.0], [32.9, 135.0], [33.0, 135.0], [33.1, 135.0], [33.2, 136.0], [33.3, 136.0], [33.4, 137.0], [33.5, 137.0], [33.6, 137.0], [33.7, 137.0], [33.8, 138.0], [33.9, 138.0], [34.0, 139.0], [34.1, 139.0], [34.2, 139.0], [34.3, 140.0], [34.4, 140.0], [34.5, 140.0], [34.6, 140.0], [34.7, 140.0], [34.8, 141.0], [34.9, 142.0], [35.0, 142.0], [35.1, 142.0], [35.2, 142.0], [35.3, 142.0], [35.4, 142.0], [35.5, 142.0], [35.6, 142.0], [35.7, 143.0], [35.8, 143.0], [35.9, 143.0], [36.0, 143.0], [36.1, 143.0], [36.2, 144.0], [36.3, 145.0], [36.4, 145.0], [36.5, 146.0], [36.6, 146.0], [36.7, 146.0], [36.8, 148.0], [36.9, 148.0], [37.0, 148.0], [37.1, 148.0], [37.2, 148.0], [37.3, 149.0], [37.4, 149.0], [37.5, 149.0], [37.6, 149.0], [37.7, 149.0], [37.8, 150.0], [37.9, 150.0], [38.0, 150.0], [38.1, 150.0], [38.2, 151.0], [38.3, 151.0], [38.4, 151.0], [38.5, 151.0], [38.6, 151.0], [38.7, 151.0], [38.8, 152.0], [38.9, 152.0], [39.0, 152.0], [39.1, 152.0], [39.2, 152.0], [39.3, 152.0], [39.4, 153.0], [39.5, 153.0], [39.6, 153.0], [39.7, 153.0], [39.8, 154.0], [39.9, 155.0], [40.0, 155.0], [40.1, 155.0], [40.2, 156.0], [40.3, 156.0], [40.4, 157.0], [40.5, 157.0], [40.6, 157.0], [40.7, 157.0], [40.8, 157.0], [40.9, 158.0], [41.0, 158.0], [41.1, 158.0], [41.2, 158.0], [41.3, 159.0], [41.4, 159.0], [41.5, 160.0], [41.6, 160.0], [41.7, 160.0], [41.8, 161.0], [41.9, 161.0], [42.0, 162.0], [42.1, 162.0], [42.2, 162.0], [42.3, 162.0], [42.4, 163.0], [42.5, 163.0], [42.6, 163.0], [42.7, 164.0], [42.8, 164.0], [42.9, 164.0], [43.0, 164.0], [43.1, 164.0], [43.2, 165.0], [43.3, 166.0], [43.4, 166.0], [43.5, 166.0], [43.6, 166.0], [43.7, 169.0], [43.8, 169.0], [43.9, 170.0], [44.0, 170.0], [44.1, 170.0], [44.2, 170.0], [44.3, 171.0], [44.4, 171.0], [44.5, 173.0], [44.6, 173.0], [44.7, 174.0], [44.8, 174.0], [44.9, 174.0], [45.0, 175.0], [45.1, 175.0], [45.2, 176.0], [45.3, 176.0], [45.4, 177.0], [45.5, 177.0], [45.6, 177.0], [45.7, 178.0], [45.8, 179.0], [45.9, 179.0], [46.0, 179.0], [46.1, 179.0], [46.2, 179.0], [46.3, 179.0], [46.4, 181.0], [46.5, 181.0], [46.6, 181.0], [46.7, 181.0], [46.8, 182.0], [46.9, 182.0], [47.0, 182.0], [47.1, 182.0], [47.2, 183.0], [47.3, 184.0], [47.4, 184.0], [47.5, 184.0], [47.6, 184.0], [47.7, 184.0], [47.8, 184.0], [47.9, 184.0], [48.0, 185.0], [48.1, 185.0], [48.2, 185.0], [48.3, 185.0], [48.4, 185.0], [48.5, 186.0], [48.6, 186.0], [48.7, 186.0], [48.8, 187.0], [48.9, 187.0], [49.0, 188.0], [49.1, 188.0], [49.2, 188.0], [49.3, 189.0], [49.4, 189.0], [49.5, 190.0], [49.6, 190.0], [49.7, 190.0], [49.8, 190.0], [49.9, 193.0], [50.0, 193.0], [50.1, 193.0], [50.2, 193.0], [50.3, 194.0], [50.4, 194.0], [50.5, 194.0], [50.6, 194.0], [50.7, 195.0], [50.8, 195.0], [50.9, 196.0], [51.0, 197.0], [51.1, 197.0], [51.2, 197.0], [51.3, 197.0], [51.4, 198.0], [51.5, 199.0], [51.6, 199.0], [51.7, 200.0], [51.8, 200.0], [51.9, 201.0], [52.0, 201.0], [52.1, 201.0], [52.2, 202.0], [52.3, 202.0], [52.4, 202.0], [52.5, 203.0], [52.6, 203.0], [52.7, 204.0], [52.8, 205.0], [52.9, 205.0], [53.0, 206.0], [53.1, 206.0], [53.2, 206.0], [53.3, 207.0], [53.4, 208.0], [53.5, 208.0], [53.6, 208.0], [53.7, 208.0], [53.8, 209.0], [53.9, 209.0], [54.0, 211.0], [54.1, 211.0], [54.2, 212.0], [54.3, 213.0], [54.4, 213.0], [54.5, 215.0], [54.6, 215.0], [54.7, 217.0], [54.8, 218.0], [54.9, 218.0], [55.0, 219.0], [55.1, 219.0], [55.2, 219.0], [55.3, 220.0], [55.4, 220.0], [55.5, 220.0], [55.6, 220.0], [55.7, 221.0], [55.8, 224.0], [55.9, 224.0], [56.0, 225.0], [56.1, 225.0], [56.2, 225.0], [56.3, 226.0], [56.4, 226.0], [56.5, 226.0], [56.6, 226.0], [56.7, 226.0], [56.8, 227.0], [56.9, 227.0], [57.0, 228.0], [57.1, 228.0], [57.2, 229.0], [57.3, 229.0], [57.4, 230.0], [57.5, 230.0], [57.6, 230.0], [57.7, 231.0], [57.8, 234.0], [57.9, 234.0], [58.0, 234.0], [58.1, 234.0], [58.2, 234.0], [58.3, 234.0], [58.4, 234.0], [58.5, 235.0], [58.6, 235.0], [58.7, 236.0], [58.8, 236.0], [58.9, 236.0], [59.0, 236.0], [59.1, 236.0], [59.2, 238.0], [59.3, 238.0], [59.4, 238.0], [59.5, 238.0], [59.6, 238.0], [59.7, 238.0], [59.8, 240.0], [59.9, 241.0], [60.0, 242.0], [60.1, 242.0], [60.2, 243.0], [60.3, 243.0], [60.4, 244.0], [60.5, 244.0], [60.6, 244.0], [60.7, 245.0], [60.8, 245.0], [60.9, 245.0], [61.0, 247.0], [61.1, 247.0], [61.2, 248.0], [61.3, 248.0], [61.4, 248.0], [61.5, 248.0], [61.6, 248.0], [61.7, 250.0], [61.8, 251.0], [61.9, 253.0], [62.0, 253.0], [62.1, 253.0], [62.2, 254.0], [62.3, 255.0], [62.4, 255.0], [62.5, 256.0], [62.6, 256.0], [62.7, 256.0], [62.8, 258.0], [62.9, 258.0], [63.0, 259.0], [63.1, 259.0], [63.2, 259.0], [63.3, 261.0], [63.4, 261.0], [63.5, 262.0], [63.6, 262.0], [63.7, 262.0], [63.8, 264.0], [63.9, 267.0], [64.0, 268.0], [64.1, 268.0], [64.2, 269.0], [64.3, 271.0], [64.4, 272.0], [64.5, 272.0], [64.6, 272.0], [64.7, 272.0], [64.8, 272.0], [64.9, 273.0], [65.0, 276.0], [65.1, 276.0], [65.2, 277.0], [65.3, 278.0], [65.4, 280.0], [65.5, 282.0], [65.6, 282.0], [65.7, 283.0], [65.8, 285.0], [65.9, 286.0], [66.0, 287.0], [66.1, 287.0], [66.2, 290.0], [66.3, 290.0], [66.4, 292.0], [66.5, 298.0], [66.6, 298.0], [66.7, 298.0], [66.8, 299.0], [66.9, 301.0], [67.0, 301.0], [67.1, 301.0], [67.2, 301.0], [67.3, 302.0], [67.4, 302.0], [67.5, 302.0], [67.6, 302.0], [67.7, 303.0], [67.8, 304.0], [67.9, 304.0], [68.0, 304.0], [68.1, 304.0], [68.2, 305.0], [68.3, 309.0], [68.4, 309.0], [68.5, 309.0], [68.6, 309.0], [68.7, 309.0], [68.8, 309.0], [68.9, 310.0], [69.0, 310.0], [69.1, 310.0], [69.2, 312.0], [69.3, 312.0], [69.4, 312.0], [69.5, 313.0], [69.6, 313.0], [69.7, 315.0], [69.8, 315.0], [69.9, 316.0], [70.0, 317.0], [70.1, 317.0], [70.2, 317.0], [70.3, 321.0], [70.4, 325.0], [70.5, 326.0], [70.6, 326.0], [70.7, 327.0], [70.8, 329.0], [70.9, 330.0], [71.0, 332.0], [71.1, 332.0], [71.2, 332.0], [71.3, 333.0], [71.4, 333.0], [71.5, 334.0], [71.6, 334.0], [71.7, 336.0], [71.8, 336.0], [71.9, 343.0], [72.0, 344.0], [72.1, 344.0], [72.2, 346.0], [72.3, 347.0], [72.4, 348.0], [72.5, 350.0], [72.6, 350.0], [72.7, 352.0], [72.8, 352.0], [72.9, 353.0], [73.0, 353.0], [73.1, 353.0], [73.2, 354.0], [73.3, 358.0], [73.4, 361.0], [73.5, 365.0], [73.6, 365.0], [73.7, 365.0], [73.8, 369.0], [73.9, 372.0], [74.0, 372.0], [74.1, 372.0], [74.2, 373.0], [74.3, 376.0], [74.4, 378.0], [74.5, 382.0], [74.6, 382.0], [74.7, 383.0], [74.8, 385.0], [74.9, 387.0], [75.0, 387.0], [75.1, 387.0], [75.2, 388.0], [75.3, 392.0], [75.4, 392.0], [75.5, 399.0], [75.6, 399.0], [75.7, 402.0], [75.8, 403.0], [75.9, 405.0], [76.0, 406.0], [76.1, 406.0], [76.2, 407.0], [76.3, 409.0], [76.4, 410.0], [76.5, 413.0], [76.6, 413.0], [76.7, 413.0], [76.8, 415.0], [76.9, 415.0], [77.0, 416.0], [77.1, 416.0], [77.2, 418.0], [77.3, 419.0], [77.4, 419.0], [77.5, 419.0], [77.6, 419.0], [77.7, 423.0], [77.8, 433.0], [77.9, 433.0], [78.0, 434.0], [78.1, 434.0], [78.2, 434.0], [78.3, 435.0], [78.4, 437.0], [78.5, 438.0], [78.6, 438.0], [78.7, 442.0], [78.8, 450.0], [78.9, 452.0], [79.0, 452.0], [79.1, 452.0], [79.2, 453.0], [79.3, 456.0], [79.4, 458.0], [79.5, 458.0], [79.6, 458.0], [79.7, 460.0], [79.8, 461.0], [79.9, 464.0], [80.0, 469.0], [80.1, 469.0], [80.2, 469.0], [80.3, 469.0], [80.4, 475.0], [80.5, 486.0], [80.6, 486.0], [80.7, 486.0], [80.8, 491.0], [80.9, 492.0], [81.0, 493.0], [81.1, 493.0], [81.2, 494.0], [81.3, 496.0], [81.4, 497.0], [81.5, 498.0], [81.6, 498.0], [81.7, 498.0], [81.8, 500.0], [81.9, 504.0], [82.0, 505.0], [82.1, 505.0], [82.2, 507.0], [82.3, 508.0], [82.4, 509.0], [82.5, 515.0], [82.6, 515.0], [82.7, 516.0], [82.8, 517.0], [82.9, 521.0], [83.0, 521.0], [83.1, 521.0], [83.2, 522.0], [83.3, 528.0], [83.4, 528.0], [83.5, 529.0], [83.6, 529.0], [83.7, 538.0], [83.8, 543.0], [83.9, 543.0], [84.0, 545.0], [84.1, 545.0], [84.2, 552.0], [84.3, 554.0], [84.4, 558.0], [84.5, 558.0], [84.6, 558.0], [84.7, 562.0], [84.8, 563.0], [84.9, 565.0], [85.0, 565.0], [85.1, 565.0], [85.2, 566.0], [85.3, 572.0], [85.4, 573.0], [85.5, 575.0], [85.6, 575.0], [85.7, 575.0], [85.8, 580.0], [85.9, 590.0], [86.0, 591.0], [86.1, 591.0], [86.2, 593.0], [86.3, 594.0], [86.4, 595.0], [86.5, 603.0], [86.6, 603.0], [86.7, 606.0], [86.8, 611.0], [86.9, 612.0], [87.0, 615.0], [87.1, 615.0], [87.2, 616.0], [87.3, 619.0], [87.4, 629.0], [87.5, 642.0], [87.6, 642.0], [87.7, 642.0], [87.8, 646.0], [87.9, 650.0], [88.0, 653.0], [88.1, 653.0], [88.2, 656.0], [88.3, 664.0], [88.4, 665.0], [88.5, 671.0], [88.6, 671.0], [88.7, 675.0], [88.8, 676.0], [88.9, 683.0], [89.0, 685.0], [89.1, 685.0], [89.2, 693.0], [89.3, 694.0], [89.4, 704.0], [89.5, 708.0], [89.6, 708.0], [89.7, 718.0], [89.8, 727.0], [89.9, 736.0], [90.0, 736.0], [90.1, 736.0], [90.2, 746.0], [90.3, 747.0], [90.4, 758.0], [90.5, 779.0], [90.6, 779.0], [90.7, 816.0], [90.8, 820.0], [90.9, 833.0], [91.0, 845.0], [91.1, 845.0], [91.2, 858.0], [91.3, 879.0], [91.4, 885.0], [91.5, 897.0], [91.6, 897.0], [91.7, 919.0], [91.8, 927.0], [91.9, 938.0], [92.0, 940.0], [92.1, 940.0], [92.2, 980.0], [92.3, 1010.0], [92.4, 1021.0], [92.5, 1024.0], [92.6, 1024.0], [92.7, 1026.0], [92.8, 1032.0], [92.9, 1040.0], [93.0, 1064.0], [93.1, 1064.0], [93.2, 1090.0], [93.3, 1095.0], [93.4, 1105.0], [93.5, 1108.0], [93.6, 1108.0], [93.7, 1113.0], [93.8, 1170.0], [93.9, 1201.0], [94.0, 1214.0], [94.1, 1214.0], [94.2, 1219.0], [94.3, 1223.0], [94.4, 1229.0], [94.5, 1242.0], [94.6, 1242.0], [94.7, 1243.0], [94.8, 1273.0], [94.9, 1289.0], [95.0, 1293.0], [95.1, 1293.0], [95.2, 1311.0], [95.3, 1332.0], [95.4, 1346.0], [95.5, 1348.0], [95.6, 1348.0], [95.7, 1355.0], [95.8, 1369.0], [95.9, 1436.0], [96.0, 1439.0], [96.1, 1439.0], [96.2, 1440.0], [96.3, 1464.0], [96.4, 1472.0], [96.5, 1527.0], [96.6, 1527.0], [96.7, 1530.0], [96.8, 1532.0], [96.9, 1564.0], [97.0, 1564.0], [97.1, 1564.0], [97.2, 1679.0], [97.3, 1689.0], [97.4, 1716.0], [97.5, 1748.0], [97.6, 1748.0], [97.7, 1879.0], [97.8, 1966.0], [97.9, 1997.0], [98.0, 2023.0], [98.1, 2023.0], [98.2, 2077.0], [98.3, 2093.0], [98.4, 2222.0], [98.5, 2571.0], [98.6, 2571.0], [98.7, 2666.0], [98.8, 2892.0], [98.9, 3055.0], [99.0, 3117.0], [99.1, 3117.0], [99.2, 3142.0], [99.3, 3347.0], [99.4, 3416.0], [99.5, 3887.0], [99.6, 3887.0], [99.7, 3945.0], [99.8, 4049.0], [99.9, 4300.0]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 290.0, "series": [{"data": [[0.0, 55.0], [600.0, 2.0], [400.0, 5.0], [100.0, 25.0], [200.0, 8.0], [800.0, 1.0], [500.0, 2.0], [2000.0, 2.0]], "isOverall": false, "label": "1", "isController": false}, {"data": [[0.0, 111.0], [2100.0, 1.0], [2200.0, 1.0], [300.0, 9.0], [600.0, 1.0], [700.0, 1.0], [200.0, 12.0], [100.0, 56.0], [400.0, 2.0], [800.0, 1.0], [900.0, 2.0], [500.0, 3.0]], "isOverall": false, "label": "2", "isController": false}, {"data": [[0.0, 176.0], [2300.0, 1.0], [600.0, 6.0], [2400.0, 3.0], [2500.0, 1.0], [700.0, 1.0], [200.0, 44.0], [800.0, 6.0], [900.0, 1.0], [1000.0, 2.0], [1100.0, 3.0], [300.0, 25.0], [1200.0, 1.0], [1300.0, 1.0], [100.0, 113.0], [400.0, 12.0], [500.0, 4.0]], "isOverall": false, "label": "4", "isController": false}, {"data": [[0.0, 109.0], [600.0, 80.0], [700.0, 67.0], [800.0, 61.0], [900.0, 37.0], [1000.0, 31.0], [1100.0, 18.0], [1200.0, 18.0], [1300.0, 17.0], [1400.0, 13.0], [1500.0, 7.0], [1600.0, 8.0], [1700.0, 14.0], [1800.0, 10.0], [1900.0, 6.0], [2000.0, 7.0], [2100.0, 7.0], [2300.0, 9.0], [2200.0, 5.0], [2400.0, 7.0], [2500.0, 5.0], [2600.0, 5.0], [2800.0, 5.0], [2700.0, 3.0], [2900.0, 1.0], [3000.0, 4.0], [3100.0, 1.0], [3300.0, 3.0], [3200.0, 2.0], [3400.0, 3.0], [3500.0, 3.0], [3600.0, 3.0], [3700.0, 1.0], [3900.0, 1.0], [4000.0, 3.0], [4100.0, 1.0], [4300.0, 1.0], [4400.0, 2.0], [4500.0, 2.0], [4800.0, 1.0], [5000.0, 2.0], [5100.0, 1.0], [5500.0, 2.0], [5600.0, 1.0], [5800.0, 1.0], [5700.0, 1.0], [6000.0, 1.0], [6900.0, 1.0], [6800.0, 1.0], [6700.0, 1.0], [7100.0, 2.0], [7300.0, 1.0], [7700.0, 1.0], [8000.0, 1.0], [9000.0, 1.0], [10500.0, 1.0], [11500.0, 1.0], [12900.0, 1.0], [20700.0, 1.0], [100.0, 290.0], [200.0, 247.0], [300.0, 211.0], [400.0, 162.0], [500.0, 87.0]], "isOverall": false, "label": "16", "isController": false}, {"data": [[0.0, 180.0], [600.0, 23.0], [700.0, 10.0], [800.0, 8.0], [900.0, 5.0], [1000.0, 9.0], [1100.0, 4.0], [1200.0, 10.0], [1300.0, 6.0], [1400.0, 5.0], [1500.0, 5.0], [100.0, 233.0], [1600.0, 2.0], [1700.0, 2.0], [1800.0, 1.0], [1900.0, 2.0], [2000.0, 3.0], [2200.0, 1.0], [2500.0, 1.0], [2600.0, 1.0], [2800.0, 1.0], [3000.0, 1.0], [3100.0, 2.0], [200.0, 122.0], [3300.0, 1.0], [3400.0, 1.0], [3800.0, 1.0], [3900.0, 1.0], [4000.0, 1.0], [4300.0, 1.0], [300.0, 70.0], [400.0, 49.0], [500.0, 38.0]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 20700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 189.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2328.0, "series": [{"data": [[0.0, 2328.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 583.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 189.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.70758926E12, "maxY": 16.0, "series": [{"data": [[1.70758926E12, 1.0], [1.70758927E12, 1.0], [1.70758928E12, 1.0]], "isOverall": false, "label": "1", "isController": false}, {"data": [[1.70758928E12, 1.929824561403509], [1.70758929E12, 2.0], [1.7075893E12, 1.2820512820512822]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.70758932E12, 2.901639344262296], [1.7075893E12, 3.7766990291262146], [1.70758931E12, 4.0]], "isOverall": false, "label": "4", "isController": false}, {"data": [[1.7075894E12, 16.0], [1.70758941E12, 15.878172588832488], [1.70758942E12, 13.840579710144926], [1.70758943E12, 11.045454545454547], [1.70758936E12, 13.923076923076922], [1.70758937E12, 16.0], [1.70758938E12, 16.0], [1.70758939E12, 16.0], [1.70758944E12, 3.3773584905660377]], "isOverall": false, "label": "16", "isController": false}, {"data": [[1.70758936E12, 6.124999999999997], [1.70758932E12, 6.393939393939393], [1.70758933E12, 8.0], [1.70758934E12, 8.0], [1.70758935E12, 7.697560975609756]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.70758944E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 75.66666666666667, "minX": 1.0, "maxY": 789.6149425287354, "series": [{"data": [[1.0, 182.78999999999994]], "isOverall": false, "label": "1", "isController": false}, {"data": [[1.0, 182.78999999999994]], "isOverall": false, "label": "1-Aggregated", "isController": false}, {"data": [[1.0, 123.37499999999997], [2.0, 165.97023809523813]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.84, 159.15499999999997]], "isOverall": false, "label": "2-Aggregated", "isController": false}, {"data": [[1.0, 75.66666666666667], [2.0, 178.18333333333342], [4.0, 221.6698412698411], [3.0, 200.26315789473685]], "isOverall": false, "label": "4", "isController": false}, {"data": [[3.6075000000000017, 211.94000000000014]], "isOverall": false, "label": "4-Aggregated", "isController": false}, {"data": [[2.0, 474.5], [8.0, 428.625], [9.0, 137.33333333333334], [10.0, 604.875], [11.0, 274.1632653061224], [3.0, 296.68000000000006], [12.0, 713.3725490196077], [13.0, 706.2372881355931], [14.0, 789.6149425287354], [15.0, 712.1071428571428], [4.0, 537.7142857142858], [16.0, 731.7873134328348], [1.0, 367.1], [5.0, 138.33333333333334], [6.0, 141.6], [7.0, 178.23076923076925]], "isOverall": false, "label": "16", "isController": false}, {"data": [[14.505000000000004, 692.566250000001]], "isOverall": false, "label": "16-Aggregated", "isController": false}, {"data": [[2.0, 148.625], [4.0, 446.44444444444446], [8.0, 376.08732876712315], [1.0, 131.5], [5.0, 218.4], [3.0, 98.75], [6.0, 204.68181818181813], [7.0, 329.05732484076407]], "isOverall": false, "label": "8", "isController": false}, {"data": [[7.537499999999998, 358.46875000000034]], "isOverall": false, "label": "8-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 16.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 205.3, "minX": 1.70758926E12, "maxY": 1.26690189E7, "series": [{"data": [[1.7075894E12, 1.02386252E7], [1.70758942E12, 1.22914262E7], [1.70758927E12, 3403035.6], [1.70758936E12, 1.00141618E7], [1.70758938E12, 1.25348214E7], [1.70758932E12, 7843244.4], [1.70758934E12, 1.11654907E7], [1.70758928E12, 4458528.5], [1.7075893E12, 6588031.6], [1.70758941E12, 1.01727834E7], [1.70758926E12, 522009.7], [1.70758943E12, 1.26189912E7], [1.70758937E12, 9675856.3], [1.70758939E12, 1.26690189E7], [1.70758933E12, 1.13669683E7], [1.70758935E12, 1.16505118E7], [1.70758944E12, 4846172.0], [1.70758929E12, 6644048.8], [1.70758931E12, 9461258.5]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.7075894E12, 5232.5], [1.70758942E12, 4709.5], [1.70758927E12, 1478.1], [1.70758936E12, 4868.7], [1.70758938E12, 4778.2], [1.70758932E12, 3525.6], [1.70758934E12, 4937.4], [1.70758928E12, 1888.6], [1.7075893E12, 3229.9], [1.70758941E12, 4482.7], [1.70758926E12, 205.3], [1.70758943E12, 5005.2], [1.70758937E12, 4664.2], [1.70758939E12, 4550.3], [1.70758933E12, 4755.4], [1.70758935E12, 4664.0], [1.70758944E12, 1206.4], [1.70758929E12, 2366.8], [1.70758931E12, 3982.5]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.70758944E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 122.28070175438599, "minX": 1.70758926E12, "maxY": 940.9649999999998, "series": [{"data": [[1.70758926E12, 231.11111111111111], [1.70758927E12, 153.79999999999998], [1.70758928E12, 238.53846153846163]], "isOverall": false, "label": "1", "isController": false}, {"data": [[1.70758928E12, 122.28070175438599], [1.70758929E12, 192.81730769230774], [1.7075893E12, 123.28205128205131]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.70758932E12, 203.3196721311475], [1.7075893E12, 199.8543689320389], [1.70758931E12, 225.062857142857]], "isOverall": false, "label": "4", "isController": false}, {"data": [[1.7075894E12, 631.6913043478263], [1.70758941E12, 711.1878172588832], [1.70758942E12, 779.1159420289854], [1.70758943E12, 563.5499999999998], [1.70758936E12, 370.47435897435884], [1.70758937E12, 660.0487804878046], [1.70758938E12, 797.0190476190475], [1.70758939E12, 940.9649999999998], [1.70758944E12, 333.60377358490575]], "isOverall": false, "label": "16", "isController": false}, {"data": [[1.70758936E12, 318.1029411764706], [1.70758932E12, 157.57575757575756], [1.70758933E12, 391.69377990430644], [1.70758934E12, 361.9400921658986], [1.70758935E12, 380.03902439024375]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.70758944E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 56.64912280701754, "minX": 1.70758926E12, "maxY": 222.16000000000008, "series": [{"data": [[1.70758926E12, 145.44444444444446], [1.70758927E12, 76.9230769230769], [1.70758928E12, 122.65384615384616]], "isOverall": false, "label": "1", "isController": false}, {"data": [[1.70758928E12, 56.64912280701754], [1.70758929E12, 92.25961538461536], [1.7075893E12, 60.717948717948715]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.70758932E12, 87.91803278688525], [1.7075893E12, 80.89320388349512], [1.70758931E12, 92.41142857142857]], "isOverall": false, "label": "4", "isController": false}, {"data": [[1.7075894E12, 159.55652173913037], [1.70758941E12, 168.54822335025366], [1.70758942E12, 176.04830917874398], [1.70758943E12, 164.82727272727266], [1.70758936E12, 126.51282051282051], [1.70758937E12, 160.44390243902444], [1.70758938E12, 174.3428571428572], [1.70758939E12, 222.16000000000008], [1.70758944E12, 132.33962264150938]], "isOverall": false, "label": "16", "isController": false}, {"data": [[1.70758936E12, 110.32352941176471], [1.70758932E12, 61.75757575757575], [1.70758933E12, 126.45454545454552], [1.70758934E12, 118.5391705069124], [1.70758935E12, 126.03414634146337]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.70758944E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 16.64102564102564, "minX": 1.70758926E12, "maxY": 67.04499999999999, "series": [{"data": [[1.70758926E12, 19.22222222222222], [1.70758927E12, 17.73846153846154], [1.70758928E12, 16.692307692307697]], "isOverall": false, "label": "1", "isController": false}, {"data": [[1.70758928E12, 18.000000000000007], [1.70758929E12, 17.942307692307697], [1.7075893E12, 16.64102564102564]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.70758932E12, 18.99999999999999], [1.7075893E12, 19.10679611650486], [1.70758931E12, 19.59999999999999]], "isOverall": false, "label": "4", "isController": false}, {"data": [[1.7075894E12, 30.821739130434768], [1.70758941E12, 28.817258883248726], [1.70758942E12, 27.956521739130434], [1.70758943E12, 47.62727272727275], [1.70758936E12, 31.756410256410255], [1.70758937E12, 28.721951219512206], [1.70758938E12, 27.876190476190494], [1.70758939E12, 67.04499999999999], [1.70758944E12, 19.358490566037734]], "isOverall": false, "label": "16", "isController": false}, {"data": [[1.70758936E12, 21.088235294117638], [1.70758932E12, 23.303030303030308], [1.70758933E12, 23.392344497607642], [1.70758934E12, 24.0967741935484], [1.70758935E12, 24.951219512195127]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.70758944E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 29.0, "minX": 1.70758926E12, "maxY": 20771.0, "series": [{"data": [[1.7075894E12, 7738.0], [1.70758942E12, 12906.0], [1.70758927E12, 2057.0], [1.70758936E12, 3887.0], [1.70758938E12, 11572.0], [1.70758932E12, 2451.0], [1.70758934E12, 3945.0], [1.70758928E12, 2044.0], [1.7075893E12, 2589.0], [1.70758941E12, 10571.0], [1.70758926E12, 682.0], [1.70758943E12, 6057.0], [1.70758937E12, 5022.0], [1.70758939E12, 20771.0], [1.70758933E12, 4049.0], [1.70758935E12, 4300.0], [1.70758944E12, 3395.0], [1.70758929E12, 2289.0], [1.70758931E12, 2417.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.7075894E12, 85.0], [1.70758942E12, 76.0], [1.70758927E12, 36.0], [1.70758936E12, 33.0], [1.70758938E12, 71.0], [1.70758932E12, 34.0], [1.70758934E12, 29.0], [1.70758928E12, 30.0], [1.7075893E12, 30.0], [1.70758941E12, 73.0], [1.70758926E12, 54.0], [1.70758943E12, 35.0], [1.70758937E12, 87.0], [1.70758939E12, 44.0], [1.70758933E12, 31.0], [1.70758935E12, 41.0], [1.70758944E12, 41.0], [1.70758929E12, 34.0], [1.70758931E12, 33.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.7075894E12, 1263.6000000000006], [1.70758942E12, 1458.4000000000012], [1.70758927E12, 246.59999999999997], [1.70758936E12, 794.0], [1.70758938E12, 1846.800000000001], [1.70758932E12, 342.80000000000007], [1.70758934E12, 766.6000000000017], [1.70758928E12, 292.6], [1.7075893E12, 351.9000000000003], [1.70758941E12, 1341.2000000000023], [1.70758926E12, 682.0], [1.70758943E12, 1354.9], [1.70758937E12, 1673.6000000000004], [1.70758939E12, 2328.2000000000007], [1.70758933E12, 919.0], [1.70758935E12, 759.2000000000002], [1.70758944E12, 670.0], [1.70758929E12, 419.5], [1.70758931E12, 468.4]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.7075894E12, 4246.979999999998], [1.70758942E12, 8873.11999999998], [1.70758927E12, 2057.0], [1.70758936E12, 2769.7499999999955], [1.70758938E12, 7810.68999999997], [1.70758932E12, 2433.08], [1.70758934E12, 3018.719999999996], [1.70758928E12, 2044.0], [1.7075893E12, 2060.5299999999916], [1.70758941E12, 6880.320000000039], [1.70758926E12, 682.0], [1.70758943E12, 4463.249999999998], [1.70758937E12, 4046.079999999999], [1.70758939E12, 7189.390000000002], [1.70758933E12, 3409.1000000000004], [1.70758935E12, 3136.7799999999997], [1.70758944E12, 3395.0], [1.70758929E12, 2283.2000000000003], [1.70758931E12, 2370.6400000000003]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.7075894E12, 413.0], [1.70758942E12, 402.0], [1.70758927E12, 86.0], [1.70758936E12, 182.5], [1.70758938E12, 382.5], [1.70758932E12, 103.0], [1.70758934E12, 193.0], [1.70758928E12, 93.0], [1.7075893E12, 100.5], [1.70758941E12, 407.0], [1.70758926E12, 94.0], [1.70758943E12, 274.0], [1.70758937E12, 385.0], [1.70758939E12, 418.0], [1.70758933E12, 217.0], [1.70758935E12, 220.0], [1.70758944E12, 165.0], [1.70758929E12, 94.5], [1.70758931E12, 116.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.7075894E12, 2049.499999999999], [1.70758942E12, 2389.599999999999], [1.70758927E12, 474.69999999999965], [1.70758936E12, 1184.75], [1.70758938E12, 3065.35], [1.70758932E12, 647.4], [1.70758934E12, 1314.6999999999998], [1.70758928E12, 510.19999999999993], [1.7075893E12, 467.6999999999999], [1.70758941E12, 2332.7], [1.70758926E12, 682.0], [1.70758943E12, 2062.199999999998], [1.70758937E12, 2488.9999999999995], [1.70758939E12, 3391.45], [1.70758933E12, 1450.0], [1.70758935E12, 1406.8999999999987], [1.70758944E12, 1947.2999999999993], [1.70758929E12, 628.25], [1.70758931E12, 883.3999999999999]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.70758944E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 74.0, "minX": 1.0, "maxY": 2057.0, "series": [{"data": [[2.0, 546.0], [33.0, 184.0], [32.0, 211.0], [36.0, 133.5], [37.0, 252.0], [3.0, 402.0], [4.0, 425.0], [5.0, 74.0], [6.0, 109.0], [7.0, 340.0], [8.0, 215.5], [9.0, 103.0], [10.0, 99.0], [11.0, 110.0], [12.0, 216.0], [13.0, 259.0], [14.0, 227.5], [15.0, 394.5], [1.0, 2057.0], [16.0, 161.0], [17.0, 161.5], [18.0, 195.5], [19.0, 173.0], [20.0, 272.5], [21.0, 300.0], [22.0, 332.0], [23.0, 272.0], [24.0, 346.0], [25.0, 391.0], [26.0, 305.5], [27.0, 144.0], [28.0, 321.0], [29.0, 158.0], [30.0, 264.0], [31.0, 290.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 37.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 44.5, "minX": 1.0, "maxY": 1157.0, "series": [{"data": [[2.0, 251.5], [33.0, 54.0], [32.0, 82.0], [36.0, 48.0], [37.0, 103.0], [3.0, 125.0], [4.0, 160.5], [5.0, 51.0], [6.0, 49.5], [7.0, 121.0], [8.0, 56.5], [9.0, 47.0], [10.0, 44.5], [11.0, 46.0], [12.0, 86.0], [13.0, 74.0], [14.0, 77.0], [15.0, 121.0], [1.0, 1157.0], [16.0, 56.0], [17.0, 65.0], [18.0, 84.5], [19.0, 63.0], [20.0, 104.0], [21.0, 103.5], [22.0, 115.0], [23.0, 101.0], [24.0, 108.0], [25.0, 114.0], [26.0, 110.5], [27.0, 60.0], [28.0, 125.5], [29.0, 65.0], [30.0, 103.5], [31.0, 100.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 37.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.70758926E12, "maxY": 23.0, "series": [{"data": [[1.7075894E12, 23.0], [1.70758942E12, 20.5], [1.70758927E12, 6.5], [1.70758936E12, 22.3], [1.70758938E12, 21.0], [1.70758932E12, 15.9], [1.70758934E12, 21.7], [1.70758928E12, 8.4], [1.7075893E12, 14.4], [1.70758941E12, 19.6], [1.70758926E12, 1.0], [1.70758943E12, 21.3], [1.70758937E12, 20.5], [1.70758939E12, 20.0], [1.70758933E12, 20.9], [1.70758935E12, 20.4], [1.70758944E12, 4.7], [1.70758929E12, 10.4], [1.70758931E12, 17.5]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.70758944E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.9, "minX": 1.70758926E12, "maxY": 23.0, "series": [{"data": [[1.7075894E12, 23.0], [1.70758942E12, 20.7], [1.70758927E12, 6.5], [1.70758936E12, 21.4], [1.70758938E12, 21.0], [1.70758932E12, 15.5], [1.70758934E12, 21.7], [1.70758928E12, 8.3], [1.7075893E12, 14.2], [1.70758941E12, 19.7], [1.70758926E12, 0.9], [1.70758943E12, 22.0], [1.70758937E12, 20.5], [1.70758939E12, 20.0], [1.70758933E12, 20.9], [1.70758935E12, 20.5], [1.70758944E12, 5.3], [1.70758929E12, 10.4], [1.70758931E12, 17.5]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.70758944E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.9, "minX": 1.70758926E12, "maxY": 23.0, "series": [{"data": [[1.7075894E12, 23.0], [1.70758941E12, 19.7], [1.70758942E12, 20.7], [1.70758943E12, 22.0], [1.70758936E12, 7.8], [1.70758937E12, 20.5], [1.70758938E12, 21.0], [1.70758939E12, 20.0], [1.70758944E12, 5.3]], "isOverall": false, "label": "16-success", "isController": false}, {"data": [[1.70758926E12, 0.9], [1.70758927E12, 6.5], [1.70758928E12, 2.6]], "isOverall": false, "label": "1-success", "isController": false}, {"data": [[1.70758932E12, 12.2], [1.7075893E12, 10.3], [1.70758931E12, 17.5]], "isOverall": false, "label": "4-success", "isController": false}, {"data": [[1.70758936E12, 13.6], [1.70758932E12, 3.3], [1.70758933E12, 20.9], [1.70758934E12, 21.7], [1.70758935E12, 20.5]], "isOverall": false, "label": "8-success", "isController": false}, {"data": [[1.70758928E12, 5.7], [1.70758929E12, 10.4], [1.7075893E12, 3.9]], "isOverall": false, "label": "2-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.70758944E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.9, "minX": 1.70758926E12, "maxY": 23.0, "series": [{"data": [[1.7075894E12, 23.0], [1.70758942E12, 20.7], [1.70758927E12, 6.5], [1.70758936E12, 21.4], [1.70758938E12, 21.0], [1.70758932E12, 15.5], [1.70758934E12, 21.7], [1.70758928E12, 8.3], [1.7075893E12, 14.2], [1.70758941E12, 19.7], [1.70758926E12, 0.9], [1.70758943E12, 22.0], [1.70758937E12, 20.5], [1.70758939E12, 20.0], [1.70758933E12, 20.9], [1.70758935E12, 20.5], [1.70758944E12, 5.3], [1.70758929E12, 10.4], [1.70758931E12, 17.5]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.70758944E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

