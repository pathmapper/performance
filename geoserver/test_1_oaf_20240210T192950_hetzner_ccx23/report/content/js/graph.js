/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 28.0, "minX": 0.0, "maxY": 21729.0, "series": [{"data": [[0.0, 28.0], [0.1, 28.0], [0.2, 28.0], [0.3, 28.0], [0.4, 28.0], [0.5, 28.0], [0.6, 28.0], [0.7, 28.0], [0.8, 28.0], [0.9, 28.0], [1.0, 33.0], [1.1, 33.0], [1.2, 33.0], [1.3, 33.0], [1.4, 33.0], [1.5, 33.0], [1.6, 33.0], [1.7, 33.0], [1.8, 33.0], [1.9, 33.0], [2.0, 35.0], [2.1, 35.0], [2.2, 35.0], [2.3, 35.0], [2.4, 35.0], [2.5, 35.0], [2.6, 35.0], [2.7, 35.0], [2.8, 35.0], [2.9, 35.0], [3.0, 35.0], [3.1, 35.0], [3.2, 35.0], [3.3, 35.0], [3.4, 35.0], [3.5, 35.0], [3.6, 35.0], [3.7, 35.0], [3.8, 35.0], [3.9, 35.0], [4.0, 35.0], [4.1, 35.0], [4.2, 35.0], [4.3, 35.0], [4.4, 35.0], [4.5, 35.0], [4.6, 35.0], [4.7, 35.0], [4.8, 35.0], [4.9, 35.0], [5.0, 36.0], [5.1, 36.0], [5.2, 36.0], [5.3, 36.0], [5.4, 36.0], [5.5, 36.0], [5.6, 36.0], [5.7, 36.0], [5.8, 36.0], [5.9, 36.0], [6.0, 36.0], [6.1, 36.0], [6.2, 36.0], [6.3, 36.0], [6.4, 36.0], [6.5, 36.0], [6.6, 36.0], [6.7, 36.0], [6.8, 36.0], [6.9, 36.0], [7.0, 37.0], [7.1, 37.0], [7.2, 37.0], [7.3, 37.0], [7.4, 37.0], [7.5, 37.0], [7.6, 37.0], [7.7, 37.0], [7.8, 37.0], [7.9, 37.0], [8.0, 38.0], [8.1, 38.0], [8.2, 38.0], [8.3, 38.0], [8.4, 38.0], [8.5, 38.0], [8.6, 38.0], [8.7, 38.0], [8.8, 38.0], [8.9, 38.0], [9.0, 39.0], [9.1, 39.0], [9.2, 39.0], [9.3, 39.0], [9.4, 39.0], [9.5, 39.0], [9.6, 39.0], [9.7, 39.0], [9.8, 39.0], [9.9, 39.0], [10.0, 39.0], [10.1, 39.0], [10.2, 39.0], [10.3, 39.0], [10.4, 39.0], [10.5, 39.0], [10.6, 39.0], [10.7, 39.0], [10.8, 39.0], [10.9, 39.0], [11.0, 42.0], [11.1, 42.0], [11.2, 42.0], [11.3, 42.0], [11.4, 42.0], [11.5, 42.0], [11.6, 42.0], [11.7, 42.0], [11.8, 42.0], [11.9, 42.0], [12.0, 42.0], [12.1, 42.0], [12.2, 42.0], [12.3, 42.0], [12.4, 42.0], [12.5, 42.0], [12.6, 42.0], [12.7, 42.0], [12.8, 42.0], [12.9, 42.0], [13.0, 43.0], [13.1, 43.0], [13.2, 43.0], [13.3, 43.0], [13.4, 43.0], [13.5, 43.0], [13.6, 43.0], [13.7, 43.0], [13.8, 43.0], [13.9, 43.0], [14.0, 44.0], [14.1, 44.0], [14.2, 44.0], [14.3, 44.0], [14.4, 44.0], [14.5, 44.0], [14.6, 44.0], [14.7, 44.0], [14.8, 44.0], [14.9, 44.0], [15.0, 44.0], [15.1, 44.0], [15.2, 44.0], [15.3, 44.0], [15.4, 44.0], [15.5, 44.0], [15.6, 44.0], [15.7, 44.0], [15.8, 44.0], [15.9, 44.0], [16.0, 48.0], [16.1, 48.0], [16.2, 48.0], [16.3, 48.0], [16.4, 48.0], [16.5, 48.0], [16.6, 48.0], [16.7, 48.0], [16.8, 48.0], [16.9, 48.0], [17.0, 48.0], [17.1, 48.0], [17.2, 48.0], [17.3, 48.0], [17.4, 48.0], [17.5, 48.0], [17.6, 48.0], [17.7, 48.0], [17.8, 48.0], [17.9, 48.0], [18.0, 54.0], [18.1, 54.0], [18.2, 54.0], [18.3, 54.0], [18.4, 54.0], [18.5, 54.0], [18.6, 54.0], [18.7, 54.0], [18.8, 54.0], [18.9, 54.0], [19.0, 56.0], [19.1, 56.0], [19.2, 56.0], [19.3, 56.0], [19.4, 56.0], [19.5, 56.0], [19.6, 56.0], [19.7, 56.0], [19.8, 56.0], [19.9, 56.0], [20.0, 58.0], [20.1, 58.0], [20.2, 58.0], [20.3, 58.0], [20.4, 58.0], [20.5, 58.0], [20.6, 58.0], [20.7, 58.0], [20.8, 58.0], [20.9, 58.0], [21.0, 62.0], [21.1, 62.0], [21.2, 62.0], [21.3, 62.0], [21.4, 62.0], [21.5, 62.0], [21.6, 62.0], [21.7, 62.0], [21.8, 62.0], [21.9, 62.0], [22.0, 62.0], [22.1, 62.0], [22.2, 62.0], [22.3, 62.0], [22.4, 62.0], [22.5, 62.0], [22.6, 62.0], [22.7, 62.0], [22.8, 62.0], [22.9, 62.0], [23.0, 62.0], [23.1, 62.0], [23.2, 62.0], [23.3, 62.0], [23.4, 62.0], [23.5, 62.0], [23.6, 62.0], [23.7, 62.0], [23.8, 62.0], [23.9, 62.0], [24.0, 63.0], [24.1, 63.0], [24.2, 63.0], [24.3, 63.0], [24.4, 63.0], [24.5, 63.0], [24.6, 63.0], [24.7, 63.0], [24.8, 63.0], [24.9, 63.0], [25.0, 64.0], [25.1, 64.0], [25.2, 64.0], [25.3, 64.0], [25.4, 64.0], [25.5, 64.0], [25.6, 64.0], [25.7, 64.0], [25.8, 64.0], [25.9, 64.0], [26.0, 66.0], [26.1, 66.0], [26.2, 66.0], [26.3, 66.0], [26.4, 66.0], [26.5, 66.0], [26.6, 66.0], [26.7, 66.0], [26.8, 66.0], [26.9, 66.0], [27.0, 66.0], [27.1, 66.0], [27.2, 66.0], [27.3, 66.0], [27.4, 66.0], [27.5, 66.0], [27.6, 66.0], [27.7, 66.0], [27.8, 66.0], [27.9, 66.0], [28.0, 66.0], [28.1, 66.0], [28.2, 66.0], [28.3, 66.0], [28.4, 66.0], [28.5, 66.0], [28.6, 66.0], [28.7, 66.0], [28.8, 66.0], [28.9, 66.0], [29.0, 67.0], [29.1, 67.0], [29.2, 67.0], [29.3, 67.0], [29.4, 67.0], [29.5, 67.0], [29.6, 67.0], [29.7, 67.0], [29.8, 67.0], [29.9, 67.0], [30.0, 67.0], [30.1, 67.0], [30.2, 67.0], [30.3, 67.0], [30.4, 67.0], [30.5, 67.0], [30.6, 67.0], [30.7, 67.0], [30.8, 67.0], [30.9, 67.0], [31.0, 67.0], [31.1, 67.0], [31.2, 67.0], [31.3, 67.0], [31.4, 67.0], [31.5, 67.0], [31.6, 67.0], [31.7, 67.0], [31.8, 67.0], [31.9, 67.0], [32.0, 67.0], [32.1, 67.0], [32.2, 67.0], [32.3, 67.0], [32.4, 67.0], [32.5, 67.0], [32.6, 67.0], [32.7, 67.0], [32.8, 67.0], [32.9, 67.0], [33.0, 69.0], [33.1, 69.0], [33.2, 69.0], [33.3, 69.0], [33.4, 69.0], [33.5, 69.0], [33.6, 69.0], [33.7, 69.0], [33.8, 69.0], [33.9, 69.0], [34.0, 70.0], [34.1, 70.0], [34.2, 70.0], [34.3, 70.0], [34.4, 70.0], [34.5, 70.0], [34.6, 70.0], [34.7, 70.0], [34.8, 70.0], [34.9, 70.0], [35.0, 70.0], [35.1, 70.0], [35.2, 70.0], [35.3, 70.0], [35.4, 70.0], [35.5, 70.0], [35.6, 70.0], [35.7, 70.0], [35.8, 70.0], [35.9, 70.0], [36.0, 77.0], [36.1, 77.0], [36.2, 77.0], [36.3, 77.0], [36.4, 77.0], [36.5, 77.0], [36.6, 77.0], [36.7, 77.0], [36.8, 77.0], [36.9, 77.0], [37.0, 79.0], [37.1, 79.0], [37.2, 79.0], [37.3, 79.0], [37.4, 79.0], [37.5, 79.0], [37.6, 79.0], [37.7, 79.0], [37.8, 79.0], [37.9, 79.0], [38.0, 79.0], [38.1, 79.0], [38.2, 79.0], [38.3, 79.0], [38.4, 79.0], [38.5, 79.0], [38.6, 79.0], [38.7, 79.0], [38.8, 79.0], [38.9, 79.0], [39.0, 79.0], [39.1, 79.0], [39.2, 79.0], [39.3, 79.0], [39.4, 79.0], [39.5, 79.0], [39.6, 79.0], [39.7, 79.0], [39.8, 79.0], [39.9, 79.0], [40.0, 79.0], [40.1, 79.0], [40.2, 79.0], [40.3, 79.0], [40.4, 79.0], [40.5, 79.0], [40.6, 79.0], [40.7, 79.0], [40.8, 79.0], [40.9, 79.0], [41.0, 80.0], [41.1, 80.0], [41.2, 80.0], [41.3, 80.0], [41.4, 80.0], [41.5, 80.0], [41.6, 80.0], [41.7, 80.0], [41.8, 80.0], [41.9, 80.0], [42.0, 81.0], [42.1, 81.0], [42.2, 81.0], [42.3, 81.0], [42.4, 81.0], [42.5, 81.0], [42.6, 81.0], [42.7, 81.0], [42.8, 81.0], [42.9, 81.0], [43.0, 82.0], [43.1, 82.0], [43.2, 82.0], [43.3, 82.0], [43.4, 82.0], [43.5, 82.0], [43.6, 82.0], [43.7, 82.0], [43.8, 82.0], [43.9, 82.0], [44.0, 82.0], [44.1, 82.0], [44.2, 82.0], [44.3, 82.0], [44.4, 82.0], [44.5, 82.0], [44.6, 82.0], [44.7, 82.0], [44.8, 82.0], [44.9, 82.0], [45.0, 85.0], [45.1, 85.0], [45.2, 85.0], [45.3, 85.0], [45.4, 85.0], [45.5, 85.0], [45.6, 85.0], [45.7, 85.0], [45.8, 85.0], [45.9, 85.0], [46.0, 85.0], [46.1, 85.0], [46.2, 85.0], [46.3, 85.0], [46.4, 85.0], [46.5, 85.0], [46.6, 85.0], [46.7, 85.0], [46.8, 85.0], [46.9, 85.0], [47.0, 86.0], [47.1, 86.0], [47.2, 86.0], [47.3, 86.0], [47.4, 86.0], [47.5, 86.0], [47.6, 86.0], [47.7, 86.0], [47.8, 86.0], [47.9, 86.0], [48.0, 86.0], [48.1, 86.0], [48.2, 86.0], [48.3, 86.0], [48.4, 86.0], [48.5, 86.0], [48.6, 86.0], [48.7, 86.0], [48.8, 86.0], [48.9, 86.0], [49.0, 86.0], [49.1, 86.0], [49.2, 86.0], [49.3, 86.0], [49.4, 86.0], [49.5, 86.0], [49.6, 86.0], [49.7, 86.0], [49.8, 86.0], [49.9, 86.0], [50.0, 87.0], [50.1, 87.0], [50.2, 87.0], [50.3, 87.0], [50.4, 87.0], [50.5, 87.0], [50.6, 87.0], [50.7, 87.0], [50.8, 87.0], [50.9, 87.0], [51.0, 90.0], [51.1, 90.0], [51.2, 90.0], [51.3, 90.0], [51.4, 90.0], [51.5, 90.0], [51.6, 90.0], [51.7, 90.0], [51.8, 90.0], [51.9, 90.0], [52.0, 91.0], [52.1, 91.0], [52.2, 91.0], [52.3, 91.0], [52.4, 91.0], [52.5, 91.0], [52.6, 91.0], [52.7, 91.0], [52.8, 91.0], [52.9, 91.0], [53.0, 97.0], [53.1, 97.0], [53.2, 97.0], [53.3, 97.0], [53.4, 97.0], [53.5, 97.0], [53.6, 97.0], [53.7, 97.0], [53.8, 97.0], [53.9, 97.0], [54.0, 98.0], [54.1, 98.0], [54.2, 98.0], [54.3, 98.0], [54.4, 98.0], [54.5, 98.0], [54.6, 98.0], [54.7, 98.0], [54.8, 98.0], [54.9, 98.0], [55.0, 99.0], [55.1, 99.0], [55.2, 99.0], [55.3, 99.0], [55.4, 99.0], [55.5, 99.0], [55.6, 99.0], [55.7, 99.0], [55.8, 99.0], [55.9, 99.0], [56.0, 99.0], [56.1, 99.0], [56.2, 99.0], [56.3, 99.0], [56.4, 99.0], [56.5, 99.0], [56.6, 99.0], [56.7, 99.0], [56.8, 99.0], [56.9, 99.0], [57.0, 100.0], [57.1, 100.0], [57.2, 100.0], [57.3, 100.0], [57.4, 100.0], [57.5, 100.0], [57.6, 100.0], [57.7, 100.0], [57.8, 100.0], [57.9, 100.0], [58.0, 101.0], [58.1, 101.0], [58.2, 101.0], [58.3, 101.0], [58.4, 101.0], [58.5, 101.0], [58.6, 101.0], [58.7, 101.0], [58.8, 101.0], [58.9, 101.0], [59.0, 103.0], [59.1, 103.0], [59.2, 103.0], [59.3, 103.0], [59.4, 103.0], [59.5, 103.0], [59.6, 103.0], [59.7, 103.0], [59.8, 103.0], [59.9, 103.0], [60.0, 104.0], [60.1, 104.0], [60.2, 104.0], [60.3, 104.0], [60.4, 104.0], [60.5, 104.0], [60.6, 104.0], [60.7, 104.0], [60.8, 104.0], [60.9, 104.0], [61.0, 107.0], [61.1, 107.0], [61.2, 107.0], [61.3, 107.0], [61.4, 107.0], [61.5, 107.0], [61.6, 107.0], [61.7, 107.0], [61.8, 107.0], [61.9, 107.0], [62.0, 108.0], [62.1, 108.0], [62.2, 108.0], [62.3, 108.0], [62.4, 108.0], [62.5, 108.0], [62.6, 108.0], [62.7, 108.0], [62.8, 108.0], [62.9, 108.0], [63.0, 109.0], [63.1, 109.0], [63.2, 109.0], [63.3, 109.0], [63.4, 109.0], [63.5, 109.0], [63.6, 109.0], [63.7, 109.0], [63.8, 109.0], [63.9, 109.0], [64.0, 111.0], [64.1, 111.0], [64.2, 111.0], [64.3, 111.0], [64.4, 111.0], [64.5, 111.0], [64.6, 111.0], [64.7, 111.0], [64.8, 111.0], [64.9, 111.0], [65.0, 118.0], [65.1, 118.0], [65.2, 118.0], [65.3, 118.0], [65.4, 118.0], [65.5, 118.0], [65.6, 118.0], [65.7, 118.0], [65.8, 118.0], [65.9, 118.0], [66.0, 120.0], [66.1, 120.0], [66.2, 120.0], [66.3, 120.0], [66.4, 120.0], [66.5, 120.0], [66.6, 120.0], [66.7, 120.0], [66.8, 120.0], [66.9, 120.0], [67.0, 120.0], [67.1, 120.0], [67.2, 120.0], [67.3, 120.0], [67.4, 120.0], [67.5, 120.0], [67.6, 120.0], [67.7, 120.0], [67.8, 120.0], [67.9, 120.0], [68.0, 122.0], [68.1, 122.0], [68.2, 122.0], [68.3, 122.0], [68.4, 122.0], [68.5, 122.0], [68.6, 122.0], [68.7, 122.0], [68.8, 122.0], [68.9, 122.0], [69.0, 124.0], [69.1, 124.0], [69.2, 124.0], [69.3, 124.0], [69.4, 124.0], [69.5, 124.0], [69.6, 124.0], [69.7, 124.0], [69.8, 124.0], [69.9, 124.0], [70.0, 132.0], [70.1, 132.0], [70.2, 132.0], [70.3, 132.0], [70.4, 132.0], [70.5, 132.0], [70.6, 132.0], [70.7, 132.0], [70.8, 132.0], [70.9, 132.0], [71.0, 133.0], [71.1, 133.0], [71.2, 133.0], [71.3, 133.0], [71.4, 133.0], [71.5, 133.0], [71.6, 133.0], [71.7, 133.0], [71.8, 133.0], [71.9, 133.0], [72.0, 139.0], [72.1, 139.0], [72.2, 139.0], [72.3, 139.0], [72.4, 139.0], [72.5, 139.0], [72.6, 139.0], [72.7, 139.0], [72.8, 139.0], [72.9, 139.0], [73.0, 140.0], [73.1, 140.0], [73.2, 140.0], [73.3, 140.0], [73.4, 140.0], [73.5, 140.0], [73.6, 140.0], [73.7, 140.0], [73.8, 140.0], [73.9, 140.0], [74.0, 141.0], [74.1, 141.0], [74.2, 141.0], [74.3, 141.0], [74.4, 141.0], [74.5, 141.0], [74.6, 141.0], [74.7, 141.0], [74.8, 141.0], [74.9, 141.0], [75.0, 146.0], [75.1, 146.0], [75.2, 146.0], [75.3, 146.0], [75.4, 146.0], [75.5, 146.0], [75.6, 146.0], [75.7, 146.0], [75.8, 146.0], [75.9, 146.0], [76.0, 147.0], [76.1, 147.0], [76.2, 147.0], [76.3, 147.0], [76.4, 147.0], [76.5, 147.0], [76.6, 147.0], [76.7, 147.0], [76.8, 147.0], [76.9, 147.0], [77.0, 150.0], [77.1, 150.0], [77.2, 150.0], [77.3, 150.0], [77.4, 150.0], [77.5, 150.0], [77.6, 150.0], [77.7, 150.0], [77.8, 150.0], [77.9, 150.0], [78.0, 153.0], [78.1, 153.0], [78.2, 153.0], [78.3, 153.0], [78.4, 153.0], [78.5, 153.0], [78.6, 153.0], [78.7, 153.0], [78.8, 153.0], [78.9, 153.0], [79.0, 174.0], [79.1, 174.0], [79.2, 174.0], [79.3, 174.0], [79.4, 174.0], [79.5, 174.0], [79.6, 174.0], [79.7, 174.0], [79.8, 174.0], [79.9, 174.0], [80.0, 177.0], [80.1, 177.0], [80.2, 177.0], [80.3, 177.0], [80.4, 177.0], [80.5, 177.0], [80.6, 177.0], [80.7, 177.0], [80.8, 177.0], [80.9, 177.0], [81.0, 194.0], [81.1, 194.0], [81.2, 194.0], [81.3, 194.0], [81.4, 194.0], [81.5, 194.0], [81.6, 194.0], [81.7, 194.0], [81.8, 194.0], [81.9, 194.0], [82.0, 198.0], [82.1, 198.0], [82.2, 198.0], [82.3, 198.0], [82.4, 198.0], [82.5, 198.0], [82.6, 198.0], [82.7, 198.0], [82.8, 198.0], [82.9, 198.0], [83.0, 205.0], [83.1, 205.0], [83.2, 205.0], [83.3, 205.0], [83.4, 205.0], [83.5, 205.0], [83.6, 205.0], [83.7, 205.0], [83.8, 205.0], [83.9, 205.0], [84.0, 208.0], [84.1, 208.0], [84.2, 208.0], [84.3, 208.0], [84.4, 208.0], [84.5, 208.0], [84.6, 208.0], [84.7, 208.0], [84.8, 208.0], [84.9, 208.0], [85.0, 215.0], [85.1, 215.0], [85.2, 215.0], [85.3, 215.0], [85.4, 215.0], [85.5, 215.0], [85.6, 215.0], [85.7, 215.0], [85.8, 215.0], [85.9, 215.0], [86.0, 223.0], [86.1, 223.0], [86.2, 223.0], [86.3, 223.0], [86.4, 223.0], [86.5, 223.0], [86.6, 223.0], [86.7, 223.0], [86.8, 223.0], [86.9, 223.0], [87.0, 283.0], [87.1, 283.0], [87.2, 283.0], [87.3, 283.0], [87.4, 283.0], [87.5, 283.0], [87.6, 283.0], [87.7, 283.0], [87.8, 283.0], [87.9, 283.0], [88.0, 293.0], [88.1, 293.0], [88.2, 293.0], [88.3, 293.0], [88.4, 293.0], [88.5, 293.0], [88.6, 293.0], [88.7, 293.0], [88.8, 293.0], [88.9, 293.0], [89.0, 386.0], [89.1, 386.0], [89.2, 386.0], [89.3, 386.0], [89.4, 386.0], [89.5, 386.0], [89.6, 386.0], [89.7, 386.0], [89.8, 386.0], [89.9, 386.0], [90.0, 437.0], [90.1, 437.0], [90.2, 437.0], [90.3, 437.0], [90.4, 437.0], [90.5, 437.0], [90.6, 437.0], [90.7, 437.0], [90.8, 437.0], [90.9, 437.0], [91.0, 466.0], [91.1, 466.0], [91.2, 466.0], [91.3, 466.0], [91.4, 466.0], [91.5, 466.0], [91.6, 466.0], [91.7, 466.0], [91.8, 466.0], [91.9, 466.0], [92.0, 471.0], [92.1, 471.0], [92.2, 471.0], [92.3, 471.0], [92.4, 471.0], [92.5, 471.0], [92.6, 471.0], [92.7, 471.0], [92.8, 471.0], [92.9, 471.0], [93.0, 478.0], [93.1, 478.0], [93.2, 478.0], [93.3, 478.0], [93.4, 478.0], [93.5, 478.0], [93.6, 478.0], [93.7, 478.0], [93.8, 478.0], [93.9, 478.0], [94.0, 480.0], [94.1, 480.0], [94.2, 480.0], [94.3, 480.0], [94.4, 480.0], [94.5, 480.0], [94.6, 480.0], [94.7, 480.0], [94.8, 480.0], [94.9, 480.0], [95.0, 600.0], [95.1, 600.0], [95.2, 600.0], [95.3, 600.0], [95.4, 600.0], [95.5, 600.0], [95.6, 600.0], [95.7, 600.0], [95.8, 600.0], [95.9, 600.0], [96.0, 656.0], [96.1, 656.0], [96.2, 656.0], [96.3, 656.0], [96.4, 656.0], [96.5, 656.0], [96.6, 656.0], [96.7, 656.0], [96.8, 656.0], [96.9, 656.0], [97.0, 880.0], [97.1, 880.0], [97.2, 880.0], [97.3, 880.0], [97.4, 880.0], [97.5, 880.0], [97.6, 880.0], [97.7, 880.0], [97.8, 880.0], [97.9, 880.0], [98.0, 1964.0], [98.1, 1964.0], [98.2, 1964.0], [98.3, 1964.0], [98.4, 1964.0], [98.5, 1964.0], [98.6, 1964.0], [98.7, 1964.0], [98.8, 1964.0], [98.9, 1964.0], [99.0, 2012.0], [99.1, 2012.0], [99.2, 2012.0], [99.3, 2012.0], [99.4, 2012.0], [99.5, 2012.0], [99.6, 2012.0], [99.7, 2012.0], [99.8, 2012.0], [99.9, 2012.0]], "isOverall": false, "label": "1", "isController": false}, {"data": [[0.0, 29.0], [0.1, 29.0], [0.2, 29.0], [0.3, 29.0], [0.4, 29.0], [0.5, 30.0], [0.6, 30.0], [0.7, 30.0], [0.8, 30.0], [0.9, 30.0], [1.0, 33.0], [1.1, 33.0], [1.2, 33.0], [1.3, 33.0], [1.4, 33.0], [1.5, 33.0], [1.6, 33.0], [1.7, 33.0], [1.8, 33.0], [1.9, 33.0], [2.0, 33.0], [2.1, 33.0], [2.2, 33.0], [2.3, 33.0], [2.4, 33.0], [2.5, 34.0], [2.6, 34.0], [2.7, 34.0], [2.8, 34.0], [2.9, 34.0], [3.0, 34.0], [3.1, 34.0], [3.2, 34.0], [3.3, 34.0], [3.4, 34.0], [3.5, 34.0], [3.6, 34.0], [3.7, 34.0], [3.8, 34.0], [3.9, 34.0], [4.0, 34.0], [4.1, 34.0], [4.2, 34.0], [4.3, 34.0], [4.4, 34.0], [4.5, 34.0], [4.6, 34.0], [4.7, 34.0], [4.8, 34.0], [4.9, 34.0], [5.0, 36.0], [5.1, 36.0], [5.2, 36.0], [5.3, 36.0], [5.4, 36.0], [5.5, 37.0], [5.6, 37.0], [5.7, 37.0], [5.8, 37.0], [5.9, 37.0], [6.0, 38.0], [6.1, 38.0], [6.2, 38.0], [6.3, 38.0], [6.4, 38.0], [6.5, 38.0], [6.6, 38.0], [6.7, 38.0], [6.8, 38.0], [6.9, 38.0], [7.0, 38.0], [7.1, 38.0], [7.2, 38.0], [7.3, 38.0], [7.4, 38.0], [7.5, 39.0], [7.6, 39.0], [7.7, 39.0], [7.8, 39.0], [7.9, 39.0], [8.0, 40.0], [8.1, 40.0], [8.2, 40.0], [8.3, 40.0], [8.4, 40.0], [8.5, 41.0], [8.6, 41.0], [8.7, 41.0], [8.8, 41.0], [8.9, 41.0], [9.0, 42.0], [9.1, 42.0], [9.2, 42.0], [9.3, 42.0], [9.4, 42.0], [9.5, 43.0], [9.6, 43.0], [9.7, 43.0], [9.8, 43.0], [9.9, 43.0], [10.0, 43.0], [10.1, 43.0], [10.2, 43.0], [10.3, 43.0], [10.4, 43.0], [10.5, 44.0], [10.6, 44.0], [10.7, 44.0], [10.8, 44.0], [10.9, 44.0], [11.0, 44.0], [11.1, 44.0], [11.2, 44.0], [11.3, 44.0], [11.4, 44.0], [11.5, 44.0], [11.6, 44.0], [11.7, 44.0], [11.8, 44.0], [11.9, 44.0], [12.0, 45.0], [12.1, 45.0], [12.2, 45.0], [12.3, 45.0], [12.4, 45.0], [12.5, 45.0], [12.6, 45.0], [12.7, 45.0], [12.8, 45.0], [12.9, 45.0], [13.0, 46.0], [13.1, 46.0], [13.2, 46.0], [13.3, 46.0], [13.4, 46.0], [13.5, 46.0], [13.6, 46.0], [13.7, 46.0], [13.8, 46.0], [13.9, 46.0], [14.0, 47.0], [14.1, 47.0], [14.2, 47.0], [14.3, 47.0], [14.4, 47.0], [14.5, 47.0], [14.6, 47.0], [14.7, 47.0], [14.8, 47.0], [14.9, 47.0], [15.0, 48.0], [15.1, 48.0], [15.2, 48.0], [15.3, 48.0], [15.4, 48.0], [15.5, 48.0], [15.6, 48.0], [15.7, 48.0], [15.8, 48.0], [15.9, 48.0], [16.0, 49.0], [16.1, 49.0], [16.2, 49.0], [16.3, 49.0], [16.4, 49.0], [16.5, 49.0], [16.6, 49.0], [16.7, 49.0], [16.8, 49.0], [16.9, 49.0], [17.0, 49.0], [17.1, 49.0], [17.2, 49.0], [17.3, 49.0], [17.4, 49.0], [17.5, 49.0], [17.6, 49.0], [17.7, 49.0], [17.8, 49.0], [17.9, 49.0], [18.0, 50.0], [18.1, 50.0], [18.2, 50.0], [18.3, 50.0], [18.4, 50.0], [18.5, 51.0], [18.6, 51.0], [18.7, 51.0], [18.8, 51.0], [18.9, 51.0], [19.0, 54.0], [19.1, 54.0], [19.2, 54.0], [19.3, 54.0], [19.4, 54.0], [19.5, 56.0], [19.6, 56.0], [19.7, 56.0], [19.8, 56.0], [19.9, 56.0], [20.0, 56.0], [20.1, 56.0], [20.2, 56.0], [20.3, 56.0], [20.4, 56.0], [20.5, 56.0], [20.6, 56.0], [20.7, 56.0], [20.8, 56.0], [20.9, 56.0], [21.0, 57.0], [21.1, 57.0], [21.2, 57.0], [21.3, 57.0], [21.4, 57.0], [21.5, 59.0], [21.6, 59.0], [21.7, 59.0], [21.8, 59.0], [21.9, 59.0], [22.0, 60.0], [22.1, 60.0], [22.2, 60.0], [22.3, 60.0], [22.4, 60.0], [22.5, 63.0], [22.6, 63.0], [22.7, 63.0], [22.8, 63.0], [22.9, 63.0], [23.0, 63.0], [23.1, 63.0], [23.2, 63.0], [23.3, 63.0], [23.4, 63.0], [23.5, 63.0], [23.6, 63.0], [23.7, 63.0], [23.8, 63.0], [23.9, 63.0], [24.0, 63.0], [24.1, 63.0], [24.2, 63.0], [24.3, 63.0], [24.4, 63.0], [24.5, 63.0], [24.6, 63.0], [24.7, 63.0], [24.8, 63.0], [24.9, 63.0], [25.0, 64.0], [25.1, 64.0], [25.2, 64.0], [25.3, 64.0], [25.4, 64.0], [25.5, 64.0], [25.6, 64.0], [25.7, 64.0], [25.8, 64.0], [25.9, 64.0], [26.0, 65.0], [26.1, 65.0], [26.2, 65.0], [26.3, 65.0], [26.4, 65.0], [26.5, 66.0], [26.6, 66.0], [26.7, 66.0], [26.8, 66.0], [26.9, 66.0], [27.0, 66.0], [27.1, 66.0], [27.2, 66.0], [27.3, 66.0], [27.4, 66.0], [27.5, 66.0], [27.6, 66.0], [27.7, 66.0], [27.8, 66.0], [27.9, 66.0], [28.0, 67.0], [28.1, 67.0], [28.2, 67.0], [28.3, 67.0], [28.4, 67.0], [28.5, 67.0], [28.6, 67.0], [28.7, 67.0], [28.8, 67.0], [28.9, 67.0], [29.0, 68.0], [29.1, 68.0], [29.2, 68.0], [29.3, 68.0], [29.4, 68.0], [29.5, 68.0], [29.6, 68.0], [29.7, 68.0], [29.8, 68.0], [29.9, 68.0], [30.0, 69.0], [30.1, 69.0], [30.2, 69.0], [30.3, 69.0], [30.4, 69.0], [30.5, 69.0], [30.6, 69.0], [30.7, 69.0], [30.8, 69.0], [30.9, 69.0], [31.0, 69.0], [31.1, 69.0], [31.2, 69.0], [31.3, 69.0], [31.4, 69.0], [31.5, 70.0], [31.6, 70.0], [31.7, 70.0], [31.8, 70.0], [31.9, 70.0], [32.0, 70.0], [32.1, 70.0], [32.2, 70.0], [32.3, 70.0], [32.4, 70.0], [32.5, 70.0], [32.6, 70.0], [32.7, 70.0], [32.8, 70.0], [32.9, 70.0], [33.0, 70.0], [33.1, 70.0], [33.2, 70.0], [33.3, 70.0], [33.4, 70.0], [33.5, 70.0], [33.6, 70.0], [33.7, 70.0], [33.8, 70.0], [33.9, 70.0], [34.0, 72.0], [34.1, 72.0], [34.2, 72.0], [34.3, 72.0], [34.4, 72.0], [34.5, 72.0], [34.6, 72.0], [34.7, 72.0], [34.8, 72.0], [34.9, 72.0], [35.0, 74.0], [35.1, 74.0], [35.2, 74.0], [35.3, 74.0], [35.4, 74.0], [35.5, 74.0], [35.6, 74.0], [35.7, 74.0], [35.8, 74.0], [35.9, 74.0], [36.0, 76.0], [36.1, 76.0], [36.2, 76.0], [36.3, 76.0], [36.4, 76.0], [36.5, 76.0], [36.6, 76.0], [36.7, 76.0], [36.8, 76.0], [36.9, 76.0], [37.0, 77.0], [37.1, 77.0], [37.2, 77.0], [37.3, 77.0], [37.4, 77.0], [37.5, 78.0], [37.6, 78.0], [37.7, 78.0], [37.8, 78.0], [37.9, 78.0], [38.0, 78.0], [38.1, 78.0], [38.2, 78.0], [38.3, 78.0], [38.4, 78.0], [38.5, 79.0], [38.6, 79.0], [38.7, 79.0], [38.8, 79.0], [38.9, 79.0], [39.0, 79.0], [39.1, 79.0], [39.2, 79.0], [39.3, 79.0], [39.4, 79.0], [39.5, 79.0], [39.6, 79.0], [39.7, 79.0], [39.8, 79.0], [39.9, 79.0], [40.0, 80.0], [40.1, 80.0], [40.2, 80.0], [40.3, 80.0], [40.4, 80.0], [40.5, 80.0], [40.6, 80.0], [40.7, 80.0], [40.8, 80.0], [40.9, 80.0], [41.0, 80.0], [41.1, 80.0], [41.2, 80.0], [41.3, 80.0], [41.4, 80.0], [41.5, 81.0], [41.6, 81.0], [41.7, 81.0], [41.8, 81.0], [41.9, 81.0], [42.0, 81.0], [42.1, 81.0], [42.2, 81.0], [42.3, 81.0], [42.4, 81.0], [42.5, 82.0], [42.6, 82.0], [42.7, 82.0], [42.8, 82.0], [42.9, 82.0], [43.0, 83.0], [43.1, 83.0], [43.2, 83.0], [43.3, 83.0], [43.4, 83.0], [43.5, 83.0], [43.6, 83.0], [43.7, 83.0], [43.8, 83.0], [43.9, 83.0], [44.0, 84.0], [44.1, 84.0], [44.2, 84.0], [44.3, 84.0], [44.4, 84.0], [44.5, 85.0], [44.6, 85.0], [44.7, 85.0], [44.8, 85.0], [44.9, 85.0], [45.0, 85.0], [45.1, 85.0], [45.2, 85.0], [45.3, 85.0], [45.4, 85.0], [45.5, 86.0], [45.6, 86.0], [45.7, 86.0], [45.8, 86.0], [45.9, 86.0], [46.0, 86.0], [46.1, 86.0], [46.2, 86.0], [46.3, 86.0], [46.4, 86.0], [46.5, 86.0], [46.6, 86.0], [46.7, 86.0], [46.8, 86.0], [46.9, 86.0], [47.0, 87.0], [47.1, 87.0], [47.2, 87.0], [47.3, 87.0], [47.4, 87.0], [47.5, 87.0], [47.6, 87.0], [47.7, 87.0], [47.8, 87.0], [47.9, 87.0], [48.0, 87.0], [48.1, 87.0], [48.2, 87.0], [48.3, 87.0], [48.4, 87.0], [48.5, 87.0], [48.6, 87.0], [48.7, 87.0], [48.8, 87.0], [48.9, 87.0], [49.0, 88.0], [49.1, 88.0], [49.2, 88.0], [49.3, 88.0], [49.4, 88.0], [49.5, 88.0], [49.6, 88.0], [49.7, 88.0], [49.8, 88.0], [49.9, 88.0], [50.0, 88.0], [50.1, 88.0], [50.2, 88.0], [50.3, 88.0], [50.4, 88.0], [50.5, 92.0], [50.6, 92.0], [50.7, 92.0], [50.8, 92.0], [50.9, 92.0], [51.0, 92.0], [51.1, 92.0], [51.2, 92.0], [51.3, 92.0], [51.4, 92.0], [51.5, 92.0], [51.6, 92.0], [51.7, 92.0], [51.8, 92.0], [51.9, 92.0], [52.0, 93.0], [52.1, 93.0], [52.2, 93.0], [52.3, 93.0], [52.4, 93.0], [52.5, 95.0], [52.6, 95.0], [52.7, 95.0], [52.8, 95.0], [52.9, 95.0], [53.0, 95.0], [53.1, 95.0], [53.2, 95.0], [53.3, 95.0], [53.4, 95.0], [53.5, 95.0], [53.6, 95.0], [53.7, 95.0], [53.8, 95.0], [53.9, 95.0], [54.0, 96.0], [54.1, 96.0], [54.2, 96.0], [54.3, 96.0], [54.4, 96.0], [54.5, 97.0], [54.6, 97.0], [54.7, 97.0], [54.8, 97.0], [54.9, 97.0], [55.0, 97.0], [55.1, 97.0], [55.2, 97.0], [55.3, 97.0], [55.4, 97.0], [55.5, 98.0], [55.6, 98.0], [55.7, 98.0], [55.8, 98.0], [55.9, 98.0], [56.0, 98.0], [56.1, 98.0], [56.2, 98.0], [56.3, 98.0], [56.4, 98.0], [56.5, 99.0], [56.6, 99.0], [56.7, 99.0], [56.8, 99.0], [56.9, 99.0], [57.0, 101.0], [57.1, 101.0], [57.2, 101.0], [57.3, 101.0], [57.4, 101.0], [57.5, 101.0], [57.6, 101.0], [57.7, 101.0], [57.8, 101.0], [57.9, 101.0], [58.0, 102.0], [58.1, 102.0], [58.2, 102.0], [58.3, 102.0], [58.4, 102.0], [58.5, 102.0], [58.6, 102.0], [58.7, 102.0], [58.8, 102.0], [58.9, 102.0], [59.0, 103.0], [59.1, 103.0], [59.2, 103.0], [59.3, 103.0], [59.4, 103.0], [59.5, 103.0], [59.6, 103.0], [59.7, 103.0], [59.8, 103.0], [59.9, 103.0], [60.0, 103.0], [60.1, 103.0], [60.2, 103.0], [60.3, 103.0], [60.4, 103.0], [60.5, 104.0], [60.6, 104.0], [60.7, 104.0], [60.8, 104.0], [60.9, 104.0], [61.0, 104.0], [61.1, 104.0], [61.2, 104.0], [61.3, 104.0], [61.4, 104.0], [61.5, 105.0], [61.6, 105.0], [61.7, 105.0], [61.8, 105.0], [61.9, 105.0], [62.0, 106.0], [62.1, 106.0], [62.2, 106.0], [62.3, 106.0], [62.4, 106.0], [62.5, 107.0], [62.6, 107.0], [62.7, 107.0], [62.8, 107.0], [62.9, 107.0], [63.0, 108.0], [63.1, 108.0], [63.2, 108.0], [63.3, 108.0], [63.4, 108.0], [63.5, 110.0], [63.6, 110.0], [63.7, 110.0], [63.8, 110.0], [63.9, 110.0], [64.0, 114.0], [64.1, 114.0], [64.2, 114.0], [64.3, 114.0], [64.4, 114.0], [64.5, 115.0], [64.6, 115.0], [64.7, 115.0], [64.8, 115.0], [64.9, 115.0], [65.0, 116.0], [65.1, 116.0], [65.2, 116.0], [65.3, 116.0], [65.4, 116.0], [65.5, 117.0], [65.6, 117.0], [65.7, 117.0], [65.8, 117.0], [65.9, 117.0], [66.0, 121.0], [66.1, 121.0], [66.2, 121.0], [66.3, 121.0], [66.4, 121.0], [66.5, 123.0], [66.6, 123.0], [66.7, 123.0], [66.8, 123.0], [66.9, 123.0], [67.0, 124.0], [67.1, 124.0], [67.2, 124.0], [67.3, 124.0], [67.4, 124.0], [67.5, 124.0], [67.6, 124.0], [67.7, 124.0], [67.8, 124.0], [67.9, 124.0], [68.0, 124.0], [68.1, 124.0], [68.2, 124.0], [68.3, 124.0], [68.4, 124.0], [68.5, 125.0], [68.6, 125.0], [68.7, 125.0], [68.8, 125.0], [68.9, 125.0], [69.0, 127.0], [69.1, 127.0], [69.2, 127.0], [69.3, 127.0], [69.4, 127.0], [69.5, 132.0], [69.6, 132.0], [69.7, 132.0], [69.8, 132.0], [69.9, 132.0], [70.0, 135.0], [70.1, 135.0], [70.2, 135.0], [70.3, 135.0], [70.4, 135.0], [70.5, 137.0], [70.6, 137.0], [70.7, 137.0], [70.8, 137.0], [70.9, 137.0], [71.0, 138.0], [71.1, 138.0], [71.2, 138.0], [71.3, 138.0], [71.4, 138.0], [71.5, 140.0], [71.6, 140.0], [71.7, 140.0], [71.8, 140.0], [71.9, 140.0], [72.0, 142.0], [72.1, 142.0], [72.2, 142.0], [72.3, 142.0], [72.4, 142.0], [72.5, 144.0], [72.6, 144.0], [72.7, 144.0], [72.8, 144.0], [72.9, 144.0], [73.0, 144.0], [73.1, 144.0], [73.2, 144.0], [73.3, 144.0], [73.4, 144.0], [73.5, 144.0], [73.6, 144.0], [73.7, 144.0], [73.8, 144.0], [73.9, 144.0], [74.0, 145.0], [74.1, 145.0], [74.2, 145.0], [74.3, 145.0], [74.4, 145.0], [74.5, 148.0], [74.6, 148.0], [74.7, 148.0], [74.8, 148.0], [74.9, 148.0], [75.0, 149.0], [75.1, 149.0], [75.2, 149.0], [75.3, 149.0], [75.4, 149.0], [75.5, 150.0], [75.6, 150.0], [75.7, 150.0], [75.8, 150.0], [75.9, 150.0], [76.0, 154.0], [76.1, 154.0], [76.2, 154.0], [76.3, 154.0], [76.4, 154.0], [76.5, 155.0], [76.6, 155.0], [76.7, 155.0], [76.8, 155.0], [76.9, 155.0], [77.0, 156.0], [77.1, 156.0], [77.2, 156.0], [77.3, 156.0], [77.4, 156.0], [77.5, 156.0], [77.6, 156.0], [77.7, 156.0], [77.8, 156.0], [77.9, 156.0], [78.0, 157.0], [78.1, 157.0], [78.2, 157.0], [78.3, 157.0], [78.4, 157.0], [78.5, 167.0], [78.6, 167.0], [78.7, 167.0], [78.8, 167.0], [78.9, 167.0], [79.0, 167.0], [79.1, 167.0], [79.2, 167.0], [79.3, 167.0], [79.4, 167.0], [79.5, 171.0], [79.6, 171.0], [79.7, 171.0], [79.8, 171.0], [79.9, 171.0], [80.0, 175.0], [80.1, 175.0], [80.2, 175.0], [80.3, 175.0], [80.4, 175.0], [80.5, 187.0], [80.6, 187.0], [80.7, 187.0], [80.8, 187.0], [80.9, 187.0], [81.0, 193.0], [81.1, 193.0], [81.2, 193.0], [81.3, 193.0], [81.4, 193.0], [81.5, 198.0], [81.6, 198.0], [81.7, 198.0], [81.8, 198.0], [81.9, 198.0], [82.0, 199.0], [82.1, 199.0], [82.2, 199.0], [82.3, 199.0], [82.4, 199.0], [82.5, 200.0], [82.6, 200.0], [82.7, 200.0], [82.8, 200.0], [82.9, 200.0], [83.0, 205.0], [83.1, 205.0], [83.2, 205.0], [83.3, 205.0], [83.4, 205.0], [83.5, 213.0], [83.6, 213.0], [83.7, 213.0], [83.8, 213.0], [83.9, 213.0], [84.0, 214.0], [84.1, 214.0], [84.2, 214.0], [84.3, 214.0], [84.4, 214.0], [84.5, 217.0], [84.6, 217.0], [84.7, 217.0], [84.8, 217.0], [84.9, 217.0], [85.0, 223.0], [85.1, 223.0], [85.2, 223.0], [85.3, 223.0], [85.4, 223.0], [85.5, 224.0], [85.6, 224.0], [85.7, 224.0], [85.8, 224.0], [85.9, 224.0], [86.0, 225.0], [86.1, 225.0], [86.2, 225.0], [86.3, 225.0], [86.4, 225.0], [86.5, 225.0], [86.6, 225.0], [86.7, 225.0], [86.8, 225.0], [86.9, 225.0], [87.0, 262.0], [87.1, 262.0], [87.2, 262.0], [87.3, 262.0], [87.4, 262.0], [87.5, 264.0], [87.6, 264.0], [87.7, 264.0], [87.8, 264.0], [87.9, 264.0], [88.0, 281.0], [88.1, 281.0], [88.2, 281.0], [88.3, 281.0], [88.4, 281.0], [88.5, 283.0], [88.6, 283.0], [88.7, 283.0], [88.8, 283.0], [88.9, 283.0], [89.0, 292.0], [89.1, 292.0], [89.2, 292.0], [89.3, 292.0], [89.4, 292.0], [89.5, 300.0], [89.6, 300.0], [89.7, 300.0], [89.8, 300.0], [89.9, 300.0], [90.0, 303.0], [90.1, 303.0], [90.2, 303.0], [90.3, 303.0], [90.4, 303.0], [90.5, 303.0], [90.6, 303.0], [90.7, 303.0], [90.8, 303.0], [90.9, 303.0], [91.0, 310.0], [91.1, 310.0], [91.2, 310.0], [91.3, 310.0], [91.4, 310.0], [91.5, 319.0], [91.6, 319.0], [91.7, 319.0], [91.8, 319.0], [91.9, 319.0], [92.0, 330.0], [92.1, 330.0], [92.2, 330.0], [92.3, 330.0], [92.4, 330.0], [92.5, 363.0], [92.6, 363.0], [92.7, 363.0], [92.8, 363.0], [92.9, 363.0], [93.0, 401.0], [93.1, 401.0], [93.2, 401.0], [93.3, 401.0], [93.4, 401.0], [93.5, 405.0], [93.6, 405.0], [93.7, 405.0], [93.8, 405.0], [93.9, 405.0], [94.0, 412.0], [94.1, 412.0], [94.2, 412.0], [94.3, 412.0], [94.4, 412.0], [94.5, 465.0], [94.6, 465.0], [94.7, 465.0], [94.8, 465.0], [94.9, 465.0], [95.0, 546.0], [95.1, 546.0], [95.2, 546.0], [95.3, 546.0], [95.4, 546.0], [95.5, 676.0], [95.6, 676.0], [95.7, 676.0], [95.8, 676.0], [95.9, 676.0], [96.0, 702.0], [96.1, 702.0], [96.2, 702.0], [96.3, 702.0], [96.4, 702.0], [96.5, 711.0], [96.6, 711.0], [96.7, 711.0], [96.8, 711.0], [96.9, 711.0], [97.0, 712.0], [97.1, 712.0], [97.2, 712.0], [97.3, 712.0], [97.4, 712.0], [97.5, 869.0], [97.6, 869.0], [97.7, 869.0], [97.8, 869.0], [97.9, 869.0], [98.0, 873.0], [98.1, 873.0], [98.2, 873.0], [98.3, 873.0], [98.4, 873.0], [98.5, 919.0], [98.6, 919.0], [98.7, 919.0], [98.8, 919.0], [98.9, 919.0], [99.0, 2353.0], [99.1, 2353.0], [99.2, 2353.0], [99.3, 2353.0], [99.4, 2353.0], [99.5, 2364.0], [99.6, 2364.0], [99.7, 2364.0], [99.8, 2364.0], [99.9, 2364.0]], "isOverall": false, "label": "2", "isController": false}, {"data": [[0.0, 29.0], [0.1, 29.0], [0.2, 29.0], [0.3, 32.0], [0.4, 32.0], [0.5, 32.0], [0.6, 32.0], [0.7, 32.0], [0.8, 33.0], [0.9, 33.0], [1.0, 33.0], [1.1, 33.0], [1.2, 33.0], [1.3, 34.0], [1.4, 34.0], [1.5, 35.0], [1.6, 35.0], [1.7, 35.0], [1.8, 35.0], [1.9, 35.0], [2.0, 35.0], [2.1, 35.0], [2.2, 35.0], [2.3, 36.0], [2.4, 36.0], [2.5, 36.0], [2.6, 36.0], [2.7, 36.0], [2.8, 36.0], [2.9, 36.0], [3.0, 36.0], [3.1, 36.0], [3.2, 36.0], [3.3, 37.0], [3.4, 37.0], [3.5, 37.0], [3.6, 37.0], [3.7, 37.0], [3.8, 38.0], [3.9, 38.0], [4.0, 38.0], [4.1, 38.0], [4.2, 38.0], [4.3, 38.0], [4.4, 38.0], [4.5, 38.0], [4.6, 38.0], [4.7, 38.0], [4.8, 39.0], [4.9, 39.0], [5.0, 39.0], [5.1, 39.0], [5.2, 39.0], [5.3, 39.0], [5.4, 39.0], [5.5, 39.0], [5.6, 39.0], [5.7, 39.0], [5.8, 39.0], [5.9, 39.0], [6.0, 40.0], [6.1, 40.0], [6.2, 40.0], [6.3, 40.0], [6.4, 40.0], [6.5, 40.0], [6.6, 40.0], [6.7, 40.0], [6.8, 41.0], [6.9, 41.0], [7.0, 41.0], [7.1, 41.0], [7.2, 41.0], [7.3, 41.0], [7.4, 41.0], [7.5, 42.0], [7.6, 42.0], [7.7, 42.0], [7.8, 42.0], [7.9, 42.0], [8.0, 43.0], [8.1, 43.0], [8.2, 43.0], [8.3, 43.0], [8.4, 43.0], [8.5, 43.0], [8.6, 43.0], [8.7, 43.0], [8.8, 44.0], [8.9, 44.0], [9.0, 44.0], [9.1, 44.0], [9.2, 44.0], [9.3, 44.0], [9.4, 44.0], [9.5, 44.0], [9.6, 44.0], [9.7, 44.0], [9.8, 45.0], [9.9, 45.0], [10.0, 45.0], [10.1, 45.0], [10.2, 45.0], [10.3, 45.0], [10.4, 45.0], [10.5, 45.0], [10.6, 45.0], [10.7, 45.0], [10.8, 45.0], [10.9, 45.0], [11.0, 46.0], [11.1, 46.0], [11.2, 46.0], [11.3, 46.0], [11.4, 46.0], [11.5, 46.0], [11.6, 46.0], [11.7, 46.0], [11.8, 47.0], [11.9, 47.0], [12.0, 47.0], [12.1, 47.0], [12.2, 47.0], [12.3, 47.0], [12.4, 47.0], [12.5, 48.0], [12.6, 48.0], [12.7, 48.0], [12.8, 48.0], [12.9, 48.0], [13.0, 48.0], [13.1, 48.0], [13.2, 48.0], [13.3, 48.0], [13.4, 48.0], [13.5, 48.0], [13.6, 48.0], [13.7, 48.0], [13.8, 49.0], [13.9, 49.0], [14.0, 49.0], [14.1, 49.0], [14.2, 49.0], [14.3, 50.0], [14.4, 50.0], [14.5, 50.0], [14.6, 50.0], [14.7, 50.0], [14.8, 50.0], [14.9, 50.0], [15.0, 51.0], [15.1, 51.0], [15.2, 51.0], [15.3, 51.0], [15.4, 51.0], [15.5, 51.0], [15.6, 51.0], [15.7, 51.0], [15.8, 51.0], [15.9, 51.0], [16.0, 52.0], [16.1, 52.0], [16.2, 52.0], [16.3, 52.0], [16.4, 52.0], [16.5, 52.0], [16.6, 52.0], [16.7, 52.0], [16.8, 53.0], [16.9, 53.0], [17.0, 53.0], [17.1, 53.0], [17.2, 53.0], [17.3, 53.0], [17.4, 53.0], [17.5, 54.0], [17.6, 54.0], [17.7, 54.0], [17.8, 54.0], [17.9, 54.0], [18.0, 55.0], [18.1, 55.0], [18.2, 55.0], [18.3, 55.0], [18.4, 55.0], [18.5, 56.0], [18.6, 56.0], [18.7, 56.0], [18.8, 57.0], [18.9, 57.0], [19.0, 58.0], [19.1, 58.0], [19.2, 58.0], [19.3, 58.0], [19.4, 58.0], [19.5, 59.0], [19.6, 59.0], [19.7, 59.0], [19.8, 59.0], [19.9, 59.0], [20.0, 60.0], [20.1, 60.0], [20.2, 60.0], [20.3, 61.0], [20.4, 61.0], [20.5, 61.0], [20.6, 61.0], [20.7, 61.0], [20.8, 61.0], [20.9, 61.0], [21.0, 62.0], [21.1, 62.0], [21.2, 62.0], [21.3, 62.0], [21.4, 62.0], [21.5, 62.0], [21.6, 62.0], [21.7, 62.0], [21.8, 63.0], [21.9, 63.0], [22.0, 63.0], [22.1, 63.0], [22.2, 63.0], [22.3, 63.0], [22.4, 63.0], [22.5, 64.0], [22.6, 64.0], [22.7, 64.0], [22.8, 64.0], [22.9, 64.0], [23.0, 65.0], [23.1, 65.0], [23.2, 65.0], [23.3, 65.0], [23.4, 65.0], [23.5, 65.0], [23.6, 65.0], [23.7, 65.0], [23.8, 65.0], [23.9, 65.0], [24.0, 65.0], [24.1, 65.0], [24.2, 65.0], [24.3, 66.0], [24.4, 66.0], [24.5, 66.0], [24.6, 66.0], [24.7, 66.0], [24.8, 66.0], [24.9, 66.0], [25.0, 66.0], [25.1, 66.0], [25.2, 66.0], [25.3, 67.0], [25.4, 67.0], [25.5, 67.0], [25.6, 67.0], [25.7, 67.0], [25.8, 67.0], [25.9, 67.0], [26.0, 67.0], [26.1, 67.0], [26.2, 67.0], [26.3, 68.0], [26.4, 68.0], [26.5, 69.0], [26.6, 69.0], [26.7, 69.0], [26.8, 69.0], [26.9, 69.0], [27.0, 70.0], [27.1, 70.0], [27.2, 70.0], [27.3, 70.0], [27.4, 70.0], [27.5, 71.0], [27.6, 71.0], [27.7, 71.0], [27.8, 71.0], [27.9, 71.0], [28.0, 71.0], [28.1, 71.0], [28.2, 71.0], [28.3, 73.0], [28.4, 73.0], [28.5, 73.0], [28.6, 73.0], [28.7, 73.0], [28.8, 73.0], [28.9, 73.0], [29.0, 74.0], [29.1, 74.0], [29.2, 74.0], [29.3, 74.0], [29.4, 74.0], [29.5, 75.0], [29.6, 75.0], [29.7, 75.0], [29.8, 76.0], [29.9, 76.0], [30.0, 77.0], [30.1, 77.0], [30.2, 77.0], [30.3, 77.0], [30.4, 77.0], [30.5, 77.0], [30.6, 77.0], [30.7, 77.0], [30.8, 78.0], [30.9, 78.0], [31.0, 78.0], [31.1, 78.0], [31.2, 78.0], [31.3, 79.0], [31.4, 79.0], [31.5, 79.0], [31.6, 79.0], [31.7, 79.0], [31.8, 81.0], [31.9, 81.0], [32.0, 82.0], [32.1, 82.0], [32.2, 82.0], [32.3, 82.0], [32.4, 82.0], [32.5, 83.0], [32.6, 83.0], [32.7, 83.0], [32.8, 84.0], [32.9, 84.0], [33.0, 84.0], [33.1, 84.0], [33.2, 84.0], [33.3, 84.0], [33.4, 84.0], [33.5, 84.0], [33.6, 84.0], [33.7, 84.0], [33.8, 84.0], [33.9, 84.0], [34.0, 85.0], [34.1, 85.0], [34.2, 85.0], [34.3, 85.0], [34.4, 85.0], [34.5, 86.0], [34.6, 86.0], [34.7, 86.0], [34.8, 86.0], [34.9, 86.0], [35.0, 87.0], [35.1, 87.0], [35.2, 87.0], [35.3, 87.0], [35.4, 87.0], [35.5, 87.0], [35.6, 87.0], [35.7, 87.0], [35.8, 87.0], [35.9, 87.0], [36.0, 88.0], [36.1, 88.0], [36.2, 88.0], [36.3, 88.0], [36.4, 88.0], [36.5, 89.0], [36.6, 89.0], [36.7, 89.0], [36.8, 90.0], [36.9, 90.0], [37.0, 90.0], [37.1, 90.0], [37.2, 90.0], [37.3, 90.0], [37.4, 90.0], [37.5, 90.0], [37.6, 90.0], [37.7, 90.0], [37.8, 91.0], [37.9, 91.0], [38.0, 91.0], [38.1, 91.0], [38.2, 91.0], [38.3, 91.0], [38.4, 91.0], [38.5, 92.0], [38.6, 92.0], [38.7, 92.0], [38.8, 92.0], [38.9, 92.0], [39.0, 92.0], [39.1, 92.0], [39.2, 92.0], [39.3, 92.0], [39.4, 92.0], [39.5, 92.0], [39.6, 92.0], [39.7, 92.0], [39.8, 93.0], [39.9, 93.0], [40.0, 93.0], [40.1, 93.0], [40.2, 93.0], [40.3, 94.0], [40.4, 94.0], [40.5, 94.0], [40.6, 94.0], [40.7, 94.0], [40.8, 95.0], [40.9, 95.0], [41.0, 95.0], [41.1, 95.0], [41.2, 95.0], [41.3, 97.0], [41.4, 97.0], [41.5, 97.0], [41.6, 97.0], [41.7, 97.0], [41.8, 97.0], [41.9, 97.0], [42.0, 97.0], [42.1, 97.0], [42.2, 97.0], [42.3, 98.0], [42.4, 98.0], [42.5, 99.0], [42.6, 99.0], [42.7, 99.0], [42.8, 99.0], [42.9, 99.0], [43.0, 100.0], [43.1, 100.0], [43.2, 100.0], [43.3, 101.0], [43.4, 101.0], [43.5, 101.0], [43.6, 101.0], [43.7, 101.0], [43.8, 101.0], [43.9, 101.0], [44.0, 104.0], [44.1, 104.0], [44.2, 104.0], [44.3, 105.0], [44.4, 105.0], [44.5, 105.0], [44.6, 105.0], [44.7, 105.0], [44.8, 105.0], [44.9, 105.0], [45.0, 105.0], [45.1, 105.0], [45.2, 105.0], [45.3, 106.0], [45.4, 106.0], [45.5, 107.0], [45.6, 107.0], [45.7, 107.0], [45.8, 107.0], [45.9, 107.0], [46.0, 107.0], [46.1, 107.0], [46.2, 107.0], [46.3, 108.0], [46.4, 108.0], [46.5, 109.0], [46.6, 109.0], [46.7, 109.0], [46.8, 109.0], [46.9, 109.0], [47.0, 109.0], [47.1, 109.0], [47.2, 109.0], [47.3, 109.0], [47.4, 109.0], [47.5, 110.0], [47.6, 110.0], [47.7, 110.0], [47.8, 111.0], [47.9, 111.0], [48.0, 111.0], [48.1, 111.0], [48.2, 111.0], [48.3, 112.0], [48.4, 112.0], [48.5, 113.0], [48.6, 113.0], [48.7, 113.0], [48.8, 115.0], [48.9, 115.0], [49.0, 115.0], [49.1, 115.0], [49.2, 115.0], [49.3, 116.0], [49.4, 116.0], [49.5, 116.0], [49.6, 116.0], [49.7, 116.0], [49.8, 116.0], [49.9, 116.0], [50.0, 117.0], [50.1, 117.0], [50.2, 117.0], [50.3, 118.0], [50.4, 118.0], [50.5, 118.0], [50.6, 118.0], [50.7, 118.0], [50.8, 119.0], [50.9, 119.0], [51.0, 120.0], [51.1, 120.0], [51.2, 120.0], [51.3, 121.0], [51.4, 121.0], [51.5, 121.0], [51.6, 121.0], [51.7, 121.0], [51.8, 122.0], [51.9, 122.0], [52.0, 123.0], [52.1, 123.0], [52.2, 123.0], [52.3, 124.0], [52.4, 124.0], [52.5, 124.0], [52.6, 124.0], [52.7, 124.0], [52.8, 124.0], [52.9, 124.0], [53.0, 125.0], [53.1, 125.0], [53.2, 125.0], [53.3, 125.0], [53.4, 125.0], [53.5, 126.0], [53.6, 126.0], [53.7, 126.0], [53.8, 126.0], [53.9, 126.0], [54.0, 127.0], [54.1, 127.0], [54.2, 127.0], [54.3, 127.0], [54.4, 127.0], [54.5, 127.0], [54.6, 127.0], [54.7, 127.0], [54.8, 128.0], [54.9, 128.0], [55.0, 128.0], [55.1, 128.0], [55.2, 128.0], [55.3, 129.0], [55.4, 129.0], [55.5, 130.0], [55.6, 130.0], [55.7, 130.0], [55.8, 131.0], [55.9, 131.0], [56.0, 132.0], [56.1, 132.0], [56.2, 132.0], [56.3, 132.0], [56.4, 132.0], [56.5, 134.0], [56.6, 134.0], [56.7, 134.0], [56.8, 135.0], [56.9, 135.0], [57.0, 136.0], [57.1, 136.0], [57.2, 136.0], [57.3, 136.0], [57.4, 136.0], [57.5, 136.0], [57.6, 136.0], [57.7, 136.0], [57.8, 137.0], [57.9, 137.0], [58.0, 137.0], [58.1, 137.0], [58.2, 137.0], [58.3, 138.0], [58.4, 138.0], [58.5, 138.0], [58.6, 138.0], [58.7, 138.0], [58.8, 138.0], [58.9, 138.0], [59.0, 139.0], [59.1, 139.0], [59.2, 139.0], [59.3, 140.0], [59.4, 140.0], [59.5, 141.0], [59.6, 141.0], [59.7, 141.0], [59.8, 142.0], [59.9, 142.0], [60.0, 142.0], [60.1, 142.0], [60.2, 142.0], [60.3, 143.0], [60.4, 143.0], [60.5, 143.0], [60.6, 143.0], [60.7, 143.0], [60.8, 143.0], [60.9, 143.0], [61.0, 144.0], [61.1, 144.0], [61.2, 144.0], [61.3, 147.0], [61.4, 147.0], [61.5, 147.0], [61.6, 147.0], [61.7, 147.0], [61.8, 148.0], [61.9, 148.0], [62.0, 148.0], [62.1, 148.0], [62.2, 148.0], [62.3, 150.0], [62.4, 150.0], [62.5, 150.0], [62.6, 150.0], [62.7, 150.0], [62.8, 150.0], [62.9, 150.0], [63.0, 152.0], [63.1, 152.0], [63.2, 152.0], [63.3, 153.0], [63.4, 153.0], [63.5, 153.0], [63.6, 153.0], [63.7, 153.0], [63.8, 153.0], [63.9, 153.0], [64.0, 155.0], [64.1, 155.0], [64.2, 155.0], [64.3, 156.0], [64.4, 156.0], [64.5, 156.0], [64.6, 156.0], [64.7, 156.0], [64.8, 156.0], [64.9, 156.0], [65.0, 157.0], [65.1, 157.0], [65.2, 157.0], [65.3, 158.0], [65.4, 158.0], [65.5, 160.0], [65.6, 160.0], [65.7, 160.0], [65.8, 160.0], [65.9, 160.0], [66.0, 162.0], [66.1, 162.0], [66.2, 162.0], [66.3, 162.0], [66.4, 162.0], [66.5, 163.0], [66.6, 163.0], [66.7, 163.0], [66.8, 163.0], [66.9, 163.0], [67.0, 166.0], [67.1, 166.0], [67.2, 166.0], [67.3, 169.0], [67.4, 169.0], [67.5, 169.0], [67.6, 169.0], [67.7, 169.0], [67.8, 169.0], [67.9, 169.0], [68.0, 169.0], [68.1, 169.0], [68.2, 169.0], [68.3, 170.0], [68.4, 170.0], [68.5, 171.0], [68.6, 171.0], [68.7, 171.0], [68.8, 175.0], [68.9, 175.0], [69.0, 175.0], [69.1, 175.0], [69.2, 175.0], [69.3, 175.0], [69.4, 175.0], [69.5, 176.0], [69.6, 176.0], [69.7, 176.0], [69.8, 177.0], [69.9, 177.0], [70.0, 178.0], [70.1, 178.0], [70.2, 178.0], [70.3, 179.0], [70.4, 179.0], [70.5, 182.0], [70.6, 182.0], [70.7, 182.0], [70.8, 182.0], [70.9, 182.0], [71.0, 184.0], [71.1, 184.0], [71.2, 184.0], [71.3, 185.0], [71.4, 185.0], [71.5, 185.0], [71.6, 185.0], [71.7, 185.0], [71.8, 186.0], [71.9, 186.0], [72.0, 188.0], [72.1, 188.0], [72.2, 188.0], [72.3, 190.0], [72.4, 190.0], [72.5, 191.0], [72.6, 191.0], [72.7, 191.0], [72.8, 200.0], [72.9, 200.0], [73.0, 200.0], [73.1, 200.0], [73.2, 200.0], [73.3, 206.0], [73.4, 206.0], [73.5, 208.0], [73.6, 208.0], [73.7, 208.0], [73.8, 209.0], [73.9, 209.0], [74.0, 212.0], [74.1, 212.0], [74.2, 212.0], [74.3, 212.0], [74.4, 212.0], [74.5, 213.0], [74.6, 213.0], [74.7, 213.0], [74.8, 218.0], [74.9, 218.0], [75.0, 222.0], [75.1, 222.0], [75.2, 222.0], [75.3, 225.0], [75.4, 225.0], [75.5, 229.0], [75.6, 229.0], [75.7, 229.0], [75.8, 235.0], [75.9, 235.0], [76.0, 237.0], [76.1, 237.0], [76.2, 237.0], [76.3, 238.0], [76.4, 238.0], [76.5, 238.0], [76.6, 238.0], [76.7, 238.0], [76.8, 239.0], [76.9, 239.0], [77.0, 240.0], [77.1, 240.0], [77.2, 240.0], [77.3, 242.0], [77.4, 242.0], [77.5, 243.0], [77.6, 243.0], [77.7, 243.0], [77.8, 243.0], [77.9, 243.0], [78.0, 246.0], [78.1, 246.0], [78.2, 246.0], [78.3, 247.0], [78.4, 247.0], [78.5, 250.0], [78.6, 250.0], [78.7, 250.0], [78.8, 252.0], [78.9, 252.0], [79.0, 255.0], [79.1, 255.0], [79.2, 255.0], [79.3, 259.0], [79.4, 259.0], [79.5, 261.0], [79.6, 261.0], [79.7, 261.0], [79.8, 262.0], [79.9, 262.0], [80.0, 264.0], [80.1, 264.0], [80.2, 264.0], [80.3, 269.0], [80.4, 269.0], [80.5, 270.0], [80.6, 270.0], [80.7, 270.0], [80.8, 270.0], [80.9, 270.0], [81.0, 273.0], [81.1, 273.0], [81.2, 273.0], [81.3, 275.0], [81.4, 275.0], [81.5, 277.0], [81.6, 277.0], [81.7, 277.0], [81.8, 291.0], [81.9, 291.0], [82.0, 292.0], [82.1, 292.0], [82.2, 292.0], [82.3, 302.0], [82.4, 302.0], [82.5, 305.0], [82.6, 305.0], [82.7, 305.0], [82.8, 307.0], [82.9, 307.0], [83.0, 308.0], [83.1, 308.0], [83.2, 308.0], [83.3, 314.0], [83.4, 314.0], [83.5, 314.0], [83.6, 314.0], [83.7, 314.0], [83.8, 315.0], [83.9, 315.0], [84.0, 320.0], [84.1, 320.0], [84.2, 320.0], [84.3, 331.0], [84.4, 331.0], [84.5, 332.0], [84.6, 332.0], [84.7, 332.0], [84.8, 337.0], [84.9, 337.0], [85.0, 339.0], [85.1, 339.0], [85.2, 339.0], [85.3, 339.0], [85.4, 339.0], [85.5, 344.0], [85.6, 344.0], [85.7, 344.0], [85.8, 344.0], [85.9, 344.0], [86.0, 346.0], [86.1, 346.0], [86.2, 346.0], [86.3, 347.0], [86.4, 347.0], [86.5, 350.0], [86.6, 350.0], [86.7, 350.0], [86.8, 365.0], [86.9, 365.0], [87.0, 369.0], [87.1, 369.0], [87.2, 369.0], [87.3, 373.0], [87.4, 373.0], [87.5, 387.0], [87.6, 387.0], [87.7, 387.0], [87.8, 392.0], [87.9, 392.0], [88.0, 394.0], [88.1, 394.0], [88.2, 394.0], [88.3, 408.0], [88.4, 408.0], [88.5, 408.0], [88.6, 408.0], [88.7, 408.0], [88.8, 409.0], [88.9, 409.0], [89.0, 413.0], [89.1, 413.0], [89.2, 413.0], [89.3, 413.0], [89.4, 413.0], [89.5, 437.0], [89.6, 437.0], [89.7, 437.0], [89.8, 452.0], [89.9, 452.0], [90.0, 455.0], [90.1, 455.0], [90.2, 455.0], [90.3, 465.0], [90.4, 465.0], [90.5, 470.0], [90.6, 470.0], [90.7, 470.0], [90.8, 472.0], [90.9, 472.0], [91.0, 474.0], [91.1, 474.0], [91.2, 474.0], [91.3, 504.0], [91.4, 504.0], [91.5, 506.0], [91.6, 506.0], [91.7, 506.0], [91.8, 510.0], [91.9, 510.0], [92.0, 511.0], [92.1, 511.0], [92.2, 511.0], [92.3, 520.0], [92.4, 520.0], [92.5, 521.0], [92.6, 521.0], [92.7, 521.0], [92.8, 524.0], [92.9, 524.0], [93.0, 559.0], [93.1, 559.0], [93.2, 559.0], [93.3, 611.0], [93.4, 611.0], [93.5, 669.0], [93.6, 669.0], [93.7, 669.0], [93.8, 678.0], [93.9, 678.0], [94.0, 693.0], [94.1, 693.0], [94.2, 693.0], [94.3, 697.0], [94.4, 697.0], [94.5, 726.0], [94.6, 726.0], [94.7, 726.0], [94.8, 727.0], [94.9, 727.0], [95.0, 733.0], [95.1, 733.0], [95.2, 733.0], [95.3, 780.0], [95.4, 780.0], [95.5, 803.0], [95.6, 803.0], [95.7, 803.0], [95.8, 840.0], [95.9, 840.0], [96.0, 847.0], [96.1, 847.0], [96.2, 847.0], [96.3, 930.0], [96.4, 930.0], [96.5, 945.0], [96.6, 945.0], [96.7, 945.0], [96.8, 982.0], [96.9, 982.0], [97.0, 1038.0], [97.1, 1038.0], [97.2, 1038.0], [97.3, 1081.0], [97.4, 1081.0], [97.5, 1116.0], [97.6, 1116.0], [97.7, 1116.0], [97.8, 1126.0], [97.9, 1126.0], [98.0, 1134.0], [98.1, 1134.0], [98.2, 1134.0], [98.3, 1141.0], [98.4, 1141.0], [98.5, 1201.0], [98.6, 1201.0], [98.7, 1201.0], [98.8, 2372.0], [98.9, 2372.0], [99.0, 2375.0], [99.1, 2375.0], [99.2, 2375.0], [99.3, 2396.0], [99.4, 2396.0], [99.5, 2402.0], [99.6, 2402.0], [99.7, 2402.0], [99.8, 4038.0], [99.9, 4038.0]], "isOverall": false, "label": "4", "isController": false}, {"data": [[0.0, 28.0], [0.1, 30.0], [0.2, 32.0], [0.3, 33.0], [0.4, 43.0], [0.5, 48.0], [0.6, 51.0], [0.7, 51.0], [0.8, 52.0], [0.9, 53.0], [1.0, 54.0], [1.1, 56.0], [1.2, 57.0], [1.3, 58.0], [1.4, 61.0], [1.5, 61.0], [1.6, 62.0], [1.7, 63.0], [1.8, 63.0], [1.9, 66.0], [2.0, 66.0], [2.1, 66.0], [2.2, 69.0], [2.3, 70.0], [2.4, 71.0], [2.5, 72.0], [2.6, 72.0], [2.7, 73.0], [2.8, 76.0], [2.9, 76.0], [3.0, 76.0], [3.1, 76.0], [3.2, 77.0], [3.3, 78.0], [3.4, 80.0], [3.5, 81.0], [3.6, 81.0], [3.7, 83.0], [3.8, 83.0], [3.9, 83.0], [4.0, 84.0], [4.1, 84.0], [4.2, 84.0], [4.3, 85.0], [4.4, 85.0], [4.5, 86.0], [4.6, 86.0], [4.7, 87.0], [4.8, 87.0], [4.9, 87.0], [5.0, 89.0], [5.1, 89.0], [5.2, 89.0], [5.3, 89.0], [5.4, 90.0], [5.5, 92.0], [5.6, 92.0], [5.7, 93.0], [5.8, 93.0], [5.9, 93.0], [6.0, 94.0], [6.1, 94.0], [6.2, 94.0], [6.3, 95.0], [6.4, 95.0], [6.5, 95.0], [6.6, 96.0], [6.7, 96.0], [6.8, 97.0], [6.9, 97.0], [7.0, 98.0], [7.1, 98.0], [7.2, 99.0], [7.3, 99.0], [7.4, 100.0], [7.5, 100.0], [7.6, 100.0], [7.7, 101.0], [7.8, 101.0], [7.9, 101.0], [8.0, 101.0], [8.1, 102.0], [8.2, 102.0], [8.3, 102.0], [8.4, 102.0], [8.5, 103.0], [8.6, 104.0], [8.7, 104.0], [8.8, 104.0], [8.9, 104.0], [9.0, 104.0], [9.1, 104.0], [9.2, 105.0], [9.3, 106.0], [9.4, 106.0], [9.5, 107.0], [9.6, 107.0], [9.7, 108.0], [9.8, 109.0], [9.9, 110.0], [10.0, 110.0], [10.1, 111.0], [10.2, 113.0], [10.3, 113.0], [10.4, 113.0], [10.5, 114.0], [10.6, 114.0], [10.7, 114.0], [10.8, 115.0], [10.9, 115.0], [11.0, 115.0], [11.1, 116.0], [11.2, 116.0], [11.3, 116.0], [11.4, 117.0], [11.5, 118.0], [11.6, 118.0], [11.7, 119.0], [11.8, 119.0], [11.9, 120.0], [12.0, 120.0], [12.1, 120.0], [12.2, 120.0], [12.3, 121.0], [12.4, 121.0], [12.5, 122.0], [12.6, 122.0], [12.7, 123.0], [12.8, 123.0], [12.9, 124.0], [13.0, 125.0], [13.1, 125.0], [13.2, 126.0], [13.3, 126.0], [13.4, 126.0], [13.5, 127.0], [13.6, 127.0], [13.7, 127.0], [13.8, 128.0], [13.9, 128.0], [14.0, 128.0], [14.1, 129.0], [14.2, 130.0], [14.3, 130.0], [14.4, 131.0], [14.5, 132.0], [14.6, 132.0], [14.7, 133.0], [14.8, 133.0], [14.9, 133.0], [15.0, 134.0], [15.1, 134.0], [15.2, 136.0], [15.3, 136.0], [15.4, 136.0], [15.5, 137.0], [15.6, 137.0], [15.7, 137.0], [15.8, 137.0], [15.9, 137.0], [16.0, 137.0], [16.1, 137.0], [16.2, 138.0], [16.3, 138.0], [16.4, 138.0], [16.5, 140.0], [16.6, 140.0], [16.7, 141.0], [16.8, 141.0], [16.9, 142.0], [17.0, 143.0], [17.1, 143.0], [17.2, 143.0], [17.3, 144.0], [17.4, 144.0], [17.5, 145.0], [17.6, 145.0], [17.7, 146.0], [17.8, 146.0], [17.9, 146.0], [18.0, 147.0], [18.1, 148.0], [18.2, 149.0], [18.3, 149.0], [18.4, 151.0], [18.5, 152.0], [18.6, 153.0], [18.7, 154.0], [18.8, 154.0], [18.9, 154.0], [19.0, 155.0], [19.1, 157.0], [19.2, 157.0], [19.3, 157.0], [19.4, 158.0], [19.5, 158.0], [19.6, 158.0], [19.7, 161.0], [19.8, 161.0], [19.9, 161.0], [20.0, 162.0], [20.1, 162.0], [20.2, 163.0], [20.3, 163.0], [20.4, 164.0], [20.5, 164.0], [20.6, 165.0], [20.7, 165.0], [20.8, 166.0], [20.9, 167.0], [21.0, 167.0], [21.1, 167.0], [21.2, 168.0], [21.3, 169.0], [21.4, 171.0], [21.5, 172.0], [21.6, 172.0], [21.7, 173.0], [21.8, 173.0], [21.9, 174.0], [22.0, 175.0], [22.1, 175.0], [22.2, 175.0], [22.3, 175.0], [22.4, 177.0], [22.5, 177.0], [22.6, 178.0], [22.7, 179.0], [22.8, 180.0], [22.9, 182.0], [23.0, 183.0], [23.1, 184.0], [23.2, 184.0], [23.3, 185.0], [23.4, 185.0], [23.5, 185.0], [23.6, 186.0], [23.7, 186.0], [23.8, 188.0], [23.9, 189.0], [24.0, 189.0], [24.1, 191.0], [24.2, 192.0], [24.3, 192.0], [24.4, 194.0], [24.5, 194.0], [24.6, 195.0], [24.7, 195.0], [24.8, 195.0], [24.9, 197.0], [25.0, 197.0], [25.1, 198.0], [25.2, 198.0], [25.3, 198.0], [25.4, 199.0], [25.5, 200.0], [25.6, 201.0], [25.7, 201.0], [25.8, 202.0], [25.9, 204.0], [26.0, 204.0], [26.1, 205.0], [26.2, 207.0], [26.3, 207.0], [26.4, 207.0], [26.5, 207.0], [26.6, 207.0], [26.7, 207.0], [26.8, 208.0], [26.9, 209.0], [27.0, 209.0], [27.1, 210.0], [27.2, 211.0], [27.3, 211.0], [27.4, 211.0], [27.5, 212.0], [27.6, 212.0], [27.7, 212.0], [27.8, 212.0], [27.9, 213.0], [28.0, 213.0], [28.1, 213.0], [28.2, 214.0], [28.3, 215.0], [28.4, 216.0], [28.5, 218.0], [28.6, 218.0], [28.7, 220.0], [28.8, 221.0], [28.9, 222.0], [29.0, 222.0], [29.1, 222.0], [29.2, 225.0], [29.3, 225.0], [29.4, 226.0], [29.5, 226.0], [29.6, 227.0], [29.7, 229.0], [29.8, 229.0], [29.9, 230.0], [30.0, 232.0], [30.1, 233.0], [30.2, 234.0], [30.3, 234.0], [30.4, 234.0], [30.5, 235.0], [30.6, 236.0], [30.7, 236.0], [30.8, 237.0], [30.9, 238.0], [31.0, 239.0], [31.1, 239.0], [31.2, 241.0], [31.3, 241.0], [31.4, 243.0], [31.5, 244.0], [31.6, 245.0], [31.7, 247.0], [31.8, 248.0], [31.9, 250.0], [32.0, 250.0], [32.1, 250.0], [32.2, 252.0], [32.3, 252.0], [32.4, 255.0], [32.5, 256.0], [32.6, 257.0], [32.7, 257.0], [32.8, 257.0], [32.9, 257.0], [33.0, 260.0], [33.1, 260.0], [33.2, 263.0], [33.3, 263.0], [33.4, 263.0], [33.5, 264.0], [33.6, 265.0], [33.7, 265.0], [33.8, 266.0], [33.9, 266.0], [34.0, 266.0], [34.1, 268.0], [34.2, 268.0], [34.3, 269.0], [34.4, 269.0], [34.5, 270.0], [34.6, 270.0], [34.7, 272.0], [34.8, 272.0], [34.9, 273.0], [35.0, 275.0], [35.1, 275.0], [35.2, 275.0], [35.3, 276.0], [35.4, 276.0], [35.5, 277.0], [35.6, 277.0], [35.7, 277.0], [35.8, 278.0], [35.9, 278.0], [36.0, 280.0], [36.1, 281.0], [36.2, 283.0], [36.3, 284.0], [36.4, 284.0], [36.5, 285.0], [36.6, 285.0], [36.7, 286.0], [36.8, 287.0], [36.9, 288.0], [37.0, 289.0], [37.1, 290.0], [37.2, 290.0], [37.3, 291.0], [37.4, 291.0], [37.5, 293.0], [37.6, 293.0], [37.7, 294.0], [37.8, 295.0], [37.9, 295.0], [38.0, 295.0], [38.1, 296.0], [38.2, 296.0], [38.3, 296.0], [38.4, 298.0], [38.5, 299.0], [38.6, 299.0], [38.7, 300.0], [38.8, 300.0], [38.9, 301.0], [39.0, 302.0], [39.1, 302.0], [39.2, 303.0], [39.3, 303.0], [39.4, 304.0], [39.5, 305.0], [39.6, 307.0], [39.7, 307.0], [39.8, 307.0], [39.9, 308.0], [40.0, 308.0], [40.1, 309.0], [40.2, 310.0], [40.3, 310.0], [40.4, 311.0], [40.5, 312.0], [40.6, 313.0], [40.7, 313.0], [40.8, 313.0], [40.9, 314.0], [41.0, 318.0], [41.1, 319.0], [41.2, 319.0], [41.3, 319.0], [41.4, 320.0], [41.5, 320.0], [41.6, 320.0], [41.7, 322.0], [41.8, 322.0], [41.9, 323.0], [42.0, 324.0], [42.1, 324.0], [42.2, 324.0], [42.3, 325.0], [42.4, 325.0], [42.5, 326.0], [42.6, 326.0], [42.7, 328.0], [42.8, 330.0], [42.9, 330.0], [43.0, 331.0], [43.1, 332.0], [43.2, 333.0], [43.3, 333.0], [43.4, 336.0], [43.5, 336.0], [43.6, 336.0], [43.7, 337.0], [43.8, 337.0], [43.9, 338.0], [44.0, 338.0], [44.1, 339.0], [44.2, 339.0], [44.3, 340.0], [44.4, 341.0], [44.5, 342.0], [44.6, 342.0], [44.7, 343.0], [44.8, 343.0], [44.9, 346.0], [45.0, 346.0], [45.1, 346.0], [45.2, 348.0], [45.3, 348.0], [45.4, 348.0], [45.5, 350.0], [45.6, 350.0], [45.7, 351.0], [45.8, 352.0], [45.9, 353.0], [46.0, 354.0], [46.1, 354.0], [46.2, 355.0], [46.3, 355.0], [46.4, 357.0], [46.5, 358.0], [46.6, 358.0], [46.7, 359.0], [46.8, 360.0], [46.9, 362.0], [47.0, 363.0], [47.1, 364.0], [47.2, 364.0], [47.3, 365.0], [47.4, 365.0], [47.5, 365.0], [47.6, 366.0], [47.7, 367.0], [47.8, 368.0], [47.9, 369.0], [48.0, 369.0], [48.1, 369.0], [48.2, 370.0], [48.3, 370.0], [48.4, 371.0], [48.5, 372.0], [48.6, 372.0], [48.7, 372.0], [48.8, 372.0], [48.9, 374.0], [49.0, 375.0], [49.1, 375.0], [49.2, 376.0], [49.3, 376.0], [49.4, 377.0], [49.5, 379.0], [49.6, 380.0], [49.7, 380.0], [49.8, 380.0], [49.9, 381.0], [50.0, 381.0], [50.1, 381.0], [50.2, 383.0], [50.3, 383.0], [50.4, 384.0], [50.5, 385.0], [50.6, 385.0], [50.7, 386.0], [50.8, 387.0], [50.9, 387.0], [51.0, 387.0], [51.1, 388.0], [51.2, 389.0], [51.3, 389.0], [51.4, 389.0], [51.5, 390.0], [51.6, 390.0], [51.7, 391.0], [51.8, 391.0], [51.9, 392.0], [52.0, 393.0], [52.1, 394.0], [52.2, 395.0], [52.3, 395.0], [52.4, 396.0], [52.5, 397.0], [52.6, 397.0], [52.7, 399.0], [52.8, 399.0], [52.9, 400.0], [53.0, 403.0], [53.1, 404.0], [53.2, 405.0], [53.3, 405.0], [53.4, 407.0], [53.5, 408.0], [53.6, 408.0], [53.7, 410.0], [53.8, 411.0], [53.9, 411.0], [54.0, 414.0], [54.1, 415.0], [54.2, 417.0], [54.3, 417.0], [54.4, 418.0], [54.5, 418.0], [54.6, 419.0], [54.7, 421.0], [54.8, 421.0], [54.9, 422.0], [55.0, 422.0], [55.1, 426.0], [55.2, 426.0], [55.3, 427.0], [55.4, 428.0], [55.5, 429.0], [55.6, 431.0], [55.7, 431.0], [55.8, 432.0], [55.9, 432.0], [56.0, 434.0], [56.1, 435.0], [56.2, 437.0], [56.3, 438.0], [56.4, 438.0], [56.5, 439.0], [56.6, 442.0], [56.7, 442.0], [56.8, 442.0], [56.9, 443.0], [57.0, 444.0], [57.1, 445.0], [57.2, 446.0], [57.3, 446.0], [57.4, 448.0], [57.5, 448.0], [57.6, 449.0], [57.7, 450.0], [57.8, 450.0], [57.9, 452.0], [58.0, 453.0], [58.1, 453.0], [58.2, 454.0], [58.3, 454.0], [58.4, 457.0], [58.5, 458.0], [58.6, 460.0], [58.7, 461.0], [58.8, 462.0], [58.9, 463.0], [59.0, 463.0], [59.1, 464.0], [59.2, 465.0], [59.3, 466.0], [59.4, 469.0], [59.5, 469.0], [59.6, 469.0], [59.7, 470.0], [59.8, 472.0], [59.9, 473.0], [60.0, 474.0], [60.1, 475.0], [60.2, 476.0], [60.3, 477.0], [60.4, 480.0], [60.5, 480.0], [60.6, 482.0], [60.7, 483.0], [60.8, 484.0], [60.9, 485.0], [61.0, 488.0], [61.1, 488.0], [61.2, 490.0], [61.3, 490.0], [61.4, 492.0], [61.5, 493.0], [61.6, 494.0], [61.7, 494.0], [61.8, 495.0], [61.9, 496.0], [62.0, 500.0], [62.1, 500.0], [62.2, 502.0], [62.3, 502.0], [62.4, 504.0], [62.5, 507.0], [62.6, 508.0], [62.7, 513.0], [62.8, 513.0], [62.9, 515.0], [63.0, 515.0], [63.1, 517.0], [63.2, 517.0], [63.3, 518.0], [63.4, 520.0], [63.5, 521.0], [63.6, 522.0], [63.7, 524.0], [63.8, 525.0], [63.9, 527.0], [64.0, 529.0], [64.1, 530.0], [64.2, 531.0], [64.3, 531.0], [64.4, 536.0], [64.5, 537.0], [64.6, 538.0], [64.7, 539.0], [64.8, 539.0], [64.9, 542.0], [65.0, 543.0], [65.1, 543.0], [65.2, 546.0], [65.3, 546.0], [65.4, 549.0], [65.5, 552.0], [65.6, 553.0], [65.7, 556.0], [65.8, 556.0], [65.9, 557.0], [66.0, 561.0], [66.1, 563.0], [66.2, 566.0], [66.3, 567.0], [66.4, 568.0], [66.5, 570.0], [66.6, 571.0], [66.7, 572.0], [66.8, 574.0], [66.9, 575.0], [67.0, 577.0], [67.1, 578.0], [67.2, 582.0], [67.3, 584.0], [67.4, 590.0], [67.5, 593.0], [67.6, 594.0], [67.7, 594.0], [67.8, 596.0], [67.9, 597.0], [68.0, 598.0], [68.1, 599.0], [68.2, 603.0], [68.3, 605.0], [68.4, 607.0], [68.5, 609.0], [68.6, 610.0], [68.7, 610.0], [68.8, 612.0], [68.9, 612.0], [69.0, 618.0], [69.1, 622.0], [69.2, 622.0], [69.3, 623.0], [69.4, 625.0], [69.5, 626.0], [69.6, 631.0], [69.7, 632.0], [69.8, 634.0], [69.9, 636.0], [70.0, 638.0], [70.1, 639.0], [70.2, 643.0], [70.3, 647.0], [70.4, 649.0], [70.5, 649.0], [70.6, 652.0], [70.7, 655.0], [70.8, 657.0], [70.9, 660.0], [71.0, 667.0], [71.1, 670.0], [71.2, 670.0], [71.3, 671.0], [71.4, 673.0], [71.5, 676.0], [71.6, 676.0], [71.7, 678.0], [71.8, 678.0], [71.9, 684.0], [72.0, 690.0], [72.1, 695.0], [72.2, 697.0], [72.3, 697.0], [72.4, 699.0], [72.5, 699.0], [72.6, 703.0], [72.7, 708.0], [72.8, 710.0], [72.9, 713.0], [73.0, 715.0], [73.1, 719.0], [73.2, 720.0], [73.3, 722.0], [73.4, 726.0], [73.5, 730.0], [73.6, 730.0], [73.7, 734.0], [73.8, 737.0], [73.9, 740.0], [74.0, 743.0], [74.1, 743.0], [74.2, 748.0], [74.3, 749.0], [74.4, 750.0], [74.5, 755.0], [74.6, 757.0], [74.7, 759.0], [74.8, 762.0], [74.9, 764.0], [75.0, 767.0], [75.1, 767.0], [75.2, 768.0], [75.3, 769.0], [75.4, 772.0], [75.5, 774.0], [75.6, 775.0], [75.7, 778.0], [75.8, 779.0], [75.9, 780.0], [76.0, 783.0], [76.1, 783.0], [76.2, 785.0], [76.3, 787.0], [76.4, 788.0], [76.5, 790.0], [76.6, 791.0], [76.7, 795.0], [76.8, 796.0], [76.9, 800.0], [77.0, 802.0], [77.1, 803.0], [77.2, 809.0], [77.3, 810.0], [77.4, 813.0], [77.5, 817.0], [77.6, 819.0], [77.7, 819.0], [77.8, 823.0], [77.9, 827.0], [78.0, 829.0], [78.1, 829.0], [78.2, 831.0], [78.3, 834.0], [78.4, 835.0], [78.5, 837.0], [78.6, 839.0], [78.7, 844.0], [78.8, 851.0], [78.9, 851.0], [79.0, 852.0], [79.1, 852.0], [79.2, 854.0], [79.3, 855.0], [79.4, 865.0], [79.5, 870.0], [79.6, 870.0], [79.7, 873.0], [79.8, 874.0], [79.9, 877.0], [80.0, 883.0], [80.1, 886.0], [80.2, 890.0], [80.3, 893.0], [80.4, 895.0], [80.5, 901.0], [80.6, 902.0], [80.7, 903.0], [80.8, 904.0], [80.9, 906.0], [81.0, 916.0], [81.1, 919.0], [81.2, 923.0], [81.3, 923.0], [81.4, 926.0], [81.5, 930.0], [81.6, 930.0], [81.7, 937.0], [81.8, 940.0], [81.9, 942.0], [82.0, 946.0], [82.1, 947.0], [82.2, 961.0], [82.3, 961.0], [82.4, 965.0], [82.5, 972.0], [82.6, 973.0], [82.7, 978.0], [82.8, 981.0], [82.9, 985.0], [83.0, 990.0], [83.1, 990.0], [83.2, 996.0], [83.3, 1002.0], [83.4, 1005.0], [83.5, 1010.0], [83.6, 1010.0], [83.7, 1015.0], [83.8, 1016.0], [83.9, 1027.0], [84.0, 1031.0], [84.1, 1038.0], [84.2, 1043.0], [84.3, 1043.0], [84.4, 1052.0], [84.5, 1053.0], [84.6, 1057.0], [84.7, 1072.0], [84.8, 1075.0], [84.9, 1078.0], [85.0, 1084.0], [85.1, 1088.0], [85.2, 1092.0], [85.3, 1098.0], [85.4, 1106.0], [85.5, 1123.0], [85.6, 1127.0], [85.7, 1135.0], [85.8, 1136.0], [85.9, 1144.0], [86.0, 1158.0], [86.1, 1161.0], [86.2, 1166.0], [86.3, 1173.0], [86.4, 1190.0], [86.5, 1195.0], [86.6, 1198.0], [86.7, 1228.0], [86.8, 1231.0], [86.9, 1240.0], [87.0, 1244.0], [87.1, 1248.0], [87.2, 1259.0], [87.3, 1282.0], [87.4, 1311.0], [87.5, 1315.0], [87.6, 1316.0], [87.7, 1327.0], [87.8, 1360.0], [87.9, 1378.0], [88.0, 1396.0], [88.1, 1397.0], [88.2, 1402.0], [88.3, 1403.0], [88.4, 1413.0], [88.5, 1431.0], [88.6, 1432.0], [88.7, 1447.0], [88.8, 1470.0], [88.9, 1484.0], [89.0, 1501.0], [89.1, 1576.0], [89.2, 1600.0], [89.3, 1611.0], [89.4, 1623.0], [89.5, 1642.0], [89.6, 1642.0], [89.7, 1665.0], [89.8, 1670.0], [89.9, 1685.0], [90.0, 1689.0], [90.1, 1692.0], [90.2, 1693.0], [90.3, 1697.0], [90.4, 1703.0], [90.5, 1707.0], [90.6, 1717.0], [90.7, 1741.0], [90.8, 1747.0], [90.9, 1758.0], [91.0, 1796.0], [91.1, 1803.0], [91.2, 1814.0], [91.3, 1823.0], [91.4, 1839.0], [91.5, 1864.0], [91.6, 1865.0], [91.7, 1873.0], [91.8, 1877.0], [91.9, 1894.0], [92.0, 1899.0], [92.1, 1900.0], [92.2, 1919.0], [92.3, 1919.0], [92.4, 1949.0], [92.5, 1961.0], [92.6, 1963.0], [92.7, 1976.0], [92.8, 1982.0], [92.9, 2021.0], [93.0, 2036.0], [93.1, 2059.0], [93.2, 2089.0], [93.3, 2104.0], [93.4, 2138.0], [93.5, 2162.0], [93.6, 2164.0], [93.7, 2190.0], [93.8, 2204.0], [93.9, 2222.0], [94.0, 2247.0], [94.1, 2250.0], [94.2, 2257.0], [94.3, 2262.0], [94.4, 2282.0], [94.5, 2308.0], [94.6, 2313.0], [94.7, 2327.0], [94.8, 2333.0], [94.9, 2352.0], [95.0, 2357.0], [95.1, 2391.0], [95.2, 2435.0], [95.3, 2436.0], [95.4, 2451.0], [95.5, 2466.0], [95.6, 2480.0], [95.7, 2493.0], [95.8, 2520.0], [95.9, 2536.0], [96.0, 2545.0], [96.1, 2554.0], [96.2, 2558.0], [96.3, 2607.0], [96.4, 2682.0], [96.5, 2706.0], [96.6, 2718.0], [96.7, 2731.0], [96.8, 2751.0], [96.9, 2842.0], [97.0, 2909.0], [97.1, 2980.0], [97.2, 3008.0], [97.3, 3073.0], [97.4, 3082.0], [97.5, 3143.0], [97.6, 3362.0], [97.7, 3439.0], [97.8, 3478.0], [97.9, 3575.0], [98.0, 3654.0], [98.1, 3673.0], [98.2, 3708.0], [98.3, 3722.0], [98.4, 3903.0], [98.5, 4146.0], [98.6, 4194.0], [98.7, 4410.0], [98.8, 4670.0], [98.9, 4894.0], [99.0, 5258.0], [99.1, 5365.0], [99.2, 5523.0], [99.3, 5865.0], [99.4, 6026.0], [99.5, 7011.0], [99.6, 7182.0], [99.7, 7915.0], [99.8, 8884.0], [99.9, 15603.0]], "isOverall": false, "label": "16", "isController": false}, {"data": [[0.0, 30.0], [0.1, 30.0], [0.2, 31.0], [0.3, 32.0], [0.4, 32.0], [0.5, 32.0], [0.6, 32.0], [0.7, 34.0], [0.8, 36.0], [0.9, 37.0], [1.0, 37.0], [1.1, 37.0], [1.2, 38.0], [1.3, 38.0], [1.4, 38.0], [1.5, 39.0], [1.6, 39.0], [1.7, 40.0], [1.8, 40.0], [1.9, 41.0], [2.0, 41.0], [2.1, 41.0], [2.2, 41.0], [2.3, 41.0], [2.4, 41.0], [2.5, 41.0], [2.6, 41.0], [2.7, 41.0], [2.8, 42.0], [2.9, 42.0], [3.0, 42.0], [3.1, 42.0], [3.2, 42.0], [3.3, 43.0], [3.4, 43.0], [3.5, 43.0], [3.6, 43.0], [3.7, 44.0], [3.8, 45.0], [3.9, 46.0], [4.0, 47.0], [4.1, 47.0], [4.2, 48.0], [4.3, 48.0], [4.4, 49.0], [4.5, 49.0], [4.6, 49.0], [4.7, 50.0], [4.8, 50.0], [4.9, 50.0], [5.0, 50.0], [5.1, 50.0], [5.2, 51.0], [5.3, 51.0], [5.4, 51.0], [5.5, 52.0], [5.6, 52.0], [5.7, 52.0], [5.8, 52.0], [5.9, 53.0], [6.0, 53.0], [6.1, 53.0], [6.2, 53.0], [6.3, 54.0], [6.4, 54.0], [6.5, 54.0], [6.6, 54.0], [6.7, 54.0], [6.8, 55.0], [6.9, 56.0], [7.0, 56.0], [7.1, 56.0], [7.2, 57.0], [7.3, 57.0], [7.4, 57.0], [7.5, 57.0], [7.6, 57.0], [7.7, 57.0], [7.8, 58.0], [7.9, 58.0], [8.0, 58.0], [8.1, 58.0], [8.2, 59.0], [8.3, 59.0], [8.4, 60.0], [8.5, 60.0], [8.6, 60.0], [8.7, 60.0], [8.8, 61.0], [8.9, 61.0], [9.0, 61.0], [9.1, 61.0], [9.2, 61.0], [9.3, 63.0], [9.4, 64.0], [9.5, 64.0], [9.6, 64.0], [9.7, 64.0], [9.8, 64.0], [9.9, 64.0], [10.0, 66.0], [10.1, 66.0], [10.2, 66.0], [10.3, 67.0], [10.4, 68.0], [10.5, 68.0], [10.6, 68.0], [10.7, 68.0], [10.8, 69.0], [10.9, 69.0], [11.0, 70.0], [11.1, 70.0], [11.2, 70.0], [11.3, 70.0], [11.4, 71.0], [11.5, 71.0], [11.6, 71.0], [11.7, 72.0], [11.8, 72.0], [11.9, 72.0], [12.0, 72.0], [12.1, 72.0], [12.2, 72.0], [12.3, 73.0], [12.4, 73.0], [12.5, 73.0], [12.6, 73.0], [12.7, 73.0], [12.8, 74.0], [12.9, 74.0], [13.0, 75.0], [13.1, 75.0], [13.2, 75.0], [13.3, 76.0], [13.4, 76.0], [13.5, 76.0], [13.6, 76.0], [13.7, 77.0], [13.8, 77.0], [13.9, 78.0], [14.0, 79.0], [14.1, 79.0], [14.2, 79.0], [14.3, 79.0], [14.4, 79.0], [14.5, 79.0], [14.6, 79.0], [14.7, 80.0], [14.8, 80.0], [14.9, 81.0], [15.0, 81.0], [15.1, 81.0], [15.2, 81.0], [15.3, 82.0], [15.4, 82.0], [15.5, 82.0], [15.6, 82.0], [15.7, 82.0], [15.8, 82.0], [15.9, 83.0], [16.0, 83.0], [16.1, 83.0], [16.2, 83.0], [16.3, 84.0], [16.4, 84.0], [16.5, 84.0], [16.6, 84.0], [16.7, 85.0], [16.8, 85.0], [16.9, 85.0], [17.0, 85.0], [17.1, 85.0], [17.2, 86.0], [17.3, 86.0], [17.4, 86.0], [17.5, 87.0], [17.6, 87.0], [17.7, 87.0], [17.8, 87.0], [17.9, 87.0], [18.0, 87.0], [18.1, 87.0], [18.2, 87.0], [18.3, 88.0], [18.4, 88.0], [18.5, 88.0], [18.6, 88.0], [18.7, 89.0], [18.8, 90.0], [18.9, 90.0], [19.0, 91.0], [19.1, 91.0], [19.2, 91.0], [19.3, 91.0], [19.4, 91.0], [19.5, 92.0], [19.6, 92.0], [19.7, 92.0], [19.8, 92.0], [19.9, 92.0], [20.0, 92.0], [20.1, 92.0], [20.2, 92.0], [20.3, 93.0], [20.4, 93.0], [20.5, 95.0], [20.6, 95.0], [20.7, 95.0], [20.8, 95.0], [20.9, 96.0], [21.0, 96.0], [21.1, 96.0], [21.2, 97.0], [21.3, 97.0], [21.4, 98.0], [21.5, 98.0], [21.6, 98.0], [21.7, 98.0], [21.8, 99.0], [21.9, 100.0], [22.0, 100.0], [22.1, 100.0], [22.2, 100.0], [22.3, 100.0], [22.4, 100.0], [22.5, 100.0], [22.6, 100.0], [22.7, 100.0], [22.8, 101.0], [22.9, 101.0], [23.0, 102.0], [23.1, 102.0], [23.2, 103.0], [23.3, 103.0], [23.4, 103.0], [23.5, 104.0], [23.6, 104.0], [23.7, 104.0], [23.8, 104.0], [23.9, 105.0], [24.0, 105.0], [24.1, 105.0], [24.2, 105.0], [24.3, 108.0], [24.4, 108.0], [24.5, 108.0], [24.6, 108.0], [24.7, 109.0], [24.8, 109.0], [24.9, 109.0], [25.0, 109.0], [25.1, 109.0], [25.2, 109.0], [25.3, 109.0], [25.4, 109.0], [25.5, 110.0], [25.6, 110.0], [25.7, 111.0], [25.8, 112.0], [25.9, 112.0], [26.0, 112.0], [26.1, 112.0], [26.2, 112.0], [26.3, 113.0], [26.4, 113.0], [26.5, 113.0], [26.6, 113.0], [26.7, 114.0], [26.8, 114.0], [26.9, 114.0], [27.0, 114.0], [27.1, 114.0], [27.2, 115.0], [27.3, 115.0], [27.4, 115.0], [27.5, 116.0], [27.6, 116.0], [27.7, 116.0], [27.8, 117.0], [27.9, 117.0], [28.0, 117.0], [28.1, 117.0], [28.2, 118.0], [28.3, 118.0], [28.4, 119.0], [28.5, 119.0], [28.6, 119.0], [28.7, 119.0], [28.8, 121.0], [28.9, 121.0], [29.0, 121.0], [29.1, 121.0], [29.2, 122.0], [29.3, 122.0], [29.4, 122.0], [29.5, 122.0], [29.6, 122.0], [29.7, 123.0], [29.8, 123.0], [29.9, 123.0], [30.0, 124.0], [30.1, 124.0], [30.2, 125.0], [30.3, 125.0], [30.4, 126.0], [30.5, 126.0], [30.6, 126.0], [30.7, 126.0], [30.8, 127.0], [30.9, 127.0], [31.0, 127.0], [31.1, 127.0], [31.2, 128.0], [31.3, 129.0], [31.4, 129.0], [31.5, 129.0], [31.6, 129.0], [31.7, 130.0], [31.8, 130.0], [31.9, 130.0], [32.0, 131.0], [32.1, 131.0], [32.2, 131.0], [32.3, 132.0], [32.4, 132.0], [32.5, 133.0], [32.6, 133.0], [32.7, 133.0], [32.8, 133.0], [32.9, 133.0], [33.0, 133.0], [33.1, 133.0], [33.2, 134.0], [33.3, 134.0], [33.4, 135.0], [33.5, 135.0], [33.6, 135.0], [33.7, 135.0], [33.8, 135.0], [33.9, 136.0], [34.0, 136.0], [34.1, 136.0], [34.2, 136.0], [34.3, 136.0], [34.4, 137.0], [34.5, 137.0], [34.6, 137.0], [34.7, 138.0], [34.8, 139.0], [34.9, 139.0], [35.0, 140.0], [35.1, 140.0], [35.2, 140.0], [35.3, 140.0], [35.4, 140.0], [35.5, 141.0], [35.6, 141.0], [35.7, 141.0], [35.8, 141.0], [35.9, 141.0], [36.0, 142.0], [36.1, 142.0], [36.2, 142.0], [36.3, 143.0], [36.4, 143.0], [36.5, 143.0], [36.6, 143.0], [36.7, 143.0], [36.8, 144.0], [36.9, 144.0], [37.0, 144.0], [37.1, 144.0], [37.2, 145.0], [37.3, 145.0], [37.4, 145.0], [37.5, 146.0], [37.6, 146.0], [37.7, 146.0], [37.8, 146.0], [37.9, 147.0], [38.0, 147.0], [38.1, 147.0], [38.2, 148.0], [38.3, 148.0], [38.4, 149.0], [38.5, 149.0], [38.6, 149.0], [38.7, 150.0], [38.8, 151.0], [38.9, 152.0], [39.0, 152.0], [39.1, 152.0], [39.2, 152.0], [39.3, 153.0], [39.4, 153.0], [39.5, 153.0], [39.6, 153.0], [39.7, 153.0], [39.8, 153.0], [39.9, 154.0], [40.0, 154.0], [40.1, 154.0], [40.2, 155.0], [40.3, 155.0], [40.4, 155.0], [40.5, 156.0], [40.6, 156.0], [40.7, 156.0], [40.8, 156.0], [40.9, 157.0], [41.0, 157.0], [41.1, 157.0], [41.2, 157.0], [41.3, 160.0], [41.4, 160.0], [41.5, 161.0], [41.6, 161.0], [41.7, 161.0], [41.8, 161.0], [41.9, 161.0], [42.0, 162.0], [42.1, 162.0], [42.2, 162.0], [42.3, 162.0], [42.4, 162.0], [42.5, 163.0], [42.6, 163.0], [42.7, 164.0], [42.8, 164.0], [42.9, 167.0], [43.0, 167.0], [43.1, 167.0], [43.2, 168.0], [43.3, 168.0], [43.4, 169.0], [43.5, 169.0], [43.6, 169.0], [43.7, 170.0], [43.8, 170.0], [43.9, 170.0], [44.0, 170.0], [44.1, 170.0], [44.2, 170.0], [44.3, 171.0], [44.4, 172.0], [44.5, 172.0], [44.6, 172.0], [44.7, 173.0], [44.8, 173.0], [44.9, 173.0], [45.0, 174.0], [45.1, 174.0], [45.2, 174.0], [45.3, 174.0], [45.4, 175.0], [45.5, 175.0], [45.6, 175.0], [45.7, 175.0], [45.8, 175.0], [45.9, 175.0], [46.0, 175.0], [46.1, 175.0], [46.2, 176.0], [46.3, 176.0], [46.4, 177.0], [46.5, 177.0], [46.6, 177.0], [46.7, 177.0], [46.8, 178.0], [46.9, 178.0], [47.0, 179.0], [47.1, 179.0], [47.2, 179.0], [47.3, 180.0], [47.4, 180.0], [47.5, 181.0], [47.6, 181.0], [47.7, 182.0], [47.8, 182.0], [47.9, 182.0], [48.0, 183.0], [48.1, 183.0], [48.2, 183.0], [48.3, 183.0], [48.4, 184.0], [48.5, 184.0], [48.6, 184.0], [48.7, 186.0], [48.8, 186.0], [48.9, 186.0], [49.0, 189.0], [49.1, 189.0], [49.2, 189.0], [49.3, 189.0], [49.4, 189.0], [49.5, 190.0], [49.6, 190.0], [49.7, 190.0], [49.8, 191.0], [49.9, 191.0], [50.0, 191.0], [50.1, 191.0], [50.2, 191.0], [50.3, 191.0], [50.4, 192.0], [50.5, 193.0], [50.6, 193.0], [50.7, 194.0], [50.8, 195.0], [50.9, 195.0], [51.0, 197.0], [51.1, 197.0], [51.2, 197.0], [51.3, 197.0], [51.4, 197.0], [51.5, 198.0], [51.6, 198.0], [51.7, 198.0], [51.8, 199.0], [51.9, 200.0], [52.0, 200.0], [52.1, 200.0], [52.2, 201.0], [52.3, 201.0], [52.4, 202.0], [52.5, 204.0], [52.6, 204.0], [52.7, 204.0], [52.8, 204.0], [52.9, 204.0], [53.0, 205.0], [53.1, 205.0], [53.2, 206.0], [53.3, 206.0], [53.4, 208.0], [53.5, 209.0], [53.6, 209.0], [53.7, 209.0], [53.8, 209.0], [53.9, 209.0], [54.0, 210.0], [54.1, 210.0], [54.2, 211.0], [54.3, 211.0], [54.4, 214.0], [54.5, 214.0], [54.6, 214.0], [54.7, 215.0], [54.8, 216.0], [54.9, 216.0], [55.0, 217.0], [55.1, 217.0], [55.2, 217.0], [55.3, 218.0], [55.4, 218.0], [55.5, 218.0], [55.6, 218.0], [55.7, 219.0], [55.8, 219.0], [55.9, 220.0], [56.0, 220.0], [56.1, 220.0], [56.2, 220.0], [56.3, 222.0], [56.4, 222.0], [56.5, 222.0], [56.6, 222.0], [56.7, 224.0], [56.8, 224.0], [56.9, 226.0], [57.0, 227.0], [57.1, 227.0], [57.2, 227.0], [57.3, 227.0], [57.4, 228.0], [57.5, 228.0], [57.6, 228.0], [57.7, 228.0], [57.8, 229.0], [57.9, 229.0], [58.0, 230.0], [58.1, 230.0], [58.2, 230.0], [58.3, 230.0], [58.4, 232.0], [58.5, 234.0], [58.6, 234.0], [58.7, 235.0], [58.8, 235.0], [58.9, 236.0], [59.0, 238.0], [59.1, 238.0], [59.2, 238.0], [59.3, 239.0], [59.4, 240.0], [59.5, 242.0], [59.6, 242.0], [59.7, 243.0], [59.8, 246.0], [59.9, 246.0], [60.0, 247.0], [60.1, 247.0], [60.2, 248.0], [60.3, 248.0], [60.4, 249.0], [60.5, 250.0], [60.6, 250.0], [60.7, 251.0], [60.8, 252.0], [60.9, 252.0], [61.0, 253.0], [61.1, 253.0], [61.2, 254.0], [61.3, 255.0], [61.4, 257.0], [61.5, 257.0], [61.6, 257.0], [61.7, 259.0], [61.8, 259.0], [61.9, 260.0], [62.0, 260.0], [62.1, 260.0], [62.2, 261.0], [62.3, 262.0], [62.4, 262.0], [62.5, 263.0], [62.6, 263.0], [62.7, 264.0], [62.8, 264.0], [62.9, 265.0], [63.0, 265.0], [63.1, 265.0], [63.2, 266.0], [63.3, 267.0], [63.4, 267.0], [63.5, 270.0], [63.6, 270.0], [63.7, 270.0], [63.8, 271.0], [63.9, 271.0], [64.0, 273.0], [64.1, 273.0], [64.2, 273.0], [64.3, 277.0], [64.4, 277.0], [64.5, 277.0], [64.6, 277.0], [64.7, 279.0], [64.8, 280.0], [64.9, 281.0], [65.0, 283.0], [65.1, 283.0], [65.2, 283.0], [65.3, 285.0], [65.4, 286.0], [65.5, 286.0], [65.6, 286.0], [65.7, 287.0], [65.8, 287.0], [65.9, 288.0], [66.0, 289.0], [66.1, 289.0], [66.2, 289.0], [66.3, 290.0], [66.4, 292.0], [66.5, 292.0], [66.6, 292.0], [66.7, 292.0], [66.8, 294.0], [66.9, 294.0], [67.0, 295.0], [67.1, 295.0], [67.2, 296.0], [67.3, 298.0], [67.4, 299.0], [67.5, 299.0], [67.6, 299.0], [67.7, 301.0], [67.8, 302.0], [67.9, 303.0], [68.0, 303.0], [68.1, 303.0], [68.2, 305.0], [68.3, 307.0], [68.4, 308.0], [68.5, 309.0], [68.6, 309.0], [68.7, 310.0], [68.8, 311.0], [68.9, 313.0], [69.0, 314.0], [69.1, 314.0], [69.2, 317.0], [69.3, 318.0], [69.4, 324.0], [69.5, 327.0], [69.6, 327.0], [69.7, 327.0], [69.8, 329.0], [69.9, 338.0], [70.0, 340.0], [70.1, 340.0], [70.2, 342.0], [70.3, 342.0], [70.4, 346.0], [70.5, 347.0], [70.6, 347.0], [70.7, 347.0], [70.8, 348.0], [70.9, 356.0], [71.0, 357.0], [71.1, 357.0], [71.2, 357.0], [71.3, 358.0], [71.4, 360.0], [71.5, 362.0], [71.6, 362.0], [71.7, 366.0], [71.8, 366.0], [71.9, 367.0], [72.0, 369.0], [72.1, 369.0], [72.2, 369.0], [72.3, 370.0], [72.4, 371.0], [72.5, 371.0], [72.6, 371.0], [72.7, 372.0], [72.8, 372.0], [72.9, 373.0], [73.0, 374.0], [73.1, 374.0], [73.2, 375.0], [73.3, 377.0], [73.4, 378.0], [73.5, 378.0], [73.6, 378.0], [73.7, 379.0], [73.8, 382.0], [73.9, 382.0], [74.0, 383.0], [74.1, 383.0], [74.2, 386.0], [74.3, 388.0], [74.4, 388.0], [74.5, 389.0], [74.6, 389.0], [74.7, 390.0], [74.8, 392.0], [74.9, 394.0], [75.0, 397.0], [75.1, 397.0], [75.2, 397.0], [75.3, 397.0], [75.4, 398.0], [75.5, 400.0], [75.6, 400.0], [75.7, 400.0], [75.8, 402.0], [75.9, 403.0], [76.0, 405.0], [76.1, 405.0], [76.2, 409.0], [76.3, 414.0], [76.4, 417.0], [76.5, 417.0], [76.6, 417.0], [76.7, 419.0], [76.8, 419.0], [76.9, 421.0], [77.0, 422.0], [77.1, 422.0], [77.2, 422.0], [77.3, 429.0], [77.4, 431.0], [77.5, 437.0], [77.6, 437.0], [77.7, 438.0], [77.8, 439.0], [77.9, 441.0], [78.0, 444.0], [78.1, 444.0], [78.2, 449.0], [78.3, 450.0], [78.4, 456.0], [78.5, 456.0], [78.6, 456.0], [78.7, 458.0], [78.8, 460.0], [78.9, 460.0], [79.0, 463.0], [79.1, 463.0], [79.2, 464.0], [79.3, 469.0], [79.4, 470.0], [79.5, 470.0], [79.6, 470.0], [79.7, 474.0], [79.8, 474.0], [79.9, 476.0], [80.0, 476.0], [80.1, 476.0], [80.2, 479.0], [80.3, 479.0], [80.4, 484.0], [80.5, 484.0], [80.6, 484.0], [80.7, 485.0], [80.8, 485.0], [80.9, 489.0], [81.0, 490.0], [81.1, 490.0], [81.2, 492.0], [81.3, 494.0], [81.4, 494.0], [81.5, 494.0], [81.6, 494.0], [81.7, 495.0], [81.8, 496.0], [81.9, 496.0], [82.0, 500.0], [82.1, 500.0], [82.2, 503.0], [82.3, 507.0], [82.4, 511.0], [82.5, 513.0], [82.6, 513.0], [82.7, 515.0], [82.8, 515.0], [82.9, 516.0], [83.0, 517.0], [83.1, 517.0], [83.2, 520.0], [83.3, 524.0], [83.4, 526.0], [83.5, 527.0], [83.6, 527.0], [83.7, 527.0], [83.8, 528.0], [83.9, 532.0], [84.0, 537.0], [84.1, 537.0], [84.2, 540.0], [84.3, 543.0], [84.4, 550.0], [84.5, 553.0], [84.6, 553.0], [84.7, 559.0], [84.8, 563.0], [84.9, 567.0], [85.0, 567.0], [85.1, 567.0], [85.2, 568.0], [85.3, 570.0], [85.4, 575.0], [85.5, 581.0], [85.6, 581.0], [85.7, 582.0], [85.8, 587.0], [85.9, 588.0], [86.0, 592.0], [86.1, 592.0], [86.2, 602.0], [86.3, 602.0], [86.4, 609.0], [86.5, 612.0], [86.6, 612.0], [86.7, 627.0], [86.8, 630.0], [86.9, 632.0], [87.0, 636.0], [87.1, 636.0], [87.2, 638.0], [87.3, 640.0], [87.4, 641.0], [87.5, 646.0], [87.6, 646.0], [87.7, 651.0], [87.8, 653.0], [87.9, 655.0], [88.0, 667.0], [88.1, 667.0], [88.2, 680.0], [88.3, 682.0], [88.4, 688.0], [88.5, 688.0], [88.6, 688.0], [88.7, 690.0], [88.8, 695.0], [88.9, 696.0], [89.0, 697.0], [89.1, 697.0], [89.2, 700.0], [89.3, 729.0], [89.4, 743.0], [89.5, 759.0], [89.6, 759.0], [89.7, 760.0], [89.8, 762.0], [89.9, 762.0], [90.0, 776.0], [90.1, 776.0], [90.2, 786.0], [90.3, 788.0], [90.4, 799.0], [90.5, 802.0], [90.6, 802.0], [90.7, 809.0], [90.8, 814.0], [90.9, 841.0], [91.0, 865.0], [91.1, 865.0], [91.2, 869.0], [91.3, 875.0], [91.4, 891.0], [91.5, 927.0], [91.6, 927.0], [91.7, 928.0], [91.8, 938.0], [91.9, 944.0], [92.0, 948.0], [92.1, 948.0], [92.2, 950.0], [92.3, 964.0], [92.4, 989.0], [92.5, 990.0], [92.6, 990.0], [92.7, 993.0], [92.8, 996.0], [92.9, 1057.0], [93.0, 1068.0], [93.1, 1068.0], [93.2, 1074.0], [93.3, 1078.0], [93.4, 1081.0], [93.5, 1095.0], [93.6, 1095.0], [93.7, 1109.0], [93.8, 1113.0], [93.9, 1128.0], [94.0, 1132.0], [94.1, 1132.0], [94.2, 1140.0], [94.3, 1142.0], [94.4, 1144.0], [94.5, 1146.0], [94.6, 1146.0], [94.7, 1147.0], [94.8, 1152.0], [94.9, 1155.0], [95.0, 1174.0], [95.1, 1174.0], [95.2, 1197.0], [95.3, 1223.0], [95.4, 1274.0], [95.5, 1276.0], [95.6, 1276.0], [95.7, 1278.0], [95.8, 1287.0], [95.9, 1304.0], [96.0, 1337.0], [96.1, 1337.0], [96.2, 1339.0], [96.3, 1397.0], [96.4, 1416.0], [96.5, 1417.0], [96.6, 1417.0], [96.7, 1454.0], [96.8, 1463.0], [96.9, 1482.0], [97.0, 1512.0], [97.1, 1512.0], [97.2, 1621.0], [97.3, 1626.0], [97.4, 1668.0], [97.5, 1676.0], [97.6, 1676.0], [97.7, 1738.0], [97.8, 1779.0], [97.9, 1903.0], [98.0, 1983.0], [98.1, 1983.0], [98.2, 2002.0], [98.3, 2121.0], [98.4, 2272.0], [98.5, 2394.0], [98.6, 2394.0], [98.7, 2495.0], [98.8, 2550.0], [98.9, 3069.0], [99.0, 3102.0], [99.1, 3102.0], [99.2, 3670.0], [99.3, 3762.0], [99.4, 3762.0], [99.5, 3858.0], [99.6, 3858.0], [99.7, 3928.0], [99.8, 4017.0], [99.9, 4108.0]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 289.0, "series": [{"data": [[0.0, 57.0], [600.0, 2.0], [300.0, 1.0], [100.0, 26.0], [400.0, 5.0], [200.0, 6.0], [800.0, 1.0], [1900.0, 1.0], [2000.0, 1.0]], "isOverall": false, "label": "1", "isController": false}, {"data": [[0.0, 114.0], [2300.0, 2.0], [300.0, 7.0], [600.0, 1.0], [700.0, 3.0], [100.0, 51.0], [200.0, 14.0], [400.0, 4.0], [800.0, 2.0], [900.0, 1.0], [500.0, 1.0]], "isOverall": false, "label": "2", "isController": false}, {"data": [[0.0, 172.0], [2300.0, 3.0], [600.0, 5.0], [2400.0, 1.0], [700.0, 4.0], [200.0, 38.0], [800.0, 3.0], [900.0, 3.0], [1000.0, 2.0], [4000.0, 1.0], [1100.0, 4.0], [300.0, 24.0], [1200.0, 1.0], [100.0, 119.0], [400.0, 12.0], [500.0, 8.0]], "isOverall": false, "label": "4", "isController": false}, {"data": [[0.0, 118.0], [600.0, 70.0], [700.0, 69.0], [800.0, 58.0], [900.0, 44.0], [1000.0, 33.0], [1100.0, 21.0], [1200.0, 12.0], [1300.0, 12.0], [1400.0, 14.0], [1500.0, 3.0], [1600.0, 18.0], [1700.0, 12.0], [1800.0, 16.0], [1900.0, 13.0], [2000.0, 6.0], [2100.0, 8.0], [2300.0, 10.0], [2200.0, 12.0], [2400.0, 10.0], [2500.0, 8.0], [2600.0, 4.0], [2700.0, 5.0], [2800.0, 3.0], [2900.0, 3.0], [3000.0, 4.0], [3100.0, 2.0], [3300.0, 1.0], [3400.0, 3.0], [3500.0, 2.0], [3600.0, 3.0], [3700.0, 3.0], [3800.0, 1.0], [3900.0, 1.0], [4000.0, 1.0], [4200.0, 1.0], [4100.0, 2.0], [4600.0, 1.0], [4400.0, 1.0], [4800.0, 1.0], [4700.0, 1.0], [5000.0, 1.0], [5300.0, 1.0], [5200.0, 1.0], [5400.0, 1.0], [5500.0, 1.0], [5800.0, 1.0], [6000.0, 2.0], [5900.0, 1.0], [7000.0, 1.0], [7100.0, 1.0], [7800.0, 1.0], [7900.0, 1.0], [8800.0, 2.0], [15600.0, 1.0], [21700.0, 1.0], [100.0, 289.0], [200.0, 212.0], [300.0, 226.0], [400.0, 147.0], [500.0, 99.0]], "isOverall": false, "label": "16", "isController": false}, {"data": [[0.0, 175.0], [600.0, 24.0], [700.0, 11.0], [800.0, 8.0], [900.0, 11.0], [1000.0, 6.0], [1100.0, 13.0], [1200.0, 5.0], [1300.0, 4.0], [1400.0, 5.0], [1500.0, 1.0], [100.0, 240.0], [1600.0, 4.0], [1700.0, 2.0], [1900.0, 2.0], [2000.0, 1.0], [2100.0, 1.0], [2300.0, 1.0], [2200.0, 1.0], [2400.0, 1.0], [2500.0, 1.0], [3000.0, 1.0], [3100.0, 1.0], [200.0, 126.0], [3600.0, 1.0], [3700.0, 2.0], [3800.0, 1.0], [3900.0, 1.0], [4000.0, 1.0], [4100.0, 1.0], [300.0, 63.0], [400.0, 52.0], [500.0, 33.0]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 21700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 209.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2301.0, "series": [{"data": [[0.0, 2301.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 590.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 209.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.70758981E12, "maxY": 16.0, "series": [{"data": [[1.70758981E12, 1.0], [1.70758982E12, 1.0]], "isOverall": false, "label": "1", "isController": false}, {"data": [[1.70758984E12, 1.4714285714285718], [1.70758982E12, 1.0], [1.70758983E12, 2.0]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.70758984E12, 3.08], [1.70758985E12, 4.0], [1.70758986E12, 3.850299401197604], [1.70758987E12, 1.1428571428571435]], "isOverall": false, "label": "4", "isController": false}, {"data": [[1.70758991E12, 14.84210526315789], [1.70758996E12, 16.0], [1.70758997E12, 14.673469387755103], [1.70758998E12, 6.972677595628419], [1.70758999E12, 2.3000000000000003], [1.70758992E12, 16.0], [1.70758993E12, 16.0], [1.70758994E12, 16.0], [1.70758995E12, 16.0]], "isOverall": false, "label": "16", "isController": false}, {"data": [[1.70758988E12, 8.0], [1.70758989E12, 8.0], [1.7075899E12, 7.206730769230768], [1.70758991E12, 2.954545454545455], [1.70758987E12, 7.586956521739129]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.70758999E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 56.0, "minX": 1.0, "maxY": 1288.0, "series": [{"data": [[1.0, 173.93]], "isOverall": false, "label": "1", "isController": false}, {"data": [[1.0, 173.93]], "isOverall": false, "label": "1-Aggregated", "isController": false}, {"data": [[1.0, 107.2], [2.0, 174.81250000000009]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.7999999999999994, 161.2899999999999]], "isOverall": false, "label": "2-Aggregated", "isController": false}, {"data": [[1.0, 211.18181818181827], [2.0, 181.09999999999997], [4.0, 223.80792682926827], [3.0, 176.82758620689654]], "isOverall": false, "label": "4", "isController": false}, {"data": [[3.630000000000001, 218.29249999999993]], "isOverall": false, "label": "4-Aggregated", "isController": false}, {"data": [[2.0, 220.25], [8.0, 56.0], [9.0, 418.7142857142857], [10.0, 826.8], [11.0, 588.4], [12.0, 562.6666666666666], [3.0, 199.12500000000003], [13.0, 711.3695652173914], [14.0, 781.913043478261], [15.0, 737.4117647058823], [4.0, 304.6875], [16.0, 742.3078149920251], [1.0, 1288.0], [5.0, 92.10000000000001], [6.0, 265.5454545454545], [7.0, 397.79999999999995]], "isOverall": false, "label": "16", "isController": false}, {"data": [[14.623124999999996, 698.5756250000001]], "isOverall": false, "label": "16-Aggregated", "isController": false}, {"data": [[2.0, 124.08333333333334], [4.0, 110.4], [8.0, 375.17701863354046], [1.0, 112.58333333333334], [5.0, 314.16], [3.0, 343.5], [6.0, 362.13559322033905], [7.0, 253.6]], "isOverall": false, "label": "8", "isController": false}, {"data": [[7.4450000000000065, 357.31249999999994]], "isOverall": false, "label": "8-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 16.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 227.4, "minX": 1.70758981E12, "maxY": 1.27752025E7, "series": [{"data": [[1.70758989E12, 1.16292673E7], [1.70758991E12, 7343409.7], [1.70758985E12, 9297096.3], [1.70758987E12, 8745430.1], [1.70758996E12, 1.11287843E7], [1.70758981E12, 2875650.3], [1.70758998E12, 1.12331597E7], [1.70758983E12, 5851217.4], [1.70758992E12, 1.25504142E7], [1.70758994E12, 1.27752025E7], [1.70758988E12, 1.13059626E7], [1.7075899E12, 1.08746661E7], [1.70758984E12, 5149143.2], [1.70758986E12, 8724257.7], [1.70758997E12, 1.19552969E7], [1.70758982E12, 3642724.1], [1.70758999E12, 1712634.7], [1.70758993E12, 1.03533521E7], [1.70758995E12, 1.10173151E7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.70758989E12, 4755.8], [1.70758991E12, 4026.8], [1.70758985E12, 3936.4], [1.70758987E12, 3936.2], [1.70758996E12, 4982.7], [1.70758981E12, 818.9], [1.70758998E12, 4163.9], [1.70758983E12, 2888.9], [1.70758992E12, 5210.5], [1.70758994E12, 4960.1], [1.70758988E12, 4572.6], [1.7075899E12, 4732.1], [1.70758984E12, 2161.6], [1.70758986E12, 3799.1], [1.70758997E12, 4460.2], [1.70758982E12, 1525.1], [1.70758999E12, 227.4], [1.70758993E12, 4572.6], [1.70758995E12, 4800.4]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.70758999E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 67.66666666666667, "minX": 1.70758981E12, "maxY": 851.6651376146785, "series": [{"data": [[1.70758981E12, 214.88888888888883], [1.70758982E12, 150.890625]], "isOverall": false, "label": "1", "isController": false}, {"data": [[1.70758984E12, 175.84285714285713], [1.70758982E12, 67.66666666666667], [1.70758983E12, 155.48031496062995]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.70758984E12, 155.20000000000002], [1.70758985E12, 224.3294797687861], [1.70758986E12, 218.96407185628743], [1.70758987E12, 230.3142857142857]], "isOverall": false, "label": "4", "isController": false}, {"data": [[1.70758991E12, 475.8796992481203], [1.70758996E12, 683.0228310502279], [1.70758997E12, 837.0510204081634], [1.70758998E12, 413.49180327868885], [1.70758999E12, 431.8], [1.70758992E12, 744.3886462882091], [1.70758993E12, 728.8308457711449], [1.70758994E12, 851.6651376146785], [1.70758995E12, 749.6445497630331]], "isOverall": false, "label": "16", "isController": false}, {"data": [[1.70758988E12, 387.27363184079604], [1.70758989E12, 401.7177033492822], [1.7075899E12, 336.9182692307694], [1.70758991E12, 258.20454545454544], [1.70758987E12, 308.7608695652172]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.70758999E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 40.333333333333336, "minX": 1.70758981E12, "maxY": 205.0, "series": [{"data": [[1.70758981E12, 115.3611111111111], [1.70758982E12, 71.74999999999999]], "isOverall": false, "label": "1", "isController": false}, {"data": [[1.70758984E12, 84.35714285714288], [1.70758982E12, 40.333333333333336], [1.70758983E12, 71.59055118110228]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.70758984E12, 64.64], [1.70758985E12, 92.39306358381504], [1.70758986E12, 92.2634730538922], [1.70758987E12, 90.94285714285714]], "isOverall": false, "label": "4", "isController": false}, {"data": [[1.70758991E12, 144.78947368421046], [1.70758996E12, 167.324200913242], [1.70758997E12, 190.95408163265293], [1.70758998E12, 133.2568306010929], [1.70758999E12, 205.0], [1.70758992E12, 182.54585152838428], [1.70758993E12, 179.4278606965173], [1.70758994E12, 190.44495412844026], [1.70758995E12, 169.9004739336493]], "isOverall": false, "label": "16", "isController": false}, {"data": [[1.70758988E12, 122.66666666666661], [1.70758989E12, 133.4976076555025], [1.7075899E12, 111.62019230769228], [1.70758991E12, 103.52272727272727], [1.70758987E12, 105.68115942028979]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.70758999E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 17.21875000000001, "minX": 1.70758981E12, "maxY": 41.42358078602617, "series": [{"data": [[1.70758981E12, 18.05555555555556], [1.70758982E12, 17.21875000000001]], "isOverall": false, "label": "1", "isController": false}, {"data": [[1.70758984E12, 17.342857142857138], [1.70758982E12, 18.333333333333332], [1.70758983E12, 17.86614173228347]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.70758984E12, 18.04], [1.70758985E12, 21.034682080924846], [1.70758986E12, 20.8502994011976], [1.70758987E12, 17.4]], "isOverall": false, "label": "4", "isController": false}, {"data": [[1.70758991E12, 30.458646616541355], [1.70758996E12, 29.027397260273982], [1.70758997E12, 38.596938775510196], [1.70758998E12, 28.98907103825137], [1.70758999E12, 17.8], [1.70758992E12, 41.42358078602617], [1.70758993E12, 34.333333333333336], [1.70758994E12, 37.330275229357824], [1.70758995E12, 27.848341232227494]], "isOverall": false, "label": "16", "isController": false}, {"data": [[1.70758988E12, 23.83084577114428], [1.70758989E12, 25.043062200956946], [1.7075899E12, 23.634615384615394], [1.70758991E12, 21.27272727272727], [1.70758987E12, 21.942028985507243]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.70758999E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 28.0, "minX": 1.70758981E12, "maxY": 21729.0, "series": [{"data": [[1.70758989E12, 4017.0], [1.70758991E12, 3654.0], [1.70758985E12, 2396.0], [1.70758987E12, 4038.0], [1.70758996E12, 7915.0], [1.70758981E12, 2012.0], [1.70758998E12, 5258.0], [1.70758983E12, 2364.0], [1.70758992E12, 7011.0], [1.70758994E12, 21729.0], [1.70758988E12, 4108.0], [1.7075899E12, 3858.0], [1.70758984E12, 2353.0], [1.70758986E12, 2402.0], [1.70758997E12, 15603.0], [1.70758982E12, 1964.0], [1.70758999E12, 2436.0], [1.70758993E12, 6032.0], [1.70758995E12, 7807.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.70758989E12, 32.0], [1.70758991E12, 36.0], [1.70758985E12, 29.0], [1.70758987E12, 31.0], [1.70758996E12, 85.0], [1.70758981E12, 28.0], [1.70758998E12, 28.0], [1.70758983E12, 30.0], [1.70758992E12, 61.0], [1.70758994E12, 81.0], [1.70758988E12, 34.0], [1.7075899E12, 30.0], [1.70758984E12, 33.0], [1.70758986E12, 32.0], [1.70758997E12, 48.0], [1.70758982E12, 29.0], [1.70758999E12, 32.0], [1.70758993E12, 63.0], [1.70758995E12, 76.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.70758989E12, 948.0], [1.70758991E12, 859.4000000000008], [1.70758985E12, 466.39999999999986], [1.70758987E12, 752.7999999999995], [1.70758996E12, 1437.0], [1.70758981E12, 531.4000000000008], [1.70758998E12, 1021.3999999999995], [1.70758983E12, 293.6], [1.70758992E12, 1759.0], [1.70758994E12, 1868.3999999999999], [1.70758988E12, 761.4000000000001], [1.7075899E12, 802.6999999999999], [1.70758984E12, 360.00000000000045], [1.70758986E12, 478.8000000000006], [1.70758997E12, 2147.3], [1.70758982E12, 211.00000000000006], [1.70758999E12, 2250.000000000001], [1.70758993E12, 1440.2000000000003], [1.70758995E12, 1866.200000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.70758989E12, 3692.700000000004], [1.70758991E12, 2792.8799999999987], [1.70758985E12, 2378.24], [1.70758987E12, 3765.6799999999967], [1.70758996E12, 5547.400000000027], [1.70758981E12, 2012.0], [1.70758998E12, 3926.5999999999945], [1.70758983E12, 1959.3999999999983], [1.70758992E12, 5458.799999999998], [1.70758994E12, 8312.010000000007], [1.70758988E12, 3924.6799999999985], [1.7075899E12, 3047.369999999998], [1.70758984E12, 2353.0], [1.70758986E12, 2383.64], [1.70758997E12, 9085.570000000007], [1.70758982E12, 1964.0], [1.70758999E12, 2436.0], [1.70758993E12, 5506.959999999992], [1.70758995E12, 6924.35999999999]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.70758989E12, 220.0], [1.70758991E12, 266.0], [1.70758985E12, 126.0], [1.70758987E12, 133.0], [1.70758996E12, 415.0], [1.70758981E12, 85.5], [1.70758998E12, 185.0], [1.70758983E12, 88.0], [1.70758992E12, 384.0], [1.70758994E12, 401.0], [1.70758988E12, 206.0], [1.7075899E12, 187.5], [1.70758984E12, 92.0], [1.70758986E12, 121.0], [1.70758997E12, 417.0], [1.70758982E12, 87.0], [1.70758999E12, 142.0], [1.70758993E12, 469.0], [1.70758995E12, 399.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.70758989E12, 1395.5], [1.70758991E12, 1347.6999999999982], [1.70758985E12, 816.1999999999992], [1.70758987E12, 1037.0999999999974], [1.70758996E12, 2308.0], [1.70758981E12, 1049.7999999999984], [1.70758998E12, 1725.9999999999982], [1.70758983E12, 492.39999999999924], [1.70758992E12, 2508.5], [1.70758994E12, 2706.6], [1.70758988E12, 1387.699999999998], [1.7075899E12, 1145.1], [1.70758984E12, 680.1999999999998], [1.70758986E12, 758.3999999999996], [1.70758997E12, 2448.399999999998], [1.70758982E12, 476.4], [1.70758999E12, 2436.0], [1.70758993E12, 2707.0999999999945], [1.70758995E12, 2544.7999999999993]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.70758999E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 78.5, "minX": 1.0, "maxY": 1988.0, "series": [{"data": [[2.0, 330.5], [33.0, 259.0], [34.0, 142.0], [35.0, 121.0], [3.0, 403.0], [5.0, 101.5], [6.0, 86.0], [8.0, 147.0], [9.0, 97.0], [10.0, 86.0], [11.0, 78.5], [12.0, 124.0], [13.0, 177.0], [14.0, 136.5], [15.0, 292.5], [1.0, 1988.0], [16.0, 225.5], [17.0, 172.0], [18.0, 391.5], [19.0, 370.0], [20.0, 329.0], [21.0, 347.0], [22.0, 362.5], [23.0, 347.0], [24.0, 266.5], [25.0, 203.0], [26.0, 260.0], [27.0, 188.0], [29.0, 175.0], [30.0, 326.5], [31.0, 350.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 35.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 40.5, "minX": 1.0, "maxY": 1109.5, "series": [{"data": [[2.0, 144.5], [33.0, 113.0], [34.0, 59.0], [35.0, 49.0], [3.0, 181.5], [5.0, 43.5], [6.0, 44.0], [8.0, 47.5], [9.0, 41.5], [10.0, 40.5], [11.0, 43.0], [12.0, 59.5], [13.0, 72.0], [14.0, 48.0], [15.0, 102.0], [1.0, 1109.5], [16.0, 86.5], [17.0, 62.0], [18.0, 130.0], [19.0, 118.0], [20.0, 109.5], [21.0, 119.0], [22.0, 124.0], [23.0, 121.0], [24.0, 112.5], [25.0, 80.0], [26.0, 101.0], [27.0, 85.0], [29.0, 71.0], [30.0, 115.5], [31.0, 116.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 35.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.7, "minX": 1.70758981E12, "maxY": 22.9, "series": [{"data": [[1.70758989E12, 20.9], [1.70758991E12, 18.8], [1.70758985E12, 17.3], [1.70758987E12, 17.9], [1.70758996E12, 21.9], [1.70758981E12, 3.7], [1.70758998E12, 17.3], [1.70758983E12, 12.8], [1.70758992E12, 22.9], [1.70758994E12, 21.8], [1.70758988E12, 20.1], [1.7075899E12, 20.5], [1.70758984E12, 9.7], [1.70758986E12, 16.5], [1.70758997E12, 19.3], [1.70758982E12, 6.7], [1.70758999E12, 0.7], [1.70758993E12, 20.1], [1.70758995E12, 21.1]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.70758999E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.70758981E12, "maxY": 22.9, "series": [{"data": [[1.70758989E12, 20.9], [1.70758991E12, 17.7], [1.70758985E12, 17.3], [1.70758987E12, 17.3], [1.70758996E12, 21.9], [1.70758981E12, 3.6], [1.70758998E12, 18.3], [1.70758983E12, 12.7], [1.70758992E12, 22.9], [1.70758994E12, 21.8], [1.70758988E12, 20.1], [1.7075899E12, 20.8], [1.70758984E12, 9.5], [1.70758986E12, 16.7], [1.70758997E12, 19.6], [1.70758982E12, 6.7], [1.70758999E12, 1.0], [1.70758993E12, 20.1], [1.70758995E12, 21.1]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.70758999E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.3, "minX": 1.70758981E12, "maxY": 22.9, "series": [{"data": [[1.70758991E12, 13.3], [1.70758996E12, 21.9], [1.70758997E12, 19.6], [1.70758998E12, 18.3], [1.70758999E12, 1.0], [1.70758992E12, 22.9], [1.70758993E12, 20.1], [1.70758994E12, 21.8], [1.70758995E12, 21.1]], "isOverall": false, "label": "16-success", "isController": false}, {"data": [[1.70758981E12, 3.6], [1.70758982E12, 6.4]], "isOverall": false, "label": "1-success", "isController": false}, {"data": [[1.70758984E12, 2.5], [1.70758985E12, 17.3], [1.70758986E12, 16.7], [1.70758987E12, 3.5]], "isOverall": false, "label": "4-success", "isController": false}, {"data": [[1.70758988E12, 20.1], [1.70758989E12, 20.9], [1.7075899E12, 20.8], [1.70758991E12, 4.4], [1.70758987E12, 13.8]], "isOverall": false, "label": "8-success", "isController": false}, {"data": [[1.70758984E12, 7.0], [1.70758982E12, 0.3], [1.70758983E12, 12.7]], "isOverall": false, "label": "2-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.70758999E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.70758981E12, "maxY": 22.9, "series": [{"data": [[1.70758989E12, 20.9], [1.70758991E12, 17.7], [1.70758985E12, 17.3], [1.70758987E12, 17.3], [1.70758996E12, 21.9], [1.70758981E12, 3.6], [1.70758998E12, 18.3], [1.70758983E12, 12.7], [1.70758992E12, 22.9], [1.70758994E12, 21.8], [1.70758988E12, 20.1], [1.7075899E12, 20.8], [1.70758984E12, 9.5], [1.70758986E12, 16.7], [1.70758997E12, 19.6], [1.70758982E12, 6.7], [1.70758999E12, 1.0], [1.70758993E12, 20.1], [1.70758995E12, 21.1]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.70758999E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

