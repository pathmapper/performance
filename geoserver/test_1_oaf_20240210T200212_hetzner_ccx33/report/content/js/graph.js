/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 28.0, "minX": 0.0, "maxY": 14142.0, "series": [{"data": [[0.0, 32.0], [0.1, 32.0], [0.2, 32.0], [0.3, 32.0], [0.4, 32.0], [0.5, 32.0], [0.6, 32.0], [0.7, 32.0], [0.8, 32.0], [0.9, 32.0], [1.0, 35.0], [1.1, 35.0], [1.2, 35.0], [1.3, 35.0], [1.4, 35.0], [1.5, 35.0], [1.6, 35.0], [1.7, 35.0], [1.8, 35.0], [1.9, 35.0], [2.0, 35.0], [2.1, 35.0], [2.2, 35.0], [2.3, 35.0], [2.4, 35.0], [2.5, 35.0], [2.6, 35.0], [2.7, 35.0], [2.8, 35.0], [2.9, 35.0], [3.0, 35.0], [3.1, 35.0], [3.2, 35.0], [3.3, 35.0], [3.4, 35.0], [3.5, 35.0], [3.6, 35.0], [3.7, 35.0], [3.8, 35.0], [3.9, 35.0], [4.0, 37.0], [4.1, 37.0], [4.2, 37.0], [4.3, 37.0], [4.4, 37.0], [4.5, 37.0], [4.6, 37.0], [4.7, 37.0], [4.8, 37.0], [4.9, 37.0], [5.0, 38.0], [5.1, 38.0], [5.2, 38.0], [5.3, 38.0], [5.4, 38.0], [5.5, 38.0], [5.6, 38.0], [5.7, 38.0], [5.8, 38.0], [5.9, 38.0], [6.0, 38.0], [6.1, 38.0], [6.2, 38.0], [6.3, 38.0], [6.4, 38.0], [6.5, 38.0], [6.6, 38.0], [6.7, 38.0], [6.8, 38.0], [6.9, 38.0], [7.0, 38.0], [7.1, 38.0], [7.2, 38.0], [7.3, 38.0], [7.4, 38.0], [7.5, 38.0], [7.6, 38.0], [7.7, 38.0], [7.8, 38.0], [7.9, 38.0], [8.0, 39.0], [8.1, 39.0], [8.2, 39.0], [8.3, 39.0], [8.4, 39.0], [8.5, 39.0], [8.6, 39.0], [8.7, 39.0], [8.8, 39.0], [8.9, 39.0], [9.0, 39.0], [9.1, 39.0], [9.2, 39.0], [9.3, 39.0], [9.4, 39.0], [9.5, 39.0], [9.6, 39.0], [9.7, 39.0], [9.8, 39.0], [9.9, 39.0], [10.0, 39.0], [10.1, 39.0], [10.2, 39.0], [10.3, 39.0], [10.4, 39.0], [10.5, 39.0], [10.6, 39.0], [10.7, 39.0], [10.8, 39.0], [10.9, 39.0], [11.0, 41.0], [11.1, 41.0], [11.2, 41.0], [11.3, 41.0], [11.4, 41.0], [11.5, 41.0], [11.6, 41.0], [11.7, 41.0], [11.8, 41.0], [11.9, 41.0], [12.0, 42.0], [12.1, 42.0], [12.2, 42.0], [12.3, 42.0], [12.4, 42.0], [12.5, 42.0], [12.6, 42.0], [12.7, 42.0], [12.8, 42.0], [12.9, 42.0], [13.0, 42.0], [13.1, 42.0], [13.2, 42.0], [13.3, 42.0], [13.4, 42.0], [13.5, 42.0], [13.6, 42.0], [13.7, 42.0], [13.8, 42.0], [13.9, 42.0], [14.0, 44.0], [14.1, 44.0], [14.2, 44.0], [14.3, 44.0], [14.4, 44.0], [14.5, 44.0], [14.6, 44.0], [14.7, 44.0], [14.8, 44.0], [14.9, 44.0], [15.0, 48.0], [15.1, 48.0], [15.2, 48.0], [15.3, 48.0], [15.4, 48.0], [15.5, 48.0], [15.6, 48.0], [15.7, 48.0], [15.8, 48.0], [15.9, 48.0], [16.0, 48.0], [16.1, 48.0], [16.2, 48.0], [16.3, 48.0], [16.4, 48.0], [16.5, 48.0], [16.6, 48.0], [16.7, 48.0], [16.8, 48.0], [16.9, 48.0], [17.0, 50.0], [17.1, 50.0], [17.2, 50.0], [17.3, 50.0], [17.4, 50.0], [17.5, 50.0], [17.6, 50.0], [17.7, 50.0], [17.8, 50.0], [17.9, 50.0], [18.0, 52.0], [18.1, 52.0], [18.2, 52.0], [18.3, 52.0], [18.4, 52.0], [18.5, 52.0], [18.6, 52.0], [18.7, 52.0], [18.8, 52.0], [18.9, 52.0], [19.0, 53.0], [19.1, 53.0], [19.2, 53.0], [19.3, 53.0], [19.4, 53.0], [19.5, 53.0], [19.6, 53.0], [19.7, 53.0], [19.8, 53.0], [19.9, 53.0], [20.0, 54.0], [20.1, 54.0], [20.2, 54.0], [20.3, 54.0], [20.4, 54.0], [20.5, 54.0], [20.6, 54.0], [20.7, 54.0], [20.8, 54.0], [20.9, 54.0], [21.0, 56.0], [21.1, 56.0], [21.2, 56.0], [21.3, 56.0], [21.4, 56.0], [21.5, 56.0], [21.6, 56.0], [21.7, 56.0], [21.8, 56.0], [21.9, 56.0], [22.0, 60.0], [22.1, 60.0], [22.2, 60.0], [22.3, 60.0], [22.4, 60.0], [22.5, 60.0], [22.6, 60.0], [22.7, 60.0], [22.8, 60.0], [22.9, 60.0], [23.0, 61.0], [23.1, 61.0], [23.2, 61.0], [23.3, 61.0], [23.4, 61.0], [23.5, 61.0], [23.6, 61.0], [23.7, 61.0], [23.8, 61.0], [23.9, 61.0], [24.0, 63.0], [24.1, 63.0], [24.2, 63.0], [24.3, 63.0], [24.4, 63.0], [24.5, 63.0], [24.6, 63.0], [24.7, 63.0], [24.8, 63.0], [24.9, 63.0], [25.0, 63.0], [25.1, 63.0], [25.2, 63.0], [25.3, 63.0], [25.4, 63.0], [25.5, 63.0], [25.6, 63.0], [25.7, 63.0], [25.8, 63.0], [25.9, 63.0], [26.0, 64.0], [26.1, 64.0], [26.2, 64.0], [26.3, 64.0], [26.4, 64.0], [26.5, 64.0], [26.6, 64.0], [26.7, 64.0], [26.8, 64.0], [26.9, 64.0], [27.0, 65.0], [27.1, 65.0], [27.2, 65.0], [27.3, 65.0], [27.4, 65.0], [27.5, 65.0], [27.6, 65.0], [27.7, 65.0], [27.8, 65.0], [27.9, 65.0], [28.0, 67.0], [28.1, 67.0], [28.2, 67.0], [28.3, 67.0], [28.4, 67.0], [28.5, 67.0], [28.6, 67.0], [28.7, 67.0], [28.8, 67.0], [28.9, 67.0], [29.0, 67.0], [29.1, 67.0], [29.2, 67.0], [29.3, 67.0], [29.4, 67.0], [29.5, 67.0], [29.6, 67.0], [29.7, 67.0], [29.8, 67.0], [29.9, 67.0], [30.0, 68.0], [30.1, 68.0], [30.2, 68.0], [30.3, 68.0], [30.4, 68.0], [30.5, 68.0], [30.6, 68.0], [30.7, 68.0], [30.8, 68.0], [30.9, 68.0], [31.0, 69.0], [31.1, 69.0], [31.2, 69.0], [31.3, 69.0], [31.4, 69.0], [31.5, 69.0], [31.6, 69.0], [31.7, 69.0], [31.8, 69.0], [31.9, 69.0], [32.0, 70.0], [32.1, 70.0], [32.2, 70.0], [32.3, 70.0], [32.4, 70.0], [32.5, 70.0], [32.6, 70.0], [32.7, 70.0], [32.8, 70.0], [32.9, 70.0], [33.0, 70.0], [33.1, 70.0], [33.2, 70.0], [33.3, 70.0], [33.4, 70.0], [33.5, 70.0], [33.6, 70.0], [33.7, 70.0], [33.8, 70.0], [33.9, 70.0], [34.0, 71.0], [34.1, 71.0], [34.2, 71.0], [34.3, 71.0], [34.4, 71.0], [34.5, 71.0], [34.6, 71.0], [34.7, 71.0], [34.8, 71.0], [34.9, 71.0], [35.0, 76.0], [35.1, 76.0], [35.2, 76.0], [35.3, 76.0], [35.4, 76.0], [35.5, 76.0], [35.6, 76.0], [35.7, 76.0], [35.8, 76.0], [35.9, 76.0], [36.0, 76.0], [36.1, 76.0], [36.2, 76.0], [36.3, 76.0], [36.4, 76.0], [36.5, 76.0], [36.6, 76.0], [36.7, 76.0], [36.8, 76.0], [36.9, 76.0], [37.0, 76.0], [37.1, 76.0], [37.2, 76.0], [37.3, 76.0], [37.4, 76.0], [37.5, 76.0], [37.6, 76.0], [37.7, 76.0], [37.8, 76.0], [37.9, 76.0], [38.0, 79.0], [38.1, 79.0], [38.2, 79.0], [38.3, 79.0], [38.4, 79.0], [38.5, 79.0], [38.6, 79.0], [38.7, 79.0], [38.8, 79.0], [38.9, 79.0], [39.0, 79.0], [39.1, 79.0], [39.2, 79.0], [39.3, 79.0], [39.4, 79.0], [39.5, 79.0], [39.6, 79.0], [39.7, 79.0], [39.8, 79.0], [39.9, 79.0], [40.0, 80.0], [40.1, 80.0], [40.2, 80.0], [40.3, 80.0], [40.4, 80.0], [40.5, 80.0], [40.6, 80.0], [40.7, 80.0], [40.8, 80.0], [40.9, 80.0], [41.0, 81.0], [41.1, 81.0], [41.2, 81.0], [41.3, 81.0], [41.4, 81.0], [41.5, 81.0], [41.6, 81.0], [41.7, 81.0], [41.8, 81.0], [41.9, 81.0], [42.0, 82.0], [42.1, 82.0], [42.2, 82.0], [42.3, 82.0], [42.4, 82.0], [42.5, 82.0], [42.6, 82.0], [42.7, 82.0], [42.8, 82.0], [42.9, 82.0], [43.0, 82.0], [43.1, 82.0], [43.2, 82.0], [43.3, 82.0], [43.4, 82.0], [43.5, 82.0], [43.6, 82.0], [43.7, 82.0], [43.8, 82.0], [43.9, 82.0], [44.0, 83.0], [44.1, 83.0], [44.2, 83.0], [44.3, 83.0], [44.4, 83.0], [44.5, 83.0], [44.6, 83.0], [44.7, 83.0], [44.8, 83.0], [44.9, 83.0], [45.0, 85.0], [45.1, 85.0], [45.2, 85.0], [45.3, 85.0], [45.4, 85.0], [45.5, 85.0], [45.6, 85.0], [45.7, 85.0], [45.8, 85.0], [45.9, 85.0], [46.0, 86.0], [46.1, 86.0], [46.2, 86.0], [46.3, 86.0], [46.4, 86.0], [46.5, 86.0], [46.6, 86.0], [46.7, 86.0], [46.8, 86.0], [46.9, 86.0], [47.0, 87.0], [47.1, 87.0], [47.2, 87.0], [47.3, 87.0], [47.4, 87.0], [47.5, 87.0], [47.6, 87.0], [47.7, 87.0], [47.8, 87.0], [47.9, 87.0], [48.0, 87.0], [48.1, 87.0], [48.2, 87.0], [48.3, 87.0], [48.4, 87.0], [48.5, 87.0], [48.6, 87.0], [48.7, 87.0], [48.8, 87.0], [48.9, 87.0], [49.0, 88.0], [49.1, 88.0], [49.2, 88.0], [49.3, 88.0], [49.4, 88.0], [49.5, 88.0], [49.6, 88.0], [49.7, 88.0], [49.8, 88.0], [49.9, 88.0], [50.0, 90.0], [50.1, 90.0], [50.2, 90.0], [50.3, 90.0], [50.4, 90.0], [50.5, 90.0], [50.6, 90.0], [50.7, 90.0], [50.8, 90.0], [50.9, 90.0], [51.0, 91.0], [51.1, 91.0], [51.2, 91.0], [51.3, 91.0], [51.4, 91.0], [51.5, 91.0], [51.6, 91.0], [51.7, 91.0], [51.8, 91.0], [51.9, 91.0], [52.0, 91.0], [52.1, 91.0], [52.2, 91.0], [52.3, 91.0], [52.4, 91.0], [52.5, 91.0], [52.6, 91.0], [52.7, 91.0], [52.8, 91.0], [52.9, 91.0], [53.0, 97.0], [53.1, 97.0], [53.2, 97.0], [53.3, 97.0], [53.4, 97.0], [53.5, 97.0], [53.6, 97.0], [53.7, 97.0], [53.8, 97.0], [53.9, 97.0], [54.0, 99.0], [54.1, 99.0], [54.2, 99.0], [54.3, 99.0], [54.4, 99.0], [54.5, 99.0], [54.6, 99.0], [54.7, 99.0], [54.8, 99.0], [54.9, 99.0], [55.0, 99.0], [55.1, 99.0], [55.2, 99.0], [55.3, 99.0], [55.4, 99.0], [55.5, 99.0], [55.6, 99.0], [55.7, 99.0], [55.8, 99.0], [55.9, 99.0], [56.0, 101.0], [56.1, 101.0], [56.2, 101.0], [56.3, 101.0], [56.4, 101.0], [56.5, 101.0], [56.6, 101.0], [56.7, 101.0], [56.8, 101.0], [56.9, 101.0], [57.0, 102.0], [57.1, 102.0], [57.2, 102.0], [57.3, 102.0], [57.4, 102.0], [57.5, 102.0], [57.6, 102.0], [57.7, 102.0], [57.8, 102.0], [57.9, 102.0], [58.0, 105.0], [58.1, 105.0], [58.2, 105.0], [58.3, 105.0], [58.4, 105.0], [58.5, 105.0], [58.6, 105.0], [58.7, 105.0], [58.8, 105.0], [58.9, 105.0], [59.0, 106.0], [59.1, 106.0], [59.2, 106.0], [59.3, 106.0], [59.4, 106.0], [59.5, 106.0], [59.6, 106.0], [59.7, 106.0], [59.8, 106.0], [59.9, 106.0], [60.0, 107.0], [60.1, 107.0], [60.2, 107.0], [60.3, 107.0], [60.4, 107.0], [60.5, 107.0], [60.6, 107.0], [60.7, 107.0], [60.8, 107.0], [60.9, 107.0], [61.0, 110.0], [61.1, 110.0], [61.2, 110.0], [61.3, 110.0], [61.4, 110.0], [61.5, 110.0], [61.6, 110.0], [61.7, 110.0], [61.8, 110.0], [61.9, 110.0], [62.0, 113.0], [62.1, 113.0], [62.2, 113.0], [62.3, 113.0], [62.4, 113.0], [62.5, 113.0], [62.6, 113.0], [62.7, 113.0], [62.8, 113.0], [62.9, 113.0], [63.0, 113.0], [63.1, 113.0], [63.2, 113.0], [63.3, 113.0], [63.4, 113.0], [63.5, 113.0], [63.6, 113.0], [63.7, 113.0], [63.8, 113.0], [63.9, 113.0], [64.0, 116.0], [64.1, 116.0], [64.2, 116.0], [64.3, 116.0], [64.4, 116.0], [64.5, 116.0], [64.6, 116.0], [64.7, 116.0], [64.8, 116.0], [64.9, 116.0], [65.0, 117.0], [65.1, 117.0], [65.2, 117.0], [65.3, 117.0], [65.4, 117.0], [65.5, 117.0], [65.6, 117.0], [65.7, 117.0], [65.8, 117.0], [65.9, 117.0], [66.0, 118.0], [66.1, 118.0], [66.2, 118.0], [66.3, 118.0], [66.4, 118.0], [66.5, 118.0], [66.6, 118.0], [66.7, 118.0], [66.8, 118.0], [66.9, 118.0], [67.0, 124.0], [67.1, 124.0], [67.2, 124.0], [67.3, 124.0], [67.4, 124.0], [67.5, 124.0], [67.6, 124.0], [67.7, 124.0], [67.8, 124.0], [67.9, 124.0], [68.0, 125.0], [68.1, 125.0], [68.2, 125.0], [68.3, 125.0], [68.4, 125.0], [68.5, 125.0], [68.6, 125.0], [68.7, 125.0], [68.8, 125.0], [68.9, 125.0], [69.0, 126.0], [69.1, 126.0], [69.2, 126.0], [69.3, 126.0], [69.4, 126.0], [69.5, 126.0], [69.6, 126.0], [69.7, 126.0], [69.8, 126.0], [69.9, 126.0], [70.0, 127.0], [70.1, 127.0], [70.2, 127.0], [70.3, 127.0], [70.4, 127.0], [70.5, 127.0], [70.6, 127.0], [70.7, 127.0], [70.8, 127.0], [70.9, 127.0], [71.0, 132.0], [71.1, 132.0], [71.2, 132.0], [71.3, 132.0], [71.4, 132.0], [71.5, 132.0], [71.6, 132.0], [71.7, 132.0], [71.8, 132.0], [71.9, 132.0], [72.0, 132.0], [72.1, 132.0], [72.2, 132.0], [72.3, 132.0], [72.4, 132.0], [72.5, 132.0], [72.6, 132.0], [72.7, 132.0], [72.8, 132.0], [72.9, 132.0], [73.0, 137.0], [73.1, 137.0], [73.2, 137.0], [73.3, 137.0], [73.4, 137.0], [73.5, 137.0], [73.6, 137.0], [73.7, 137.0], [73.8, 137.0], [73.9, 137.0], [74.0, 139.0], [74.1, 139.0], [74.2, 139.0], [74.3, 139.0], [74.4, 139.0], [74.5, 139.0], [74.6, 139.0], [74.7, 139.0], [74.8, 139.0], [74.9, 139.0], [75.0, 140.0], [75.1, 140.0], [75.2, 140.0], [75.3, 140.0], [75.4, 140.0], [75.5, 140.0], [75.6, 140.0], [75.7, 140.0], [75.8, 140.0], [75.9, 140.0], [76.0, 141.0], [76.1, 141.0], [76.2, 141.0], [76.3, 141.0], [76.4, 141.0], [76.5, 141.0], [76.6, 141.0], [76.7, 141.0], [76.8, 141.0], [76.9, 141.0], [77.0, 143.0], [77.1, 143.0], [77.2, 143.0], [77.3, 143.0], [77.4, 143.0], [77.5, 143.0], [77.6, 143.0], [77.7, 143.0], [77.8, 143.0], [77.9, 143.0], [78.0, 148.0], [78.1, 148.0], [78.2, 148.0], [78.3, 148.0], [78.4, 148.0], [78.5, 148.0], [78.6, 148.0], [78.7, 148.0], [78.8, 148.0], [78.9, 148.0], [79.0, 154.0], [79.1, 154.0], [79.2, 154.0], [79.3, 154.0], [79.4, 154.0], [79.5, 154.0], [79.6, 154.0], [79.7, 154.0], [79.8, 154.0], [79.9, 154.0], [80.0, 160.0], [80.1, 160.0], [80.2, 160.0], [80.3, 160.0], [80.4, 160.0], [80.5, 160.0], [80.6, 160.0], [80.7, 160.0], [80.8, 160.0], [80.9, 160.0], [81.0, 172.0], [81.1, 172.0], [81.2, 172.0], [81.3, 172.0], [81.4, 172.0], [81.5, 172.0], [81.6, 172.0], [81.7, 172.0], [81.8, 172.0], [81.9, 172.0], [82.0, 186.0], [82.1, 186.0], [82.2, 186.0], [82.3, 186.0], [82.4, 186.0], [82.5, 186.0], [82.6, 186.0], [82.7, 186.0], [82.8, 186.0], [82.9, 186.0], [83.0, 202.0], [83.1, 202.0], [83.2, 202.0], [83.3, 202.0], [83.4, 202.0], [83.5, 202.0], [83.6, 202.0], [83.7, 202.0], [83.8, 202.0], [83.9, 202.0], [84.0, 203.0], [84.1, 203.0], [84.2, 203.0], [84.3, 203.0], [84.4, 203.0], [84.5, 203.0], [84.6, 203.0], [84.7, 203.0], [84.8, 203.0], [84.9, 203.0], [85.0, 205.0], [85.1, 205.0], [85.2, 205.0], [85.3, 205.0], [85.4, 205.0], [85.5, 205.0], [85.6, 205.0], [85.7, 205.0], [85.8, 205.0], [85.9, 205.0], [86.0, 240.0], [86.1, 240.0], [86.2, 240.0], [86.3, 240.0], [86.4, 240.0], [86.5, 240.0], [86.6, 240.0], [86.7, 240.0], [86.8, 240.0], [86.9, 240.0], [87.0, 275.0], [87.1, 275.0], [87.2, 275.0], [87.3, 275.0], [87.4, 275.0], [87.5, 275.0], [87.6, 275.0], [87.7, 275.0], [87.8, 275.0], [87.9, 275.0], [88.0, 285.0], [88.1, 285.0], [88.2, 285.0], [88.3, 285.0], [88.4, 285.0], [88.5, 285.0], [88.6, 285.0], [88.7, 285.0], [88.8, 285.0], [88.9, 285.0], [89.0, 412.0], [89.1, 412.0], [89.2, 412.0], [89.3, 412.0], [89.4, 412.0], [89.5, 412.0], [89.6, 412.0], [89.7, 412.0], [89.8, 412.0], [89.9, 412.0], [90.0, 415.0], [90.1, 415.0], [90.2, 415.0], [90.3, 415.0], [90.4, 415.0], [90.5, 415.0], [90.6, 415.0], [90.7, 415.0], [90.8, 415.0], [90.9, 415.0], [91.0, 455.0], [91.1, 455.0], [91.2, 455.0], [91.3, 455.0], [91.4, 455.0], [91.5, 455.0], [91.6, 455.0], [91.7, 455.0], [91.8, 455.0], [91.9, 455.0], [92.0, 458.0], [92.1, 458.0], [92.2, 458.0], [92.3, 458.0], [92.4, 458.0], [92.5, 458.0], [92.6, 458.0], [92.7, 458.0], [92.8, 458.0], [92.9, 458.0], [93.0, 472.0], [93.1, 472.0], [93.2, 472.0], [93.3, 472.0], [93.4, 472.0], [93.5, 472.0], [93.6, 472.0], [93.7, 472.0], [93.8, 472.0], [93.9, 472.0], [94.0, 494.0], [94.1, 494.0], [94.2, 494.0], [94.3, 494.0], [94.4, 494.0], [94.5, 494.0], [94.6, 494.0], [94.7, 494.0], [94.8, 494.0], [94.9, 494.0], [95.0, 623.0], [95.1, 623.0], [95.2, 623.0], [95.3, 623.0], [95.4, 623.0], [95.5, 623.0], [95.6, 623.0], [95.7, 623.0], [95.8, 623.0], [95.9, 623.0], [96.0, 654.0], [96.1, 654.0], [96.2, 654.0], [96.3, 654.0], [96.4, 654.0], [96.5, 654.0], [96.6, 654.0], [96.7, 654.0], [96.8, 654.0], [96.9, 654.0], [97.0, 891.0], [97.1, 891.0], [97.2, 891.0], [97.3, 891.0], [97.4, 891.0], [97.5, 891.0], [97.6, 891.0], [97.7, 891.0], [97.8, 891.0], [97.9, 891.0], [98.0, 2031.0], [98.1, 2031.0], [98.2, 2031.0], [98.3, 2031.0], [98.4, 2031.0], [98.5, 2031.0], [98.6, 2031.0], [98.7, 2031.0], [98.8, 2031.0], [98.9, 2031.0], [99.0, 2042.0], [99.1, 2042.0], [99.2, 2042.0], [99.3, 2042.0], [99.4, 2042.0], [99.5, 2042.0], [99.6, 2042.0], [99.7, 2042.0], [99.8, 2042.0], [99.9, 2042.0]], "isOverall": false, "label": "1", "isController": false}, {"data": [[0.0, 30.0], [0.1, 30.0], [0.2, 30.0], [0.3, 30.0], [0.4, 30.0], [0.5, 30.0], [0.6, 30.0], [0.7, 30.0], [0.8, 30.0], [0.9, 30.0], [1.0, 32.0], [1.1, 32.0], [1.2, 32.0], [1.3, 32.0], [1.4, 32.0], [1.5, 34.0], [1.6, 34.0], [1.7, 34.0], [1.8, 34.0], [1.9, 34.0], [2.0, 34.0], [2.1, 34.0], [2.2, 34.0], [2.3, 34.0], [2.4, 34.0], [2.5, 35.0], [2.6, 35.0], [2.7, 35.0], [2.8, 35.0], [2.9, 35.0], [3.0, 35.0], [3.1, 35.0], [3.2, 35.0], [3.3, 35.0], [3.4, 35.0], [3.5, 36.0], [3.6, 36.0], [3.7, 36.0], [3.8, 36.0], [3.9, 36.0], [4.0, 37.0], [4.1, 37.0], [4.2, 37.0], [4.3, 37.0], [4.4, 37.0], [4.5, 37.0], [4.6, 37.0], [4.7, 37.0], [4.8, 37.0], [4.9, 37.0], [5.0, 37.0], [5.1, 37.0], [5.2, 37.0], [5.3, 37.0], [5.4, 37.0], [5.5, 37.0], [5.6, 37.0], [5.7, 37.0], [5.8, 37.0], [5.9, 37.0], [6.0, 38.0], [6.1, 38.0], [6.2, 38.0], [6.3, 38.0], [6.4, 38.0], [6.5, 39.0], [6.6, 39.0], [6.7, 39.0], [6.8, 39.0], [6.9, 39.0], [7.0, 39.0], [7.1, 39.0], [7.2, 39.0], [7.3, 39.0], [7.4, 39.0], [7.5, 39.0], [7.6, 39.0], [7.7, 39.0], [7.8, 39.0], [7.9, 39.0], [8.0, 40.0], [8.1, 40.0], [8.2, 40.0], [8.3, 40.0], [8.4, 40.0], [8.5, 41.0], [8.6, 41.0], [8.7, 41.0], [8.8, 41.0], [8.9, 41.0], [9.0, 41.0], [9.1, 41.0], [9.2, 41.0], [9.3, 41.0], [9.4, 41.0], [9.5, 41.0], [9.6, 41.0], [9.7, 41.0], [9.8, 41.0], [9.9, 41.0], [10.0, 42.0], [10.1, 42.0], [10.2, 42.0], [10.3, 42.0], [10.4, 42.0], [10.5, 42.0], [10.6, 42.0], [10.7, 42.0], [10.8, 42.0], [10.9, 42.0], [11.0, 42.0], [11.1, 42.0], [11.2, 42.0], [11.3, 42.0], [11.4, 42.0], [11.5, 43.0], [11.6, 43.0], [11.7, 43.0], [11.8, 43.0], [11.9, 43.0], [12.0, 45.0], [12.1, 45.0], [12.2, 45.0], [12.3, 45.0], [12.4, 45.0], [12.5, 47.0], [12.6, 47.0], [12.7, 47.0], [12.8, 47.0], [12.9, 47.0], [13.0, 47.0], [13.1, 47.0], [13.2, 47.0], [13.3, 47.0], [13.4, 47.0], [13.5, 48.0], [13.6, 48.0], [13.7, 48.0], [13.8, 48.0], [13.9, 48.0], [14.0, 48.0], [14.1, 48.0], [14.2, 48.0], [14.3, 48.0], [14.4, 48.0], [14.5, 48.0], [14.6, 48.0], [14.7, 48.0], [14.8, 48.0], [14.9, 48.0], [15.0, 48.0], [15.1, 48.0], [15.2, 48.0], [15.3, 48.0], [15.4, 48.0], [15.5, 49.0], [15.6, 49.0], [15.7, 49.0], [15.8, 49.0], [15.9, 49.0], [16.0, 49.0], [16.1, 49.0], [16.2, 49.0], [16.3, 49.0], [16.4, 49.0], [16.5, 49.0], [16.6, 49.0], [16.7, 49.0], [16.8, 49.0], [16.9, 49.0], [17.0, 50.0], [17.1, 50.0], [17.2, 50.0], [17.3, 50.0], [17.4, 50.0], [17.5, 51.0], [17.6, 51.0], [17.7, 51.0], [17.8, 51.0], [17.9, 51.0], [18.0, 52.0], [18.1, 52.0], [18.2, 52.0], [18.3, 52.0], [18.4, 52.0], [18.5, 52.0], [18.6, 52.0], [18.7, 52.0], [18.8, 52.0], [18.9, 52.0], [19.0, 52.0], [19.1, 52.0], [19.2, 52.0], [19.3, 52.0], [19.4, 52.0], [19.5, 53.0], [19.6, 53.0], [19.7, 53.0], [19.8, 53.0], [19.9, 53.0], [20.0, 53.0], [20.1, 53.0], [20.2, 53.0], [20.3, 53.0], [20.4, 53.0], [20.5, 53.0], [20.6, 53.0], [20.7, 53.0], [20.8, 53.0], [20.9, 53.0], [21.0, 54.0], [21.1, 54.0], [21.2, 54.0], [21.3, 54.0], [21.4, 54.0], [21.5, 55.0], [21.6, 55.0], [21.7, 55.0], [21.8, 55.0], [21.9, 55.0], [22.0, 57.0], [22.1, 57.0], [22.2, 57.0], [22.3, 57.0], [22.4, 57.0], [22.5, 57.0], [22.6, 57.0], [22.7, 57.0], [22.8, 57.0], [22.9, 57.0], [23.0, 57.0], [23.1, 57.0], [23.2, 57.0], [23.3, 57.0], [23.4, 57.0], [23.5, 59.0], [23.6, 59.0], [23.7, 59.0], [23.8, 59.0], [23.9, 59.0], [24.0, 60.0], [24.1, 60.0], [24.2, 60.0], [24.3, 60.0], [24.4, 60.0], [24.5, 61.0], [24.6, 61.0], [24.7, 61.0], [24.8, 61.0], [24.9, 61.0], [25.0, 61.0], [25.1, 61.0], [25.2, 61.0], [25.3, 61.0], [25.4, 61.0], [25.5, 62.0], [25.6, 62.0], [25.7, 62.0], [25.8, 62.0], [25.9, 62.0], [26.0, 62.0], [26.1, 62.0], [26.2, 62.0], [26.3, 62.0], [26.4, 62.0], [26.5, 62.0], [26.6, 62.0], [26.7, 62.0], [26.8, 62.0], [26.9, 62.0], [27.0, 62.0], [27.1, 62.0], [27.2, 62.0], [27.3, 62.0], [27.4, 62.0], [27.5, 62.0], [27.6, 62.0], [27.7, 62.0], [27.8, 62.0], [27.9, 62.0], [28.0, 63.0], [28.1, 63.0], [28.2, 63.0], [28.3, 63.0], [28.4, 63.0], [28.5, 65.0], [28.6, 65.0], [28.7, 65.0], [28.8, 65.0], [28.9, 65.0], [29.0, 66.0], [29.1, 66.0], [29.2, 66.0], [29.3, 66.0], [29.4, 66.0], [29.5, 67.0], [29.6, 67.0], [29.7, 67.0], [29.8, 67.0], [29.9, 67.0], [30.0, 70.0], [30.1, 70.0], [30.2, 70.0], [30.3, 70.0], [30.4, 70.0], [30.5, 71.0], [30.6, 71.0], [30.7, 71.0], [30.8, 71.0], [30.9, 71.0], [31.0, 73.0], [31.1, 73.0], [31.2, 73.0], [31.3, 73.0], [31.4, 73.0], [31.5, 73.0], [31.6, 73.0], [31.7, 73.0], [31.8, 73.0], [31.9, 73.0], [32.0, 75.0], [32.1, 75.0], [32.2, 75.0], [32.3, 75.0], [32.4, 75.0], [32.5, 75.0], [32.6, 75.0], [32.7, 75.0], [32.8, 75.0], [32.9, 75.0], [33.0, 77.0], [33.1, 77.0], [33.2, 77.0], [33.3, 77.0], [33.4, 77.0], [33.5, 77.0], [33.6, 77.0], [33.7, 77.0], [33.8, 77.0], [33.9, 77.0], [34.0, 79.0], [34.1, 79.0], [34.2, 79.0], [34.3, 79.0], [34.4, 79.0], [34.5, 79.0], [34.6, 79.0], [34.7, 79.0], [34.8, 79.0], [34.9, 79.0], [35.0, 80.0], [35.1, 80.0], [35.2, 80.0], [35.3, 80.0], [35.4, 80.0], [35.5, 80.0], [35.6, 80.0], [35.7, 80.0], [35.8, 80.0], [35.9, 80.0], [36.0, 80.0], [36.1, 80.0], [36.2, 80.0], [36.3, 80.0], [36.4, 80.0], [36.5, 81.0], [36.6, 81.0], [36.7, 81.0], [36.8, 81.0], [36.9, 81.0], [37.0, 81.0], [37.1, 81.0], [37.2, 81.0], [37.3, 81.0], [37.4, 81.0], [37.5, 81.0], [37.6, 81.0], [37.7, 81.0], [37.8, 81.0], [37.9, 81.0], [38.0, 81.0], [38.1, 81.0], [38.2, 81.0], [38.3, 81.0], [38.4, 81.0], [38.5, 81.0], [38.6, 81.0], [38.7, 81.0], [38.8, 81.0], [38.9, 81.0], [39.0, 81.0], [39.1, 81.0], [39.2, 81.0], [39.3, 81.0], [39.4, 81.0], [39.5, 82.0], [39.6, 82.0], [39.7, 82.0], [39.8, 82.0], [39.9, 82.0], [40.0, 82.0], [40.1, 82.0], [40.2, 82.0], [40.3, 82.0], [40.4, 82.0], [40.5, 83.0], [40.6, 83.0], [40.7, 83.0], [40.8, 83.0], [40.9, 83.0], [41.0, 83.0], [41.1, 83.0], [41.2, 83.0], [41.3, 83.0], [41.4, 83.0], [41.5, 84.0], [41.6, 84.0], [41.7, 84.0], [41.8, 84.0], [41.9, 84.0], [42.0, 84.0], [42.1, 84.0], [42.2, 84.0], [42.3, 84.0], [42.4, 84.0], [42.5, 85.0], [42.6, 85.0], [42.7, 85.0], [42.8, 85.0], [42.9, 85.0], [43.0, 85.0], [43.1, 85.0], [43.2, 85.0], [43.3, 85.0], [43.4, 85.0], [43.5, 85.0], [43.6, 85.0], [43.7, 85.0], [43.8, 85.0], [43.9, 85.0], [44.0, 86.0], [44.1, 86.0], [44.2, 86.0], [44.3, 86.0], [44.4, 86.0], [44.5, 86.0], [44.6, 86.0], [44.7, 86.0], [44.8, 86.0], [44.9, 86.0], [45.0, 86.0], [45.1, 86.0], [45.2, 86.0], [45.3, 86.0], [45.4, 86.0], [45.5, 87.0], [45.6, 87.0], [45.7, 87.0], [45.8, 87.0], [45.9, 87.0], [46.0, 88.0], [46.1, 88.0], [46.2, 88.0], [46.3, 88.0], [46.4, 88.0], [46.5, 89.0], [46.6, 89.0], [46.7, 89.0], [46.8, 89.0], [46.9, 89.0], [47.0, 90.0], [47.1, 90.0], [47.2, 90.0], [47.3, 90.0], [47.4, 90.0], [47.5, 90.0], [47.6, 90.0], [47.7, 90.0], [47.8, 90.0], [47.9, 90.0], [48.0, 91.0], [48.1, 91.0], [48.2, 91.0], [48.3, 91.0], [48.4, 91.0], [48.5, 91.0], [48.6, 91.0], [48.7, 91.0], [48.8, 91.0], [48.9, 91.0], [49.0, 92.0], [49.1, 92.0], [49.2, 92.0], [49.3, 92.0], [49.4, 92.0], [49.5, 92.0], [49.6, 92.0], [49.7, 92.0], [49.8, 92.0], [49.9, 92.0], [50.0, 92.0], [50.1, 92.0], [50.2, 92.0], [50.3, 92.0], [50.4, 92.0], [50.5, 93.0], [50.6, 93.0], [50.7, 93.0], [50.8, 93.0], [50.9, 93.0], [51.0, 93.0], [51.1, 93.0], [51.2, 93.0], [51.3, 93.0], [51.4, 93.0], [51.5, 94.0], [51.6, 94.0], [51.7, 94.0], [51.8, 94.0], [51.9, 94.0], [52.0, 97.0], [52.1, 97.0], [52.2, 97.0], [52.3, 97.0], [52.4, 97.0], [52.5, 97.0], [52.6, 97.0], [52.7, 97.0], [52.8, 97.0], [52.9, 97.0], [53.0, 97.0], [53.1, 97.0], [53.2, 97.0], [53.3, 97.0], [53.4, 97.0], [53.5, 98.0], [53.6, 98.0], [53.7, 98.0], [53.8, 98.0], [53.9, 98.0], [54.0, 98.0], [54.1, 98.0], [54.2, 98.0], [54.3, 98.0], [54.4, 98.0], [54.5, 100.0], [54.6, 100.0], [54.7, 100.0], [54.8, 100.0], [54.9, 100.0], [55.0, 100.0], [55.1, 100.0], [55.2, 100.0], [55.3, 100.0], [55.4, 100.0], [55.5, 101.0], [55.6, 101.0], [55.7, 101.0], [55.8, 101.0], [55.9, 101.0], [56.0, 102.0], [56.1, 102.0], [56.2, 102.0], [56.3, 102.0], [56.4, 102.0], [56.5, 102.0], [56.6, 102.0], [56.7, 102.0], [56.8, 102.0], [56.9, 102.0], [57.0, 102.0], [57.1, 102.0], [57.2, 102.0], [57.3, 102.0], [57.4, 102.0], [57.5, 102.0], [57.6, 102.0], [57.7, 102.0], [57.8, 102.0], [57.9, 102.0], [58.0, 104.0], [58.1, 104.0], [58.2, 104.0], [58.3, 104.0], [58.4, 104.0], [58.5, 104.0], [58.6, 104.0], [58.7, 104.0], [58.8, 104.0], [58.9, 104.0], [59.0, 104.0], [59.1, 104.0], [59.2, 104.0], [59.3, 104.0], [59.4, 104.0], [59.5, 106.0], [59.6, 106.0], [59.7, 106.0], [59.8, 106.0], [59.9, 106.0], [60.0, 110.0], [60.1, 110.0], [60.2, 110.0], [60.3, 110.0], [60.4, 110.0], [60.5, 110.0], [60.6, 110.0], [60.7, 110.0], [60.8, 110.0], [60.9, 110.0], [61.0, 111.0], [61.1, 111.0], [61.2, 111.0], [61.3, 111.0], [61.4, 111.0], [61.5, 113.0], [61.6, 113.0], [61.7, 113.0], [61.8, 113.0], [61.9, 113.0], [62.0, 113.0], [62.1, 113.0], [62.2, 113.0], [62.3, 113.0], [62.4, 113.0], [62.5, 115.0], [62.6, 115.0], [62.7, 115.0], [62.8, 115.0], [62.9, 115.0], [63.0, 117.0], [63.1, 117.0], [63.2, 117.0], [63.3, 117.0], [63.4, 117.0], [63.5, 118.0], [63.6, 118.0], [63.7, 118.0], [63.8, 118.0], [63.9, 118.0], [64.0, 119.0], [64.1, 119.0], [64.2, 119.0], [64.3, 119.0], [64.4, 119.0], [64.5, 120.0], [64.6, 120.0], [64.7, 120.0], [64.8, 120.0], [64.9, 120.0], [65.0, 122.0], [65.1, 122.0], [65.2, 122.0], [65.3, 122.0], [65.4, 122.0], [65.5, 122.0], [65.6, 122.0], [65.7, 122.0], [65.8, 122.0], [65.9, 122.0], [66.0, 123.0], [66.1, 123.0], [66.2, 123.0], [66.3, 123.0], [66.4, 123.0], [66.5, 123.0], [66.6, 123.0], [66.7, 123.0], [66.8, 123.0], [66.9, 123.0], [67.0, 126.0], [67.1, 126.0], [67.2, 126.0], [67.3, 126.0], [67.4, 126.0], [67.5, 128.0], [67.6, 128.0], [67.7, 128.0], [67.8, 128.0], [67.9, 128.0], [68.0, 131.0], [68.1, 131.0], [68.2, 131.0], [68.3, 131.0], [68.4, 131.0], [68.5, 133.0], [68.6, 133.0], [68.7, 133.0], [68.8, 133.0], [68.9, 133.0], [69.0, 137.0], [69.1, 137.0], [69.2, 137.0], [69.3, 137.0], [69.4, 137.0], [69.5, 138.0], [69.6, 138.0], [69.7, 138.0], [69.8, 138.0], [69.9, 138.0], [70.0, 138.0], [70.1, 138.0], [70.2, 138.0], [70.3, 138.0], [70.4, 138.0], [70.5, 138.0], [70.6, 138.0], [70.7, 138.0], [70.8, 138.0], [70.9, 138.0], [71.0, 141.0], [71.1, 141.0], [71.2, 141.0], [71.3, 141.0], [71.4, 141.0], [71.5, 142.0], [71.6, 142.0], [71.7, 142.0], [71.8, 142.0], [71.9, 142.0], [72.0, 145.0], [72.1, 145.0], [72.2, 145.0], [72.3, 145.0], [72.4, 145.0], [72.5, 146.0], [72.6, 146.0], [72.7, 146.0], [72.8, 146.0], [72.9, 146.0], [73.0, 148.0], [73.1, 148.0], [73.2, 148.0], [73.3, 148.0], [73.4, 148.0], [73.5, 148.0], [73.6, 148.0], [73.7, 148.0], [73.8, 148.0], [73.9, 148.0], [74.0, 157.0], [74.1, 157.0], [74.2, 157.0], [74.3, 157.0], [74.4, 157.0], [74.5, 158.0], [74.6, 158.0], [74.7, 158.0], [74.8, 158.0], [74.9, 158.0], [75.0, 158.0], [75.1, 158.0], [75.2, 158.0], [75.3, 158.0], [75.4, 158.0], [75.5, 159.0], [75.6, 159.0], [75.7, 159.0], [75.8, 159.0], [75.9, 159.0], [76.0, 159.0], [76.1, 159.0], [76.2, 159.0], [76.3, 159.0], [76.4, 159.0], [76.5, 161.0], [76.6, 161.0], [76.7, 161.0], [76.8, 161.0], [76.9, 161.0], [77.0, 175.0], [77.1, 175.0], [77.2, 175.0], [77.3, 175.0], [77.4, 175.0], [77.5, 178.0], [77.6, 178.0], [77.7, 178.0], [77.8, 178.0], [77.9, 178.0], [78.0, 178.0], [78.1, 178.0], [78.2, 178.0], [78.3, 178.0], [78.4, 178.0], [78.5, 179.0], [78.6, 179.0], [78.7, 179.0], [78.8, 179.0], [78.9, 179.0], [79.0, 179.0], [79.1, 179.0], [79.2, 179.0], [79.3, 179.0], [79.4, 179.0], [79.5, 184.0], [79.6, 184.0], [79.7, 184.0], [79.8, 184.0], [79.9, 184.0], [80.0, 186.0], [80.1, 186.0], [80.2, 186.0], [80.3, 186.0], [80.4, 186.0], [80.5, 189.0], [80.6, 189.0], [80.7, 189.0], [80.8, 189.0], [80.9, 189.0], [81.0, 191.0], [81.1, 191.0], [81.2, 191.0], [81.3, 191.0], [81.4, 191.0], [81.5, 192.0], [81.6, 192.0], [81.7, 192.0], [81.8, 192.0], [81.9, 192.0], [82.0, 196.0], [82.1, 196.0], [82.2, 196.0], [82.3, 196.0], [82.4, 196.0], [82.5, 198.0], [82.6, 198.0], [82.7, 198.0], [82.8, 198.0], [82.9, 198.0], [83.0, 200.0], [83.1, 200.0], [83.2, 200.0], [83.3, 200.0], [83.4, 200.0], [83.5, 206.0], [83.6, 206.0], [83.7, 206.0], [83.8, 206.0], [83.9, 206.0], [84.0, 208.0], [84.1, 208.0], [84.2, 208.0], [84.3, 208.0], [84.4, 208.0], [84.5, 212.0], [84.6, 212.0], [84.7, 212.0], [84.8, 212.0], [84.9, 212.0], [85.0, 215.0], [85.1, 215.0], [85.2, 215.0], [85.3, 215.0], [85.4, 215.0], [85.5, 220.0], [85.6, 220.0], [85.7, 220.0], [85.8, 220.0], [85.9, 220.0], [86.0, 226.0], [86.1, 226.0], [86.2, 226.0], [86.3, 226.0], [86.4, 226.0], [86.5, 231.0], [86.6, 231.0], [86.7, 231.0], [86.8, 231.0], [86.9, 231.0], [87.0, 236.0], [87.1, 236.0], [87.2, 236.0], [87.3, 236.0], [87.4, 236.0], [87.5, 238.0], [87.6, 238.0], [87.7, 238.0], [87.8, 238.0], [87.9, 238.0], [88.0, 254.0], [88.1, 254.0], [88.2, 254.0], [88.3, 254.0], [88.4, 254.0], [88.5, 263.0], [88.6, 263.0], [88.7, 263.0], [88.8, 263.0], [88.9, 263.0], [89.0, 283.0], [89.1, 283.0], [89.2, 283.0], [89.3, 283.0], [89.4, 283.0], [89.5, 297.0], [89.6, 297.0], [89.7, 297.0], [89.8, 297.0], [89.9, 297.0], [90.0, 302.0], [90.1, 302.0], [90.2, 302.0], [90.3, 302.0], [90.4, 302.0], [90.5, 325.0], [90.6, 325.0], [90.7, 325.0], [90.8, 325.0], [90.9, 325.0], [91.0, 325.0], [91.1, 325.0], [91.2, 325.0], [91.3, 325.0], [91.4, 325.0], [91.5, 343.0], [91.6, 343.0], [91.7, 343.0], [91.8, 343.0], [91.9, 343.0], [92.0, 344.0], [92.1, 344.0], [92.2, 344.0], [92.3, 344.0], [92.4, 344.0], [92.5, 362.0], [92.6, 362.0], [92.7, 362.0], [92.8, 362.0], [92.9, 362.0], [93.0, 374.0], [93.1, 374.0], [93.2, 374.0], [93.3, 374.0], [93.4, 374.0], [93.5, 382.0], [93.6, 382.0], [93.7, 382.0], [93.8, 382.0], [93.9, 382.0], [94.0, 408.0], [94.1, 408.0], [94.2, 408.0], [94.3, 408.0], [94.4, 408.0], [94.5, 508.0], [94.6, 508.0], [94.7, 508.0], [94.8, 508.0], [94.9, 508.0], [95.0, 519.0], [95.1, 519.0], [95.2, 519.0], [95.3, 519.0], [95.4, 519.0], [95.5, 525.0], [95.6, 525.0], [95.7, 525.0], [95.8, 525.0], [95.9, 525.0], [96.0, 555.0], [96.1, 555.0], [96.2, 555.0], [96.3, 555.0], [96.4, 555.0], [96.5, 581.0], [96.6, 581.0], [96.7, 581.0], [96.8, 581.0], [96.9, 581.0], [97.0, 627.0], [97.1, 627.0], [97.2, 627.0], [97.3, 627.0], [97.4, 627.0], [97.5, 852.0], [97.6, 852.0], [97.7, 852.0], [97.8, 852.0], [97.9, 852.0], [98.0, 852.0], [98.1, 852.0], [98.2, 852.0], [98.3, 852.0], [98.4, 852.0], [98.5, 909.0], [98.6, 909.0], [98.7, 909.0], [98.8, 909.0], [98.9, 909.0], [99.0, 2358.0], [99.1, 2358.0], [99.2, 2358.0], [99.3, 2358.0], [99.4, 2358.0], [99.5, 2459.0], [99.6, 2459.0], [99.7, 2459.0], [99.8, 2459.0], [99.9, 2459.0]], "isOverall": false, "label": "2", "isController": false}, {"data": [[0.0, 28.0], [0.1, 28.0], [0.2, 28.0], [0.3, 29.0], [0.4, 29.0], [0.5, 30.0], [0.6, 30.0], [0.7, 30.0], [0.8, 30.0], [0.9, 30.0], [1.0, 31.0], [1.1, 31.0], [1.2, 31.0], [1.3, 33.0], [1.4, 33.0], [1.5, 34.0], [1.6, 34.0], [1.7, 34.0], [1.8, 34.0], [1.9, 34.0], [2.0, 34.0], [2.1, 34.0], [2.2, 34.0], [2.3, 34.0], [2.4, 34.0], [2.5, 34.0], [2.6, 34.0], [2.7, 34.0], [2.8, 35.0], [2.9, 35.0], [3.0, 35.0], [3.1, 35.0], [3.2, 35.0], [3.3, 35.0], [3.4, 35.0], [3.5, 36.0], [3.6, 36.0], [3.7, 36.0], [3.8, 36.0], [3.9, 36.0], [4.0, 36.0], [4.1, 36.0], [4.2, 36.0], [4.3, 36.0], [4.4, 36.0], [4.5, 37.0], [4.6, 37.0], [4.7, 37.0], [4.8, 38.0], [4.9, 38.0], [5.0, 38.0], [5.1, 38.0], [5.2, 38.0], [5.3, 38.0], [5.4, 38.0], [5.5, 38.0], [5.6, 38.0], [5.7, 38.0], [5.8, 38.0], [5.9, 38.0], [6.0, 38.0], [6.1, 38.0], [6.2, 38.0], [6.3, 39.0], [6.4, 39.0], [6.5, 39.0], [6.6, 39.0], [6.7, 39.0], [6.8, 39.0], [6.9, 39.0], [7.0, 39.0], [7.1, 39.0], [7.2, 39.0], [7.3, 41.0], [7.4, 41.0], [7.5, 41.0], [7.6, 41.0], [7.7, 41.0], [7.8, 42.0], [7.9, 42.0], [8.0, 43.0], [8.1, 43.0], [8.2, 43.0], [8.3, 43.0], [8.4, 43.0], [8.5, 43.0], [8.6, 43.0], [8.7, 43.0], [8.8, 44.0], [8.9, 44.0], [9.0, 44.0], [9.1, 44.0], [9.2, 44.0], [9.3, 45.0], [9.4, 45.0], [9.5, 45.0], [9.6, 45.0], [9.7, 45.0], [9.8, 46.0], [9.9, 46.0], [10.0, 46.0], [10.1, 46.0], [10.2, 46.0], [10.3, 46.0], [10.4, 46.0], [10.5, 47.0], [10.6, 47.0], [10.7, 47.0], [10.8, 48.0], [10.9, 48.0], [11.0, 48.0], [11.1, 48.0], [11.2, 48.0], [11.3, 49.0], [11.4, 49.0], [11.5, 49.0], [11.6, 49.0], [11.7, 49.0], [11.8, 49.0], [11.9, 49.0], [12.0, 49.0], [12.1, 49.0], [12.2, 49.0], [12.3, 50.0], [12.4, 50.0], [12.5, 50.0], [12.6, 50.0], [12.7, 50.0], [12.8, 50.0], [12.9, 50.0], [13.0, 50.0], [13.1, 50.0], [13.2, 50.0], [13.3, 51.0], [13.4, 51.0], [13.5, 51.0], [13.6, 51.0], [13.7, 51.0], [13.8, 51.0], [13.9, 51.0], [14.0, 51.0], [14.1, 51.0], [14.2, 51.0], [14.3, 52.0], [14.4, 52.0], [14.5, 52.0], [14.6, 52.0], [14.7, 52.0], [14.8, 52.0], [14.9, 52.0], [15.0, 52.0], [15.1, 52.0], [15.2, 52.0], [15.3, 52.0], [15.4, 52.0], [15.5, 53.0], [15.6, 53.0], [15.7, 53.0], [15.8, 54.0], [15.9, 54.0], [16.0, 55.0], [16.1, 55.0], [16.2, 55.0], [16.3, 55.0], [16.4, 55.0], [16.5, 56.0], [16.6, 56.0], [16.7, 56.0], [16.8, 56.0], [16.9, 56.0], [17.0, 56.0], [17.1, 56.0], [17.2, 56.0], [17.3, 56.0], [17.4, 56.0], [17.5, 57.0], [17.6, 57.0], [17.7, 57.0], [17.8, 57.0], [17.9, 57.0], [18.0, 57.0], [18.1, 57.0], [18.2, 57.0], [18.3, 58.0], [18.4, 58.0], [18.5, 58.0], [18.6, 58.0], [18.7, 58.0], [18.8, 58.0], [18.9, 58.0], [19.0, 59.0], [19.1, 59.0], [19.2, 59.0], [19.3, 59.0], [19.4, 59.0], [19.5, 59.0], [19.6, 59.0], [19.7, 59.0], [19.8, 59.0], [19.9, 59.0], [20.0, 59.0], [20.1, 59.0], [20.2, 59.0], [20.3, 59.0], [20.4, 59.0], [20.5, 60.0], [20.6, 60.0], [20.7, 60.0], [20.8, 61.0], [20.9, 61.0], [21.0, 62.0], [21.1, 62.0], [21.2, 62.0], [21.3, 62.0], [21.4, 62.0], [21.5, 62.0], [21.6, 62.0], [21.7, 62.0], [21.8, 62.0], [21.9, 62.0], [22.0, 63.0], [22.1, 63.0], [22.2, 63.0], [22.3, 63.0], [22.4, 63.0], [22.5, 63.0], [22.6, 63.0], [22.7, 63.0], [22.8, 64.0], [22.9, 64.0], [23.0, 65.0], [23.1, 65.0], [23.2, 65.0], [23.3, 66.0], [23.4, 66.0], [23.5, 66.0], [23.6, 66.0], [23.7, 66.0], [23.8, 66.0], [23.9, 66.0], [24.0, 66.0], [24.1, 66.0], [24.2, 66.0], [24.3, 66.0], [24.4, 66.0], [24.5, 66.0], [24.6, 66.0], [24.7, 66.0], [24.8, 66.0], [24.9, 66.0], [25.0, 67.0], [25.1, 67.0], [25.2, 67.0], [25.3, 67.0], [25.4, 67.0], [25.5, 68.0], [25.6, 68.0], [25.7, 68.0], [25.8, 68.0], [25.9, 68.0], [26.0, 68.0], [26.1, 68.0], [26.2, 68.0], [26.3, 68.0], [26.4, 68.0], [26.5, 69.0], [26.6, 69.0], [26.7, 69.0], [26.8, 70.0], [26.9, 70.0], [27.0, 70.0], [27.1, 70.0], [27.2, 70.0], [27.3, 71.0], [27.4, 71.0], [27.5, 72.0], [27.6, 72.0], [27.7, 72.0], [27.8, 73.0], [27.9, 73.0], [28.0, 76.0], [28.1, 76.0], [28.2, 76.0], [28.3, 76.0], [28.4, 76.0], [28.5, 76.0], [28.6, 76.0], [28.7, 76.0], [28.8, 77.0], [28.9, 77.0], [29.0, 77.0], [29.1, 77.0], [29.2, 77.0], [29.3, 78.0], [29.4, 78.0], [29.5, 78.0], [29.6, 78.0], [29.7, 78.0], [29.8, 78.0], [29.9, 78.0], [30.0, 79.0], [30.1, 79.0], [30.2, 79.0], [30.3, 79.0], [30.4, 79.0], [30.5, 79.0], [30.6, 79.0], [30.7, 79.0], [30.8, 79.0], [30.9, 79.0], [31.0, 79.0], [31.1, 79.0], [31.2, 79.0], [31.3, 80.0], [31.4, 80.0], [31.5, 80.0], [31.6, 80.0], [31.7, 80.0], [31.8, 81.0], [31.9, 81.0], [32.0, 81.0], [32.1, 81.0], [32.2, 81.0], [32.3, 81.0], [32.4, 81.0], [32.5, 82.0], [32.6, 82.0], [32.7, 82.0], [32.8, 82.0], [32.9, 82.0], [33.0, 82.0], [33.1, 82.0], [33.2, 82.0], [33.3, 83.0], [33.4, 83.0], [33.5, 83.0], [33.6, 83.0], [33.7, 83.0], [33.8, 84.0], [33.9, 84.0], [34.0, 84.0], [34.1, 84.0], [34.2, 84.0], [34.3, 85.0], [34.4, 85.0], [34.5, 85.0], [34.6, 85.0], [34.7, 85.0], [34.8, 85.0], [34.9, 85.0], [35.0, 86.0], [35.1, 86.0], [35.2, 86.0], [35.3, 86.0], [35.4, 86.0], [35.5, 86.0], [35.6, 86.0], [35.7, 86.0], [35.8, 88.0], [35.9, 88.0], [36.0, 88.0], [36.1, 88.0], [36.2, 88.0], [36.3, 88.0], [36.4, 88.0], [36.5, 89.0], [36.6, 89.0], [36.7, 89.0], [36.8, 89.0], [36.9, 89.0], [37.0, 90.0], [37.1, 90.0], [37.2, 90.0], [37.3, 90.0], [37.4, 90.0], [37.5, 90.0], [37.6, 90.0], [37.7, 90.0], [37.8, 90.0], [37.9, 90.0], [38.0, 90.0], [38.1, 90.0], [38.2, 90.0], [38.3, 91.0], [38.4, 91.0], [38.5, 92.0], [38.6, 92.0], [38.7, 92.0], [38.8, 92.0], [38.9, 92.0], [39.0, 93.0], [39.1, 93.0], [39.2, 93.0], [39.3, 94.0], [39.4, 94.0], [39.5, 95.0], [39.6, 95.0], [39.7, 95.0], [39.8, 95.0], [39.9, 95.0], [40.0, 97.0], [40.1, 97.0], [40.2, 97.0], [40.3, 98.0], [40.4, 98.0], [40.5, 98.0], [40.6, 98.0], [40.7, 98.0], [40.8, 99.0], [40.9, 99.0], [41.0, 99.0], [41.1, 99.0], [41.2, 99.0], [41.3, 100.0], [41.4, 100.0], [41.5, 100.0], [41.6, 100.0], [41.7, 100.0], [41.8, 101.0], [41.9, 101.0], [42.0, 101.0], [42.1, 101.0], [42.2, 101.0], [42.3, 101.0], [42.4, 101.0], [42.5, 103.0], [42.6, 103.0], [42.7, 103.0], [42.8, 103.0], [42.9, 103.0], [43.0, 104.0], [43.1, 104.0], [43.2, 104.0], [43.3, 104.0], [43.4, 104.0], [43.5, 104.0], [43.6, 104.0], [43.7, 104.0], [43.8, 105.0], [43.9, 105.0], [44.0, 106.0], [44.1, 106.0], [44.2, 106.0], [44.3, 106.0], [44.4, 106.0], [44.5, 107.0], [44.6, 107.0], [44.7, 107.0], [44.8, 108.0], [44.9, 108.0], [45.0, 108.0], [45.1, 108.0], [45.2, 108.0], [45.3, 108.0], [45.4, 108.0], [45.5, 108.0], [45.6, 108.0], [45.7, 108.0], [45.8, 108.0], [45.9, 108.0], [46.0, 109.0], [46.1, 109.0], [46.2, 109.0], [46.3, 109.0], [46.4, 109.0], [46.5, 110.0], [46.6, 110.0], [46.7, 110.0], [46.8, 111.0], [46.9, 111.0], [47.0, 111.0], [47.1, 111.0], [47.2, 111.0], [47.3, 112.0], [47.4, 112.0], [47.5, 112.0], [47.6, 112.0], [47.7, 112.0], [47.8, 113.0], [47.9, 113.0], [48.0, 113.0], [48.1, 113.0], [48.2, 113.0], [48.3, 114.0], [48.4, 114.0], [48.5, 114.0], [48.6, 114.0], [48.7, 114.0], [48.8, 115.0], [48.9, 115.0], [49.0, 115.0], [49.1, 115.0], [49.2, 115.0], [49.3, 115.0], [49.4, 115.0], [49.5, 115.0], [49.6, 115.0], [49.7, 115.0], [49.8, 116.0], [49.9, 116.0], [50.0, 117.0], [50.1, 117.0], [50.2, 117.0], [50.3, 118.0], [50.4, 118.0], [50.5, 118.0], [50.6, 118.0], [50.7, 118.0], [50.8, 119.0], [50.9, 119.0], [51.0, 120.0], [51.1, 120.0], [51.2, 120.0], [51.3, 120.0], [51.4, 120.0], [51.5, 121.0], [51.6, 121.0], [51.7, 121.0], [51.8, 121.0], [51.9, 121.0], [52.0, 121.0], [52.1, 121.0], [52.2, 121.0], [52.3, 121.0], [52.4, 121.0], [52.5, 122.0], [52.6, 122.0], [52.7, 122.0], [52.8, 123.0], [52.9, 123.0], [53.0, 123.0], [53.1, 123.0], [53.2, 123.0], [53.3, 123.0], [53.4, 123.0], [53.5, 124.0], [53.6, 124.0], [53.7, 124.0], [53.8, 124.0], [53.9, 124.0], [54.0, 124.0], [54.1, 124.0], [54.2, 124.0], [54.3, 124.0], [54.4, 124.0], [54.5, 124.0], [54.6, 124.0], [54.7, 124.0], [54.8, 127.0], [54.9, 127.0], [55.0, 128.0], [55.1, 128.0], [55.2, 128.0], [55.3, 128.0], [55.4, 128.0], [55.5, 128.0], [55.6, 128.0], [55.7, 128.0], [55.8, 129.0], [55.9, 129.0], [56.0, 130.0], [56.1, 130.0], [56.2, 130.0], [56.3, 132.0], [56.4, 132.0], [56.5, 132.0], [56.6, 132.0], [56.7, 132.0], [56.8, 133.0], [56.9, 133.0], [57.0, 134.0], [57.1, 134.0], [57.2, 134.0], [57.3, 135.0], [57.4, 135.0], [57.5, 136.0], [57.6, 136.0], [57.7, 136.0], [57.8, 136.0], [57.9, 136.0], [58.0, 136.0], [58.1, 136.0], [58.2, 136.0], [58.3, 137.0], [58.4, 137.0], [58.5, 137.0], [58.6, 137.0], [58.7, 137.0], [58.8, 137.0], [58.9, 137.0], [59.0, 138.0], [59.1, 138.0], [59.2, 138.0], [59.3, 139.0], [59.4, 139.0], [59.5, 139.0], [59.6, 139.0], [59.7, 139.0], [59.8, 141.0], [59.9, 141.0], [60.0, 142.0], [60.1, 142.0], [60.2, 142.0], [60.3, 143.0], [60.4, 143.0], [60.5, 145.0], [60.6, 145.0], [60.7, 145.0], [60.8, 146.0], [60.9, 146.0], [61.0, 147.0], [61.1, 147.0], [61.2, 147.0], [61.3, 147.0], [61.4, 147.0], [61.5, 148.0], [61.6, 148.0], [61.7, 148.0], [61.8, 149.0], [61.9, 149.0], [62.0, 151.0], [62.1, 151.0], [62.2, 151.0], [62.3, 153.0], [62.4, 153.0], [62.5, 154.0], [62.6, 154.0], [62.7, 154.0], [62.8, 156.0], [62.9, 156.0], [63.0, 157.0], [63.1, 157.0], [63.2, 157.0], [63.3, 158.0], [63.4, 158.0], [63.5, 160.0], [63.6, 160.0], [63.7, 160.0], [63.8, 161.0], [63.9, 161.0], [64.0, 161.0], [64.1, 161.0], [64.2, 161.0], [64.3, 162.0], [64.4, 162.0], [64.5, 163.0], [64.6, 163.0], [64.7, 163.0], [64.8, 163.0], [64.9, 163.0], [65.0, 166.0], [65.1, 166.0], [65.2, 166.0], [65.3, 166.0], [65.4, 166.0], [65.5, 166.0], [65.6, 166.0], [65.7, 166.0], [65.8, 168.0], [65.9, 168.0], [66.0, 170.0], [66.1, 170.0], [66.2, 170.0], [66.3, 170.0], [66.4, 170.0], [66.5, 170.0], [66.6, 170.0], [66.7, 170.0], [66.8, 171.0], [66.9, 171.0], [67.0, 171.0], [67.1, 171.0], [67.2, 171.0], [67.3, 175.0], [67.4, 175.0], [67.5, 175.0], [67.6, 175.0], [67.7, 175.0], [67.8, 176.0], [67.9, 176.0], [68.0, 177.0], [68.1, 177.0], [68.2, 177.0], [68.3, 177.0], [68.4, 177.0], [68.5, 179.0], [68.6, 179.0], [68.7, 179.0], [68.8, 179.0], [68.9, 179.0], [69.0, 180.0], [69.1, 180.0], [69.2, 180.0], [69.3, 181.0], [69.4, 181.0], [69.5, 183.0], [69.6, 183.0], [69.7, 183.0], [69.8, 185.0], [69.9, 185.0], [70.0, 185.0], [70.1, 185.0], [70.2, 185.0], [70.3, 188.0], [70.4, 188.0], [70.5, 188.0], [70.6, 188.0], [70.7, 188.0], [70.8, 190.0], [70.9, 190.0], [71.0, 191.0], [71.1, 191.0], [71.2, 191.0], [71.3, 192.0], [71.4, 192.0], [71.5, 196.0], [71.6, 196.0], [71.7, 196.0], [71.8, 196.0], [71.9, 196.0], [72.0, 199.0], [72.1, 199.0], [72.2, 199.0], [72.3, 204.0], [72.4, 204.0], [72.5, 205.0], [72.6, 205.0], [72.7, 205.0], [72.8, 205.0], [72.9, 205.0], [73.0, 205.0], [73.1, 205.0], [73.2, 205.0], [73.3, 207.0], [73.4, 207.0], [73.5, 207.0], [73.6, 207.0], [73.7, 207.0], [73.8, 211.0], [73.9, 211.0], [74.0, 214.0], [74.1, 214.0], [74.2, 214.0], [74.3, 215.0], [74.4, 215.0], [74.5, 216.0], [74.6, 216.0], [74.7, 216.0], [74.8, 217.0], [74.9, 217.0], [75.0, 217.0], [75.1, 217.0], [75.2, 217.0], [75.3, 217.0], [75.4, 217.0], [75.5, 222.0], [75.6, 222.0], [75.7, 222.0], [75.8, 225.0], [75.9, 225.0], [76.0, 226.0], [76.1, 226.0], [76.2, 226.0], [76.3, 228.0], [76.4, 228.0], [76.5, 230.0], [76.6, 230.0], [76.7, 230.0], [76.8, 230.0], [76.9, 230.0], [77.0, 237.0], [77.1, 237.0], [77.2, 237.0], [77.3, 241.0], [77.4, 241.0], [77.5, 244.0], [77.6, 244.0], [77.7, 244.0], [77.8, 245.0], [77.9, 245.0], [78.0, 247.0], [78.1, 247.0], [78.2, 247.0], [78.3, 247.0], [78.4, 247.0], [78.5, 253.0], [78.6, 253.0], [78.7, 253.0], [78.8, 256.0], [78.9, 256.0], [79.0, 257.0], [79.1, 257.0], [79.2, 257.0], [79.3, 259.0], [79.4, 259.0], [79.5, 260.0], [79.6, 260.0], [79.7, 260.0], [79.8, 261.0], [79.9, 261.0], [80.0, 262.0], [80.1, 262.0], [80.2, 262.0], [80.3, 262.0], [80.4, 262.0], [80.5, 263.0], [80.6, 263.0], [80.7, 263.0], [80.8, 271.0], [80.9, 271.0], [81.0, 277.0], [81.1, 277.0], [81.2, 277.0], [81.3, 277.0], [81.4, 277.0], [81.5, 278.0], [81.6, 278.0], [81.7, 278.0], [81.8, 281.0], [81.9, 281.0], [82.0, 284.0], [82.1, 284.0], [82.2, 284.0], [82.3, 285.0], [82.4, 285.0], [82.5, 288.0], [82.6, 288.0], [82.7, 288.0], [82.8, 293.0], [82.9, 293.0], [83.0, 296.0], [83.1, 296.0], [83.2, 296.0], [83.3, 299.0], [83.4, 299.0], [83.5, 305.0], [83.6, 305.0], [83.7, 305.0], [83.8, 307.0], [83.9, 307.0], [84.0, 308.0], [84.1, 308.0], [84.2, 308.0], [84.3, 309.0], [84.4, 309.0], [84.5, 311.0], [84.6, 311.0], [84.7, 311.0], [84.8, 312.0], [84.9, 312.0], [85.0, 313.0], [85.1, 313.0], [85.2, 313.0], [85.3, 314.0], [85.4, 314.0], [85.5, 315.0], [85.6, 315.0], [85.7, 315.0], [85.8, 316.0], [85.9, 316.0], [86.0, 321.0], [86.1, 321.0], [86.2, 321.0], [86.3, 339.0], [86.4, 339.0], [86.5, 341.0], [86.6, 341.0], [86.7, 341.0], [86.8, 341.0], [86.9, 341.0], [87.0, 348.0], [87.1, 348.0], [87.2, 348.0], [87.3, 357.0], [87.4, 357.0], [87.5, 360.0], [87.6, 360.0], [87.7, 360.0], [87.8, 367.0], [87.9, 367.0], [88.0, 367.0], [88.1, 367.0], [88.2, 367.0], [88.3, 373.0], [88.4, 373.0], [88.5, 385.0], [88.6, 385.0], [88.7, 385.0], [88.8, 388.0], [88.9, 388.0], [89.0, 394.0], [89.1, 394.0], [89.2, 394.0], [89.3, 401.0], [89.4, 401.0], [89.5, 405.0], [89.6, 405.0], [89.7, 405.0], [89.8, 411.0], [89.9, 411.0], [90.0, 411.0], [90.1, 411.0], [90.2, 411.0], [90.3, 445.0], [90.4, 445.0], [90.5, 459.0], [90.6, 459.0], [90.7, 459.0], [90.8, 462.0], [90.9, 462.0], [91.0, 477.0], [91.1, 477.0], [91.2, 477.0], [91.3, 488.0], [91.4, 488.0], [91.5, 488.0], [91.6, 488.0], [91.7, 488.0], [91.8, 494.0], [91.9, 494.0], [92.0, 510.0], [92.1, 510.0], [92.2, 510.0], [92.3, 526.0], [92.4, 526.0], [92.5, 527.0], [92.6, 527.0], [92.7, 527.0], [92.8, 528.0], [92.9, 528.0], [93.0, 545.0], [93.1, 545.0], [93.2, 545.0], [93.3, 570.0], [93.4, 570.0], [93.5, 600.0], [93.6, 600.0], [93.7, 600.0], [93.8, 601.0], [93.9, 601.0], [94.0, 617.0], [94.1, 617.0], [94.2, 617.0], [94.3, 619.0], [94.4, 619.0], [94.5, 697.0], [94.6, 697.0], [94.7, 697.0], [94.8, 714.0], [94.9, 714.0], [95.0, 819.0], [95.1, 819.0], [95.2, 819.0], [95.3, 833.0], [95.4, 833.0], [95.5, 874.0], [95.6, 874.0], [95.7, 874.0], [95.8, 883.0], [95.9, 883.0], [96.0, 901.0], [96.1, 901.0], [96.2, 901.0], [96.3, 926.0], [96.4, 926.0], [96.5, 973.0], [96.6, 973.0], [96.7, 973.0], [96.8, 984.0], [96.9, 984.0], [97.0, 1080.0], [97.1, 1080.0], [97.2, 1080.0], [97.3, 1097.0], [97.4, 1097.0], [97.5, 1109.0], [97.6, 1109.0], [97.7, 1109.0], [97.8, 1129.0], [97.9, 1129.0], [98.0, 1142.0], [98.1, 1142.0], [98.2, 1142.0], [98.3, 1143.0], [98.4, 1143.0], [98.5, 1321.0], [98.6, 1321.0], [98.7, 1321.0], [98.8, 2358.0], [98.9, 2358.0], [99.0, 2373.0], [99.1, 2373.0], [99.2, 2373.0], [99.3, 2409.0], [99.4, 2409.0], [99.5, 2626.0], [99.6, 2626.0], [99.7, 2626.0], [99.8, 2665.0], [99.9, 2665.0]], "isOverall": false, "label": "4", "isController": false}, {"data": [[0.0, 31.0], [0.1, 33.0], [0.2, 34.0], [0.3, 34.0], [0.4, 37.0], [0.5, 41.0], [0.6, 43.0], [0.7, 45.0], [0.8, 46.0], [0.9, 49.0], [1.0, 50.0], [1.1, 50.0], [1.2, 51.0], [1.3, 52.0], [1.4, 53.0], [1.5, 53.0], [1.6, 54.0], [1.7, 55.0], [1.8, 56.0], [1.9, 58.0], [2.0, 59.0], [2.1, 60.0], [2.2, 62.0], [2.3, 63.0], [2.4, 63.0], [2.5, 64.0], [2.6, 64.0], [2.7, 66.0], [2.8, 67.0], [2.9, 67.0], [3.0, 68.0], [3.1, 71.0], [3.2, 71.0], [3.3, 71.0], [3.4, 72.0], [3.5, 74.0], [3.6, 75.0], [3.7, 76.0], [3.8, 76.0], [3.9, 76.0], [4.0, 78.0], [4.1, 78.0], [4.2, 78.0], [4.3, 78.0], [4.4, 81.0], [4.5, 81.0], [4.6, 81.0], [4.7, 82.0], [4.8, 82.0], [4.9, 83.0], [5.0, 83.0], [5.1, 84.0], [5.2, 85.0], [5.3, 85.0], [5.4, 86.0], [5.5, 87.0], [5.6, 87.0], [5.7, 87.0], [5.8, 88.0], [5.9, 88.0], [6.0, 88.0], [6.1, 88.0], [6.2, 88.0], [6.3, 89.0], [6.4, 89.0], [6.5, 89.0], [6.6, 89.0], [6.7, 90.0], [6.8, 91.0], [6.9, 92.0], [7.0, 92.0], [7.1, 93.0], [7.2, 93.0], [7.3, 94.0], [7.4, 96.0], [7.5, 97.0], [7.6, 97.0], [7.7, 98.0], [7.8, 98.0], [7.9, 99.0], [8.0, 100.0], [8.1, 101.0], [8.2, 101.0], [8.3, 101.0], [8.4, 101.0], [8.5, 102.0], [8.6, 102.0], [8.7, 104.0], [8.8, 104.0], [8.9, 104.0], [9.0, 105.0], [9.1, 106.0], [9.2, 107.0], [9.3, 107.0], [9.4, 109.0], [9.5, 109.0], [9.6, 110.0], [9.7, 110.0], [9.8, 111.0], [9.9, 111.0], [10.0, 112.0], [10.1, 112.0], [10.2, 113.0], [10.3, 113.0], [10.4, 114.0], [10.5, 114.0], [10.6, 114.0], [10.7, 115.0], [10.8, 115.0], [10.9, 115.0], [11.0, 117.0], [11.1, 117.0], [11.2, 118.0], [11.3, 118.0], [11.4, 118.0], [11.5, 119.0], [11.6, 120.0], [11.7, 120.0], [11.8, 121.0], [11.9, 121.0], [12.0, 122.0], [12.1, 122.0], [12.2, 123.0], [12.3, 123.0], [12.4, 123.0], [12.5, 124.0], [12.6, 125.0], [12.7, 126.0], [12.8, 127.0], [12.9, 127.0], [13.0, 128.0], [13.1, 128.0], [13.2, 128.0], [13.3, 128.0], [13.4, 128.0], [13.5, 129.0], [13.6, 129.0], [13.7, 129.0], [13.8, 130.0], [13.9, 130.0], [14.0, 130.0], [14.1, 131.0], [14.2, 131.0], [14.3, 131.0], [14.4, 132.0], [14.5, 133.0], [14.6, 134.0], [14.7, 134.0], [14.8, 135.0], [14.9, 135.0], [15.0, 136.0], [15.1, 136.0], [15.2, 136.0], [15.3, 137.0], [15.4, 137.0], [15.5, 137.0], [15.6, 138.0], [15.7, 138.0], [15.8, 138.0], [15.9, 140.0], [16.0, 141.0], [16.1, 141.0], [16.2, 142.0], [16.3, 143.0], [16.4, 143.0], [16.5, 143.0], [16.6, 144.0], [16.7, 145.0], [16.8, 145.0], [16.9, 145.0], [17.0, 146.0], [17.1, 146.0], [17.2, 146.0], [17.3, 146.0], [17.4, 147.0], [17.5, 147.0], [17.6, 148.0], [17.7, 149.0], [17.8, 150.0], [17.9, 151.0], [18.0, 152.0], [18.1, 153.0], [18.2, 154.0], [18.3, 154.0], [18.4, 154.0], [18.5, 154.0], [18.6, 155.0], [18.7, 155.0], [18.8, 156.0], [18.9, 156.0], [19.0, 156.0], [19.1, 157.0], [19.2, 158.0], [19.3, 158.0], [19.4, 158.0], [19.5, 158.0], [19.6, 159.0], [19.7, 161.0], [19.8, 161.0], [19.9, 162.0], [20.0, 163.0], [20.1, 164.0], [20.2, 165.0], [20.3, 165.0], [20.4, 165.0], [20.5, 168.0], [20.6, 169.0], [20.7, 169.0], [20.8, 170.0], [20.9, 170.0], [21.0, 171.0], [21.1, 171.0], [21.2, 171.0], [21.3, 172.0], [21.4, 172.0], [21.5, 173.0], [21.6, 173.0], [21.7, 174.0], [21.8, 175.0], [21.9, 175.0], [22.0, 177.0], [22.1, 177.0], [22.2, 178.0], [22.3, 178.0], [22.4, 179.0], [22.5, 181.0], [22.6, 181.0], [22.7, 182.0], [22.8, 182.0], [22.9, 183.0], [23.0, 183.0], [23.1, 183.0], [23.2, 183.0], [23.3, 183.0], [23.4, 184.0], [23.5, 185.0], [23.6, 186.0], [23.7, 186.0], [23.8, 188.0], [23.9, 189.0], [24.0, 190.0], [24.1, 190.0], [24.2, 191.0], [24.3, 191.0], [24.4, 191.0], [24.5, 193.0], [24.6, 193.0], [24.7, 194.0], [24.8, 195.0], [24.9, 196.0], [25.0, 197.0], [25.1, 197.0], [25.2, 199.0], [25.3, 199.0], [25.4, 200.0], [25.5, 201.0], [25.6, 201.0], [25.7, 202.0], [25.8, 202.0], [25.9, 203.0], [26.0, 204.0], [26.1, 204.0], [26.2, 205.0], [26.3, 205.0], [26.4, 206.0], [26.5, 207.0], [26.6, 208.0], [26.7, 208.0], [26.8, 209.0], [26.9, 211.0], [27.0, 212.0], [27.1, 213.0], [27.2, 213.0], [27.3, 213.0], [27.4, 214.0], [27.5, 215.0], [27.6, 215.0], [27.7, 215.0], [27.8, 216.0], [27.9, 217.0], [28.0, 217.0], [28.1, 218.0], [28.2, 219.0], [28.3, 219.0], [28.4, 220.0], [28.5, 220.0], [28.6, 221.0], [28.7, 222.0], [28.8, 222.0], [28.9, 223.0], [29.0, 224.0], [29.1, 224.0], [29.2, 224.0], [29.3, 225.0], [29.4, 225.0], [29.5, 226.0], [29.6, 226.0], [29.7, 228.0], [29.8, 230.0], [29.9, 230.0], [30.0, 231.0], [30.1, 231.0], [30.2, 232.0], [30.3, 232.0], [30.4, 233.0], [30.5, 234.0], [30.6, 234.0], [30.7, 237.0], [30.8, 237.0], [30.9, 238.0], [31.0, 240.0], [31.1, 240.0], [31.2, 240.0], [31.3, 241.0], [31.4, 242.0], [31.5, 242.0], [31.6, 242.0], [31.7, 244.0], [31.8, 244.0], [31.9, 245.0], [32.0, 247.0], [32.1, 248.0], [32.2, 248.0], [32.3, 249.0], [32.4, 249.0], [32.5, 250.0], [32.6, 251.0], [32.7, 253.0], [32.8, 253.0], [32.9, 254.0], [33.0, 257.0], [33.1, 258.0], [33.2, 258.0], [33.3, 259.0], [33.4, 261.0], [33.5, 261.0], [33.6, 261.0], [33.7, 263.0], [33.8, 263.0], [33.9, 266.0], [34.0, 267.0], [34.1, 267.0], [34.2, 268.0], [34.3, 268.0], [34.4, 269.0], [34.5, 270.0], [34.6, 270.0], [34.7, 272.0], [34.8, 272.0], [34.9, 273.0], [35.0, 273.0], [35.1, 273.0], [35.2, 274.0], [35.3, 274.0], [35.4, 275.0], [35.5, 275.0], [35.6, 276.0], [35.7, 277.0], [35.8, 278.0], [35.9, 280.0], [36.0, 281.0], [36.1, 281.0], [36.2, 282.0], [36.3, 282.0], [36.4, 283.0], [36.5, 284.0], [36.6, 284.0], [36.7, 285.0], [36.8, 286.0], [36.9, 286.0], [37.0, 287.0], [37.1, 287.0], [37.2, 287.0], [37.3, 288.0], [37.4, 288.0], [37.5, 289.0], [37.6, 289.0], [37.7, 293.0], [37.8, 294.0], [37.9, 295.0], [38.0, 295.0], [38.1, 295.0], [38.2, 296.0], [38.3, 296.0], [38.4, 296.0], [38.5, 297.0], [38.6, 298.0], [38.7, 298.0], [38.8, 299.0], [38.9, 299.0], [39.0, 299.0], [39.1, 300.0], [39.2, 303.0], [39.3, 303.0], [39.4, 303.0], [39.5, 305.0], [39.6, 305.0], [39.7, 305.0], [39.8, 305.0], [39.9, 306.0], [40.0, 307.0], [40.1, 307.0], [40.2, 309.0], [40.3, 309.0], [40.4, 310.0], [40.5, 311.0], [40.6, 311.0], [40.7, 312.0], [40.8, 312.0], [40.9, 313.0], [41.0, 314.0], [41.1, 314.0], [41.2, 317.0], [41.3, 318.0], [41.4, 318.0], [41.5, 320.0], [41.6, 320.0], [41.7, 321.0], [41.8, 322.0], [41.9, 322.0], [42.0, 325.0], [42.1, 325.0], [42.2, 326.0], [42.3, 326.0], [42.4, 327.0], [42.5, 327.0], [42.6, 327.0], [42.7, 328.0], [42.8, 328.0], [42.9, 329.0], [43.0, 330.0], [43.1, 330.0], [43.2, 331.0], [43.3, 332.0], [43.4, 332.0], [43.5, 332.0], [43.6, 333.0], [43.7, 333.0], [43.8, 335.0], [43.9, 337.0], [44.0, 338.0], [44.1, 338.0], [44.2, 338.0], [44.3, 339.0], [44.4, 341.0], [44.5, 342.0], [44.6, 342.0], [44.7, 342.0], [44.8, 343.0], [44.9, 344.0], [45.0, 345.0], [45.1, 345.0], [45.2, 346.0], [45.3, 346.0], [45.4, 347.0], [45.5, 348.0], [45.6, 348.0], [45.7, 348.0], [45.8, 349.0], [45.9, 350.0], [46.0, 350.0], [46.1, 350.0], [46.2, 351.0], [46.3, 353.0], [46.4, 354.0], [46.5, 355.0], [46.6, 356.0], [46.7, 356.0], [46.8, 357.0], [46.9, 357.0], [47.0, 358.0], [47.1, 359.0], [47.2, 360.0], [47.3, 360.0], [47.4, 360.0], [47.5, 362.0], [47.6, 362.0], [47.7, 363.0], [47.8, 363.0], [47.9, 367.0], [48.0, 367.0], [48.1, 367.0], [48.2, 367.0], [48.3, 367.0], [48.4, 369.0], [48.5, 369.0], [48.6, 370.0], [48.7, 371.0], [48.8, 371.0], [48.9, 371.0], [49.0, 372.0], [49.1, 372.0], [49.2, 375.0], [49.3, 375.0], [49.4, 376.0], [49.5, 377.0], [49.6, 378.0], [49.7, 378.0], [49.8, 378.0], [49.9, 379.0], [50.0, 379.0], [50.1, 380.0], [50.2, 380.0], [50.3, 381.0], [50.4, 381.0], [50.5, 383.0], [50.6, 384.0], [50.7, 385.0], [50.8, 385.0], [50.9, 386.0], [51.0, 389.0], [51.1, 389.0], [51.2, 389.0], [51.3, 390.0], [51.4, 391.0], [51.5, 393.0], [51.6, 393.0], [51.7, 394.0], [51.8, 394.0], [51.9, 395.0], [52.0, 395.0], [52.1, 395.0], [52.2, 396.0], [52.3, 397.0], [52.4, 398.0], [52.5, 398.0], [52.6, 398.0], [52.7, 398.0], [52.8, 399.0], [52.9, 400.0], [53.0, 401.0], [53.1, 401.0], [53.2, 403.0], [53.3, 403.0], [53.4, 405.0], [53.5, 405.0], [53.6, 406.0], [53.7, 406.0], [53.8, 407.0], [53.9, 408.0], [54.0, 411.0], [54.1, 411.0], [54.2, 412.0], [54.3, 413.0], [54.4, 414.0], [54.5, 415.0], [54.6, 416.0], [54.7, 418.0], [54.8, 419.0], [54.9, 420.0], [55.0, 420.0], [55.1, 422.0], [55.2, 424.0], [55.3, 424.0], [55.4, 425.0], [55.5, 426.0], [55.6, 426.0], [55.7, 427.0], [55.8, 427.0], [55.9, 428.0], [56.0, 429.0], [56.1, 429.0], [56.2, 430.0], [56.3, 430.0], [56.4, 430.0], [56.5, 431.0], [56.6, 431.0], [56.7, 431.0], [56.8, 433.0], [56.9, 433.0], [57.0, 434.0], [57.1, 437.0], [57.2, 438.0], [57.3, 438.0], [57.4, 441.0], [57.5, 443.0], [57.6, 443.0], [57.7, 444.0], [57.8, 444.0], [57.9, 446.0], [58.0, 447.0], [58.1, 449.0], [58.2, 450.0], [58.3, 451.0], [58.4, 454.0], [58.5, 455.0], [58.6, 456.0], [58.7, 456.0], [58.8, 456.0], [58.9, 458.0], [59.0, 461.0], [59.1, 462.0], [59.2, 463.0], [59.3, 463.0], [59.4, 464.0], [59.5, 465.0], [59.6, 466.0], [59.7, 467.0], [59.8, 468.0], [59.9, 468.0], [60.0, 471.0], [60.1, 472.0], [60.2, 473.0], [60.3, 473.0], [60.4, 474.0], [60.5, 475.0], [60.6, 476.0], [60.7, 477.0], [60.8, 477.0], [60.9, 479.0], [61.0, 482.0], [61.1, 484.0], [61.2, 484.0], [61.3, 486.0], [61.4, 486.0], [61.5, 488.0], [61.6, 488.0], [61.7, 490.0], [61.8, 490.0], [61.9, 492.0], [62.0, 494.0], [62.1, 496.0], [62.2, 498.0], [62.3, 498.0], [62.4, 500.0], [62.5, 501.0], [62.6, 502.0], [62.7, 503.0], [62.8, 503.0], [62.9, 505.0], [63.0, 505.0], [63.1, 505.0], [63.2, 507.0], [63.3, 507.0], [63.4, 510.0], [63.5, 513.0], [63.6, 514.0], [63.7, 516.0], [63.8, 518.0], [63.9, 520.0], [64.0, 522.0], [64.1, 524.0], [64.2, 525.0], [64.3, 525.0], [64.4, 528.0], [64.5, 531.0], [64.6, 531.0], [64.7, 533.0], [64.8, 533.0], [64.9, 538.0], [65.0, 540.0], [65.1, 542.0], [65.2, 542.0], [65.3, 543.0], [65.4, 545.0], [65.5, 550.0], [65.6, 550.0], [65.7, 552.0], [65.8, 553.0], [65.9, 555.0], [66.0, 556.0], [66.1, 556.0], [66.2, 557.0], [66.3, 560.0], [66.4, 562.0], [66.5, 564.0], [66.6, 564.0], [66.7, 568.0], [66.8, 569.0], [66.9, 570.0], [67.0, 572.0], [67.1, 573.0], [67.2, 575.0], [67.3, 576.0], [67.4, 577.0], [67.5, 578.0], [67.6, 579.0], [67.7, 584.0], [67.8, 584.0], [67.9, 586.0], [68.0, 587.0], [68.1, 588.0], [68.2, 591.0], [68.3, 592.0], [68.4, 594.0], [68.5, 596.0], [68.6, 596.0], [68.7, 602.0], [68.8, 603.0], [68.9, 604.0], [69.0, 608.0], [69.1, 609.0], [69.2, 612.0], [69.3, 612.0], [69.4, 614.0], [69.5, 617.0], [69.6, 622.0], [69.7, 623.0], [69.8, 625.0], [69.9, 628.0], [70.0, 629.0], [70.1, 630.0], [70.2, 632.0], [70.3, 635.0], [70.4, 639.0], [70.5, 642.0], [70.6, 642.0], [70.7, 648.0], [70.8, 648.0], [70.9, 655.0], [71.0, 660.0], [71.1, 661.0], [71.2, 664.0], [71.3, 666.0], [71.4, 667.0], [71.5, 671.0], [71.6, 673.0], [71.7, 674.0], [71.8, 676.0], [71.9, 680.0], [72.0, 684.0], [72.1, 684.0], [72.2, 686.0], [72.3, 688.0], [72.4, 689.0], [72.5, 692.0], [72.6, 693.0], [72.7, 697.0], [72.8, 698.0], [72.9, 700.0], [73.0, 702.0], [73.1, 705.0], [73.2, 710.0], [73.3, 714.0], [73.4, 717.0], [73.5, 717.0], [73.6, 717.0], [73.7, 722.0], [73.8, 724.0], [73.9, 727.0], [74.0, 729.0], [74.1, 733.0], [74.2, 734.0], [74.3, 734.0], [74.4, 742.0], [74.5, 746.0], [74.6, 747.0], [74.7, 752.0], [74.8, 753.0], [74.9, 756.0], [75.0, 761.0], [75.1, 762.0], [75.2, 763.0], [75.3, 763.0], [75.4, 766.0], [75.5, 767.0], [75.6, 769.0], [75.7, 770.0], [75.8, 771.0], [75.9, 772.0], [76.0, 775.0], [76.1, 775.0], [76.2, 778.0], [76.3, 779.0], [76.4, 785.0], [76.5, 788.0], [76.6, 789.0], [76.7, 793.0], [76.8, 794.0], [76.9, 799.0], [77.0, 803.0], [77.1, 807.0], [77.2, 811.0], [77.3, 813.0], [77.4, 816.0], [77.5, 816.0], [77.6, 817.0], [77.7, 819.0], [77.8, 819.0], [77.9, 824.0], [78.0, 827.0], [78.1, 829.0], [78.2, 831.0], [78.3, 833.0], [78.4, 836.0], [78.5, 843.0], [78.6, 846.0], [78.7, 849.0], [78.8, 851.0], [78.9, 853.0], [79.0, 854.0], [79.1, 854.0], [79.2, 855.0], [79.3, 858.0], [79.4, 862.0], [79.5, 868.0], [79.6, 869.0], [79.7, 871.0], [79.8, 873.0], [79.9, 877.0], [80.0, 881.0], [80.1, 881.0], [80.2, 883.0], [80.3, 883.0], [80.4, 886.0], [80.5, 892.0], [80.6, 893.0], [80.7, 896.0], [80.8, 898.0], [80.9, 899.0], [81.0, 903.0], [81.1, 903.0], [81.2, 904.0], [81.3, 905.0], [81.4, 910.0], [81.5, 917.0], [81.6, 922.0], [81.7, 924.0], [81.8, 928.0], [81.9, 934.0], [82.0, 937.0], [82.1, 939.0], [82.2, 940.0], [82.3, 942.0], [82.4, 948.0], [82.5, 950.0], [82.6, 954.0], [82.7, 956.0], [82.8, 964.0], [82.9, 966.0], [83.0, 969.0], [83.1, 969.0], [83.2, 971.0], [83.3, 972.0], [83.4, 978.0], [83.5, 987.0], [83.6, 988.0], [83.7, 1002.0], [83.8, 1003.0], [83.9, 1005.0], [84.0, 1015.0], [84.1, 1015.0], [84.2, 1024.0], [84.3, 1031.0], [84.4, 1037.0], [84.5, 1039.0], [84.6, 1041.0], [84.7, 1044.0], [84.8, 1045.0], [84.9, 1050.0], [85.0, 1052.0], [85.1, 1053.0], [85.2, 1058.0], [85.3, 1071.0], [85.4, 1073.0], [85.5, 1089.0], [85.6, 1089.0], [85.7, 1091.0], [85.8, 1093.0], [85.9, 1102.0], [86.0, 1115.0], [86.1, 1120.0], [86.2, 1130.0], [86.3, 1135.0], [86.4, 1142.0], [86.5, 1145.0], [86.6, 1146.0], [86.7, 1156.0], [86.8, 1159.0], [86.9, 1161.0], [87.0, 1165.0], [87.1, 1168.0], [87.2, 1178.0], [87.3, 1186.0], [87.4, 1189.0], [87.5, 1200.0], [87.6, 1201.0], [87.7, 1204.0], [87.8, 1206.0], [87.9, 1212.0], [88.0, 1221.0], [88.1, 1223.0], [88.2, 1244.0], [88.3, 1246.0], [88.4, 1257.0], [88.5, 1262.0], [88.6, 1277.0], [88.7, 1285.0], [88.8, 1286.0], [88.9, 1289.0], [89.0, 1302.0], [89.1, 1317.0], [89.2, 1334.0], [89.3, 1337.0], [89.4, 1340.0], [89.5, 1344.0], [89.6, 1350.0], [89.7, 1361.0], [89.8, 1366.0], [89.9, 1375.0], [90.0, 1395.0], [90.1, 1397.0], [90.2, 1403.0], [90.3, 1406.0], [90.4, 1428.0], [90.5, 1445.0], [90.6, 1462.0], [90.7, 1464.0], [90.8, 1467.0], [90.9, 1480.0], [91.0, 1486.0], [91.1, 1492.0], [91.2, 1523.0], [91.3, 1540.0], [91.4, 1580.0], [91.5, 1583.0], [91.6, 1593.0], [91.7, 1600.0], [91.8, 1609.0], [91.9, 1624.0], [92.0, 1634.0], [92.1, 1668.0], [92.2, 1681.0], [92.3, 1709.0], [92.4, 1763.0], [92.5, 1802.0], [92.6, 1812.0], [92.7, 1835.0], [92.8, 1845.0], [92.9, 1849.0], [93.0, 1866.0], [93.1, 1871.0], [93.2, 1890.0], [93.3, 1899.0], [93.4, 1925.0], [93.5, 1930.0], [93.6, 1936.0], [93.7, 1958.0], [93.8, 1970.0], [93.9, 1974.0], [94.0, 2016.0], [94.1, 2029.0], [94.2, 2044.0], [94.3, 2045.0], [94.4, 2048.0], [94.5, 2065.0], [94.6, 2130.0], [94.7, 2177.0], [94.8, 2199.0], [94.9, 2232.0], [95.0, 2269.0], [95.1, 2274.0], [95.2, 2303.0], [95.3, 2353.0], [95.4, 2384.0], [95.5, 2421.0], [95.6, 2443.0], [95.7, 2485.0], [95.8, 2514.0], [95.9, 2555.0], [96.0, 2560.0], [96.1, 2573.0], [96.2, 2610.0], [96.3, 2660.0], [96.4, 2801.0], [96.5, 2841.0], [96.6, 2848.0], [96.7, 2869.0], [96.8, 2904.0], [96.9, 2924.0], [97.0, 2979.0], [97.1, 2980.0], [97.2, 3012.0], [97.3, 3186.0], [97.4, 3201.0], [97.5, 3418.0], [97.6, 3458.0], [97.7, 3644.0], [97.8, 3668.0], [97.9, 3676.0], [98.0, 3797.0], [98.1, 3845.0], [98.2, 3981.0], [98.3, 4070.0], [98.4, 4228.0], [98.5, 4352.0], [98.6, 4365.0], [98.7, 4576.0], [98.8, 4657.0], [98.9, 4981.0], [99.0, 5401.0], [99.1, 5455.0], [99.2, 6034.0], [99.3, 6307.0], [99.4, 6491.0], [99.5, 7043.0], [99.6, 7234.0], [99.7, 8781.0], [99.8, 10471.0], [99.9, 12989.0]], "isOverall": false, "label": "16", "isController": false}, {"data": [[0.0, 28.0], [0.1, 28.0], [0.2, 29.0], [0.3, 36.0], [0.4, 37.0], [0.5, 37.0], [0.6, 37.0], [0.7, 37.0], [0.8, 37.0], [0.9, 39.0], [1.0, 40.0], [1.1, 40.0], [1.2, 40.0], [1.3, 40.0], [1.4, 40.0], [1.5, 40.0], [1.6, 40.0], [1.7, 40.0], [1.8, 41.0], [1.9, 41.0], [2.0, 41.0], [2.1, 41.0], [2.2, 41.0], [2.3, 42.0], [2.4, 42.0], [2.5, 42.0], [2.6, 42.0], [2.7, 43.0], [2.8, 43.0], [2.9, 45.0], [3.0, 45.0], [3.1, 45.0], [3.2, 45.0], [3.3, 46.0], [3.4, 46.0], [3.5, 47.0], [3.6, 47.0], [3.7, 47.0], [3.8, 49.0], [3.9, 49.0], [4.0, 49.0], [4.1, 49.0], [4.2, 49.0], [4.3, 49.0], [4.4, 49.0], [4.5, 50.0], [4.6, 50.0], [4.7, 51.0], [4.8, 51.0], [4.9, 51.0], [5.0, 51.0], [5.1, 51.0], [5.2, 52.0], [5.3, 52.0], [5.4, 53.0], [5.5, 54.0], [5.6, 54.0], [5.7, 54.0], [5.8, 55.0], [5.9, 56.0], [6.0, 56.0], [6.1, 56.0], [6.2, 57.0], [6.3, 57.0], [6.4, 57.0], [6.5, 59.0], [6.6, 59.0], [6.7, 59.0], [6.8, 59.0], [6.9, 59.0], [7.0, 59.0], [7.1, 59.0], [7.2, 60.0], [7.3, 60.0], [7.4, 60.0], [7.5, 61.0], [7.6, 61.0], [7.7, 62.0], [7.8, 62.0], [7.9, 63.0], [8.0, 63.0], [8.1, 63.0], [8.2, 63.0], [8.3, 64.0], [8.4, 64.0], [8.5, 64.0], [8.6, 64.0], [8.7, 64.0], [8.8, 64.0], [8.9, 64.0], [9.0, 64.0], [9.1, 64.0], [9.2, 65.0], [9.3, 66.0], [9.4, 67.0], [9.5, 67.0], [9.6, 67.0], [9.7, 67.0], [9.8, 67.0], [9.9, 67.0], [10.0, 68.0], [10.1, 68.0], [10.2, 68.0], [10.3, 69.0], [10.4, 69.0], [10.5, 70.0], [10.6, 70.0], [10.7, 70.0], [10.8, 70.0], [10.9, 70.0], [11.0, 71.0], [11.1, 71.0], [11.2, 72.0], [11.3, 72.0], [11.4, 73.0], [11.5, 73.0], [11.6, 73.0], [11.7, 73.0], [11.8, 73.0], [11.9, 73.0], [12.0, 73.0], [12.1, 73.0], [12.2, 74.0], [12.3, 74.0], [12.4, 75.0], [12.5, 75.0], [12.6, 75.0], [12.7, 76.0], [12.8, 76.0], [12.9, 78.0], [13.0, 78.0], [13.1, 78.0], [13.2, 78.0], [13.3, 78.0], [13.4, 78.0], [13.5, 79.0], [13.6, 79.0], [13.7, 79.0], [13.8, 80.0], [13.9, 80.0], [14.0, 80.0], [14.1, 80.0], [14.2, 80.0], [14.3, 81.0], [14.4, 81.0], [14.5, 81.0], [14.6, 81.0], [14.7, 81.0], [14.8, 82.0], [14.9, 82.0], [15.0, 82.0], [15.1, 82.0], [15.2, 82.0], [15.3, 82.0], [15.4, 83.0], [15.5, 83.0], [15.6, 83.0], [15.7, 84.0], [15.8, 85.0], [15.9, 85.0], [16.0, 86.0], [16.1, 86.0], [16.2, 87.0], [16.3, 88.0], [16.4, 88.0], [16.5, 88.0], [16.6, 88.0], [16.7, 89.0], [16.8, 89.0], [16.9, 90.0], [17.0, 90.0], [17.1, 90.0], [17.2, 91.0], [17.3, 91.0], [17.4, 92.0], [17.5, 92.0], [17.6, 92.0], [17.7, 92.0], [17.8, 93.0], [17.9, 93.0], [18.0, 93.0], [18.1, 93.0], [18.2, 93.0], [18.3, 93.0], [18.4, 93.0], [18.5, 93.0], [18.6, 93.0], [18.7, 94.0], [18.8, 94.0], [18.9, 94.0], [19.0, 95.0], [19.1, 95.0], [19.2, 95.0], [19.3, 96.0], [19.4, 96.0], [19.5, 96.0], [19.6, 96.0], [19.7, 97.0], [19.8, 97.0], [19.9, 97.0], [20.0, 97.0], [20.1, 97.0], [20.2, 98.0], [20.3, 98.0], [20.4, 99.0], [20.5, 99.0], [20.6, 99.0], [20.7, 99.0], [20.8, 100.0], [20.9, 100.0], [21.0, 100.0], [21.1, 100.0], [21.2, 102.0], [21.3, 102.0], [21.4, 102.0], [21.5, 102.0], [21.6, 102.0], [21.7, 103.0], [21.8, 103.0], [21.9, 104.0], [22.0, 105.0], [22.1, 105.0], [22.2, 105.0], [22.3, 105.0], [22.4, 105.0], [22.5, 105.0], [22.6, 105.0], [22.7, 106.0], [22.8, 106.0], [22.9, 107.0], [23.0, 107.0], [23.1, 107.0], [23.2, 107.0], [23.3, 107.0], [23.4, 107.0], [23.5, 107.0], [23.6, 107.0], [23.7, 109.0], [23.8, 109.0], [23.9, 109.0], [24.0, 109.0], [24.1, 109.0], [24.2, 109.0], [24.3, 110.0], [24.4, 110.0], [24.5, 110.0], [24.6, 110.0], [24.7, 111.0], [24.8, 112.0], [24.9, 113.0], [25.0, 113.0], [25.1, 113.0], [25.2, 114.0], [25.3, 114.0], [25.4, 115.0], [25.5, 115.0], [25.6, 115.0], [25.7, 115.0], [25.8, 115.0], [25.9, 116.0], [26.0, 116.0], [26.1, 116.0], [26.2, 116.0], [26.3, 116.0], [26.4, 117.0], [26.5, 117.0], [26.6, 117.0], [26.7, 117.0], [26.8, 118.0], [26.9, 118.0], [27.0, 118.0], [27.1, 118.0], [27.2, 119.0], [27.3, 120.0], [27.4, 120.0], [27.5, 120.0], [27.6, 120.0], [27.7, 120.0], [27.8, 120.0], [27.9, 121.0], [28.0, 121.0], [28.1, 121.0], [28.2, 121.0], [28.3, 121.0], [28.4, 122.0], [28.5, 122.0], [28.6, 122.0], [28.7, 122.0], [28.8, 123.0], [28.9, 123.0], [29.0, 124.0], [29.1, 124.0], [29.2, 124.0], [29.3, 124.0], [29.4, 125.0], [29.5, 126.0], [29.6, 126.0], [29.7, 126.0], [29.8, 126.0], [29.9, 127.0], [30.0, 127.0], [30.1, 127.0], [30.2, 127.0], [30.3, 127.0], [30.4, 127.0], [30.5, 127.0], [30.6, 127.0], [30.7, 128.0], [30.8, 128.0], [30.9, 128.0], [31.0, 128.0], [31.1, 128.0], [31.2, 129.0], [31.3, 129.0], [31.4, 130.0], [31.5, 131.0], [31.6, 131.0], [31.7, 132.0], [31.8, 132.0], [31.9, 132.0], [32.0, 133.0], [32.1, 133.0], [32.2, 133.0], [32.3, 133.0], [32.4, 134.0], [32.5, 134.0], [32.6, 134.0], [32.7, 134.0], [32.8, 135.0], [32.9, 136.0], [33.0, 137.0], [33.1, 137.0], [33.2, 137.0], [33.3, 138.0], [33.4, 138.0], [33.5, 138.0], [33.6, 138.0], [33.7, 139.0], [33.8, 140.0], [33.9, 140.0], [34.0, 141.0], [34.1, 141.0], [34.2, 141.0], [34.3, 142.0], [34.4, 142.0], [34.5, 142.0], [34.6, 142.0], [34.7, 143.0], [34.8, 143.0], [34.9, 144.0], [35.0, 144.0], [35.1, 144.0], [35.2, 144.0], [35.3, 144.0], [35.4, 144.0], [35.5, 145.0], [35.6, 145.0], [35.7, 145.0], [35.8, 145.0], [35.9, 145.0], [36.0, 146.0], [36.1, 146.0], [36.2, 146.0], [36.3, 146.0], [36.4, 147.0], [36.5, 147.0], [36.6, 147.0], [36.7, 147.0], [36.8, 149.0], [36.9, 149.0], [37.0, 149.0], [37.1, 149.0], [37.2, 150.0], [37.3, 150.0], [37.4, 151.0], [37.5, 153.0], [37.6, 153.0], [37.7, 153.0], [37.8, 153.0], [37.9, 153.0], [38.0, 153.0], [38.1, 153.0], [38.2, 153.0], [38.3, 153.0], [38.4, 154.0], [38.5, 154.0], [38.6, 154.0], [38.7, 156.0], [38.8, 157.0], [38.9, 157.0], [39.0, 158.0], [39.1, 158.0], [39.2, 158.0], [39.3, 158.0], [39.4, 160.0], [39.5, 160.0], [39.6, 160.0], [39.7, 160.0], [39.8, 161.0], [39.9, 161.0], [40.0, 162.0], [40.1, 162.0], [40.2, 162.0], [40.3, 163.0], [40.4, 163.0], [40.5, 164.0], [40.6, 164.0], [40.7, 164.0], [40.8, 164.0], [40.9, 165.0], [41.0, 166.0], [41.1, 166.0], [41.2, 166.0], [41.3, 166.0], [41.4, 167.0], [41.5, 167.0], [41.6, 167.0], [41.7, 168.0], [41.8, 168.0], [41.9, 169.0], [42.0, 169.0], [42.1, 169.0], [42.2, 169.0], [42.3, 170.0], [42.4, 170.0], [42.5, 170.0], [42.6, 170.0], [42.7, 171.0], [42.8, 172.0], [42.9, 172.0], [43.0, 174.0], [43.1, 174.0], [43.2, 174.0], [43.3, 174.0], [43.4, 174.0], [43.5, 175.0], [43.6, 175.0], [43.7, 175.0], [43.8, 176.0], [43.9, 176.0], [44.0, 176.0], [44.1, 176.0], [44.2, 177.0], [44.3, 177.0], [44.4, 178.0], [44.5, 178.0], [44.6, 178.0], [44.7, 179.0], [44.8, 180.0], [44.9, 180.0], [45.0, 181.0], [45.1, 181.0], [45.2, 181.0], [45.3, 183.0], [45.4, 183.0], [45.5, 183.0], [45.6, 183.0], [45.7, 183.0], [45.8, 186.0], [45.9, 186.0], [46.0, 187.0], [46.1, 187.0], [46.2, 187.0], [46.3, 187.0], [46.4, 188.0], [46.5, 188.0], [46.6, 188.0], [46.7, 189.0], [46.8, 189.0], [46.9, 189.0], [47.0, 190.0], [47.1, 190.0], [47.2, 190.0], [47.3, 190.0], [47.4, 191.0], [47.5, 193.0], [47.6, 193.0], [47.7, 193.0], [47.8, 193.0], [47.9, 193.0], [48.0, 193.0], [48.1, 193.0], [48.2, 193.0], [48.3, 194.0], [48.4, 195.0], [48.5, 197.0], [48.6, 197.0], [48.7, 197.0], [48.8, 198.0], [48.9, 199.0], [49.0, 199.0], [49.1, 199.0], [49.2, 199.0], [49.3, 199.0], [49.4, 199.0], [49.5, 199.0], [49.6, 199.0], [49.7, 201.0], [49.8, 201.0], [49.9, 202.0], [50.0, 202.0], [50.1, 202.0], [50.2, 203.0], [50.3, 204.0], [50.4, 205.0], [50.5, 205.0], [50.6, 205.0], [50.7, 206.0], [50.8, 207.0], [50.9, 207.0], [51.0, 207.0], [51.1, 207.0], [51.2, 207.0], [51.3, 207.0], [51.4, 207.0], [51.5, 207.0], [51.6, 207.0], [51.7, 208.0], [51.8, 208.0], [51.9, 209.0], [52.0, 209.0], [52.1, 209.0], [52.2, 209.0], [52.3, 209.0], [52.4, 210.0], [52.5, 211.0], [52.6, 211.0], [52.7, 211.0], [52.8, 211.0], [52.9, 212.0], [53.0, 212.0], [53.1, 212.0], [53.2, 213.0], [53.3, 213.0], [53.4, 213.0], [53.5, 214.0], [53.6, 214.0], [53.7, 214.0], [53.8, 214.0], [53.9, 215.0], [54.0, 216.0], [54.1, 216.0], [54.2, 216.0], [54.3, 216.0], [54.4, 219.0], [54.5, 219.0], [54.6, 219.0], [54.7, 219.0], [54.8, 221.0], [54.9, 221.0], [55.0, 221.0], [55.1, 221.0], [55.2, 223.0], [55.3, 224.0], [55.4, 224.0], [55.5, 225.0], [55.6, 225.0], [55.7, 225.0], [55.8, 227.0], [55.9, 227.0], [56.0, 228.0], [56.1, 228.0], [56.2, 228.0], [56.3, 229.0], [56.4, 229.0], [56.5, 230.0], [56.6, 230.0], [56.7, 233.0], [56.8, 233.0], [56.9, 234.0], [57.0, 235.0], [57.1, 235.0], [57.2, 235.0], [57.3, 237.0], [57.4, 237.0], [57.5, 239.0], [57.6, 239.0], [57.7, 239.0], [57.8, 241.0], [57.9, 241.0], [58.0, 241.0], [58.1, 241.0], [58.2, 242.0], [58.3, 243.0], [58.4, 243.0], [58.5, 243.0], [58.6, 243.0], [58.7, 244.0], [58.8, 245.0], [58.9, 246.0], [59.0, 247.0], [59.1, 247.0], [59.2, 247.0], [59.3, 251.0], [59.4, 252.0], [59.5, 253.0], [59.6, 253.0], [59.7, 254.0], [59.8, 254.0], [59.9, 256.0], [60.0, 256.0], [60.1, 256.0], [60.2, 256.0], [60.3, 258.0], [60.4, 260.0], [60.5, 261.0], [60.6, 261.0], [60.7, 261.0], [60.8, 261.0], [60.9, 262.0], [61.0, 262.0], [61.1, 262.0], [61.2, 263.0], [61.3, 263.0], [61.4, 263.0], [61.5, 265.0], [61.6, 265.0], [61.7, 265.0], [61.8, 267.0], [61.9, 267.0], [62.0, 268.0], [62.1, 268.0], [62.2, 269.0], [62.3, 269.0], [62.4, 269.0], [62.5, 271.0], [62.6, 271.0], [62.7, 271.0], [62.8, 275.0], [62.9, 275.0], [63.0, 277.0], [63.1, 277.0], [63.2, 278.0], [63.3, 279.0], [63.4, 279.0], [63.5, 281.0], [63.6, 281.0], [63.7, 282.0], [63.8, 284.0], [63.9, 284.0], [64.0, 285.0], [64.1, 285.0], [64.2, 285.0], [64.3, 286.0], [64.4, 286.0], [64.5, 286.0], [64.6, 286.0], [64.7, 287.0], [64.8, 287.0], [64.9, 289.0], [65.0, 290.0], [65.1, 290.0], [65.2, 291.0], [65.3, 291.0], [65.4, 292.0], [65.5, 292.0], [65.6, 292.0], [65.7, 294.0], [65.8, 295.0], [65.9, 295.0], [66.0, 298.0], [66.1, 298.0], [66.2, 298.0], [66.3, 299.0], [66.4, 299.0], [66.5, 300.0], [66.6, 300.0], [66.7, 303.0], [66.8, 305.0], [66.9, 307.0], [67.0, 308.0], [67.1, 308.0], [67.2, 308.0], [67.3, 309.0], [67.4, 309.0], [67.5, 312.0], [67.6, 312.0], [67.7, 313.0], [67.8, 314.0], [67.9, 315.0], [68.0, 316.0], [68.1, 316.0], [68.2, 318.0], [68.3, 321.0], [68.4, 322.0], [68.5, 323.0], [68.6, 323.0], [68.7, 326.0], [68.8, 328.0], [68.9, 329.0], [69.0, 336.0], [69.1, 336.0], [69.2, 337.0], [69.3, 340.0], [69.4, 343.0], [69.5, 345.0], [69.6, 345.0], [69.7, 345.0], [69.8, 346.0], [69.9, 346.0], [70.0, 347.0], [70.1, 347.0], [70.2, 348.0], [70.3, 348.0], [70.4, 349.0], [70.5, 352.0], [70.6, 352.0], [70.7, 356.0], [70.8, 357.0], [70.9, 359.0], [71.0, 359.0], [71.1, 359.0], [71.2, 360.0], [71.3, 361.0], [71.4, 363.0], [71.5, 364.0], [71.6, 364.0], [71.7, 364.0], [71.8, 364.0], [71.9, 365.0], [72.0, 367.0], [72.1, 367.0], [72.2, 367.0], [72.3, 367.0], [72.4, 369.0], [72.5, 369.0], [72.6, 369.0], [72.7, 371.0], [72.8, 372.0], [72.9, 372.0], [73.0, 372.0], [73.1, 372.0], [73.2, 373.0], [73.3, 373.0], [73.4, 373.0], [73.5, 375.0], [73.6, 375.0], [73.7, 376.0], [73.8, 378.0], [73.9, 380.0], [74.0, 381.0], [74.1, 381.0], [74.2, 385.0], [74.3, 385.0], [74.4, 389.0], [74.5, 389.0], [74.6, 389.0], [74.7, 391.0], [74.8, 391.0], [74.9, 391.0], [75.0, 392.0], [75.1, 392.0], [75.2, 392.0], [75.3, 393.0], [75.4, 394.0], [75.5, 394.0], [75.6, 394.0], [75.7, 395.0], [75.8, 396.0], [75.9, 397.0], [76.0, 399.0], [76.1, 399.0], [76.2, 402.0], [76.3, 402.0], [76.4, 404.0], [76.5, 404.0], [76.6, 404.0], [76.7, 407.0], [76.8, 411.0], [76.9, 411.0], [77.0, 413.0], [77.1, 413.0], [77.2, 415.0], [77.3, 416.0], [77.4, 420.0], [77.5, 421.0], [77.6, 421.0], [77.7, 421.0], [77.8, 423.0], [77.9, 424.0], [78.0, 427.0], [78.1, 427.0], [78.2, 428.0], [78.3, 430.0], [78.4, 430.0], [78.5, 431.0], [78.6, 431.0], [78.7, 431.0], [78.8, 434.0], [78.9, 435.0], [79.0, 435.0], [79.1, 435.0], [79.2, 437.0], [79.3, 438.0], [79.4, 442.0], [79.5, 445.0], [79.6, 445.0], [79.7, 448.0], [79.8, 454.0], [79.9, 458.0], [80.0, 459.0], [80.1, 459.0], [80.2, 460.0], [80.3, 461.0], [80.4, 463.0], [80.5, 469.0], [80.6, 469.0], [80.7, 476.0], [80.8, 479.0], [80.9, 479.0], [81.0, 481.0], [81.1, 481.0], [81.2, 481.0], [81.3, 486.0], [81.4, 488.0], [81.5, 489.0], [81.6, 489.0], [81.7, 489.0], [81.8, 491.0], [81.9, 492.0], [82.0, 497.0], [82.1, 497.0], [82.2, 498.0], [82.3, 500.0], [82.4, 503.0], [82.5, 508.0], [82.6, 508.0], [82.7, 508.0], [82.8, 514.0], [82.9, 516.0], [83.0, 516.0], [83.1, 516.0], [83.2, 517.0], [83.3, 519.0], [83.4, 519.0], [83.5, 520.0], [83.6, 520.0], [83.7, 522.0], [83.8, 525.0], [83.9, 534.0], [84.0, 535.0], [84.1, 535.0], [84.2, 540.0], [84.3, 545.0], [84.4, 557.0], [84.5, 564.0], [84.6, 564.0], [84.7, 564.0], [84.8, 567.0], [84.9, 568.0], [85.0, 569.0], [85.1, 569.0], [85.2, 575.0], [85.3, 575.0], [85.4, 575.0], [85.5, 590.0], [85.6, 590.0], [85.7, 591.0], [85.8, 591.0], [85.9, 594.0], [86.0, 594.0], [86.1, 594.0], [86.2, 595.0], [86.3, 600.0], [86.4, 601.0], [86.5, 603.0], [86.6, 603.0], [86.7, 607.0], [86.8, 612.0], [86.9, 618.0], [87.0, 619.0], [87.1, 619.0], [87.2, 632.0], [87.3, 633.0], [87.4, 643.0], [87.5, 644.0], [87.6, 644.0], [87.7, 644.0], [87.8, 646.0], [87.9, 649.0], [88.0, 656.0], [88.1, 656.0], [88.2, 656.0], [88.3, 658.0], [88.4, 659.0], [88.5, 663.0], [88.6, 663.0], [88.7, 669.0], [88.8, 671.0], [88.9, 679.0], [89.0, 680.0], [89.1, 680.0], [89.2, 689.0], [89.3, 691.0], [89.4, 693.0], [89.5, 696.0], [89.6, 696.0], [89.7, 706.0], [89.8, 716.0], [89.9, 727.0], [90.0, 731.0], [90.1, 731.0], [90.2, 731.0], [90.3, 739.0], [90.4, 761.0], [90.5, 763.0], [90.6, 763.0], [90.7, 774.0], [90.8, 793.0], [90.9, 802.0], [91.0, 820.0], [91.1, 820.0], [91.2, 842.0], [91.3, 846.0], [91.4, 846.0], [91.5, 859.0], [91.6, 859.0], [91.7, 859.0], [91.8, 863.0], [91.9, 890.0], [92.0, 915.0], [92.1, 915.0], [92.2, 918.0], [92.3, 919.0], [92.4, 926.0], [92.5, 943.0], [92.6, 943.0], [92.7, 982.0], [92.8, 990.0], [92.9, 1000.0], [93.0, 1016.0], [93.1, 1016.0], [93.2, 1017.0], [93.3, 1041.0], [93.4, 1044.0], [93.5, 1051.0], [93.6, 1051.0], [93.7, 1054.0], [93.8, 1055.0], [93.9, 1073.0], [94.0, 1130.0], [94.1, 1130.0], [94.2, 1133.0], [94.3, 1141.0], [94.4, 1163.0], [94.5, 1163.0], [94.6, 1163.0], [94.7, 1168.0], [94.8, 1200.0], [94.9, 1212.0], [95.0, 1221.0], [95.1, 1221.0], [95.2, 1233.0], [95.3, 1242.0], [95.4, 1285.0], [95.5, 1293.0], [95.6, 1293.0], [95.7, 1294.0], [95.8, 1295.0], [95.9, 1302.0], [96.0, 1357.0], [96.1, 1357.0], [96.2, 1367.0], [96.3, 1376.0], [96.4, 1394.0], [96.5, 1420.0], [96.6, 1420.0], [96.7, 1477.0], [96.8, 1517.0], [96.9, 1539.0], [97.0, 1567.0], [97.1, 1567.0], [97.2, 1587.0], [97.3, 1633.0], [97.4, 1633.0], [97.5, 1690.0], [97.6, 1690.0], [97.7, 1727.0], [97.8, 1767.0], [97.9, 1873.0], [98.0, 2038.0], [98.1, 2038.0], [98.2, 2051.0], [98.3, 2280.0], [98.4, 2299.0], [98.5, 2383.0], [98.6, 2383.0], [98.7, 2427.0], [98.8, 2585.0], [98.9, 2774.0], [99.0, 2859.0], [99.1, 2859.0], [99.2, 2885.0], [99.3, 3091.0], [99.4, 3271.0], [99.5, 3775.0], [99.6, 3775.0], [99.7, 3840.0], [99.8, 4110.0], [99.9, 4110.0]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 278.0, "series": [{"data": [[0.0, 56.0], [600.0, 2.0], [100.0, 27.0], [400.0, 6.0], [200.0, 6.0], [800.0, 1.0], [2000.0, 2.0]], "isOverall": false, "label": "1", "isController": false}, {"data": [[0.0, 109.0], [2300.0, 1.0], [300.0, 8.0], [600.0, 1.0], [2400.0, 1.0], [200.0, 14.0], [100.0, 57.0], [800.0, 2.0], [400.0, 1.0], [900.0, 1.0], [500.0, 5.0]], "isOverall": false, "label": "2", "isController": false}, {"data": [[0.0, 165.0], [2300.0, 2.0], [2400.0, 1.0], [600.0, 5.0], [2600.0, 2.0], [700.0, 1.0], [200.0, 45.0], [800.0, 4.0], [900.0, 4.0], [1000.0, 2.0], [1100.0, 4.0], [300.0, 23.0], [1300.0, 1.0], [100.0, 124.0], [400.0, 11.0], [500.0, 6.0]], "isOverall": false, "label": "4", "isController": false}, {"data": [[0.0, 128.0], [600.0, 68.0], [700.0, 65.0], [800.0, 64.0], [900.0, 44.0], [1000.0, 35.0], [1100.0, 26.0], [1200.0, 24.0], [1300.0, 18.0], [1400.0, 16.0], [1500.0, 9.0], [1600.0, 9.0], [1700.0, 4.0], [1800.0, 14.0], [1900.0, 9.0], [2000.0, 10.0], [2100.0, 4.0], [2300.0, 5.0], [2200.0, 6.0], [2400.0, 4.0], [2500.0, 6.0], [2600.0, 3.0], [2800.0, 6.0], [2700.0, 1.0], [2900.0, 7.0], [3000.0, 1.0], [3100.0, 2.0], [3200.0, 1.0], [3400.0, 3.0], [3500.0, 1.0], [3600.0, 4.0], [3700.0, 2.0], [3800.0, 2.0], [3900.0, 1.0], [4000.0, 2.0], [4300.0, 3.0], [4200.0, 1.0], [4600.0, 2.0], [4400.0, 1.0], [4500.0, 1.0], [4900.0, 1.0], [5200.0, 1.0], [5400.0, 2.0], [5800.0, 1.0], [6000.0, 1.0], [6300.0, 1.0], [6400.0, 2.0], [6600.0, 1.0], [7000.0, 1.0], [7200.0, 1.0], [7300.0, 1.0], [8700.0, 1.0], [10400.0, 1.0], [10600.0, 1.0], [12900.0, 1.0], [14100.0, 1.0], [100.0, 278.0], [200.0, 219.0], [300.0, 220.0], [400.0, 153.0], [500.0, 100.0]], "isOverall": false, "label": "16", "isController": false}, {"data": [[0.0, 166.0], [600.0, 27.0], [700.0, 10.0], [800.0, 9.0], [900.0, 7.0], [1000.0, 9.0], [1100.0, 6.0], [1200.0, 9.0], [1300.0, 5.0], [1400.0, 2.0], [1500.0, 4.0], [100.0, 231.0], [1600.0, 3.0], [1700.0, 2.0], [1800.0, 1.0], [2000.0, 2.0], [2200.0, 2.0], [2300.0, 1.0], [2400.0, 1.0], [2500.0, 1.0], [2800.0, 2.0], [2700.0, 1.0], [3000.0, 1.0], [200.0, 135.0], [3200.0, 1.0], [3700.0, 1.0], [3800.0, 1.0], [4100.0, 2.0], [300.0, 77.0], [400.0, 49.0], [500.0, 32.0]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 14100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 177.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2311.0, "series": [{"data": [[0.0, 2311.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 612.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 177.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.70759175E12, "maxY": 16.0, "series": [{"data": [[1.70759176E12, 1.0], [1.70759177E12, 1.0], [1.70759175E12, 1.0]], "isOverall": false, "label": "1", "isController": false}, {"data": [[1.70759178E12, 1.9649122807017543], [1.70759177E12, 1.9534883720930234]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.7075918E12, 3.99438202247191], [1.70759181E12, 1.9999999999999996], [1.70759178E12, 2.5714285714285716], [1.70759179E12, 4.0]], "isOverall": false, "label": "4", "isController": false}, {"data": [[1.70759192E12, 3.8852459016393435], [1.70759193E12, 1.0], [1.7075919E12, 15.802690582959643], [1.70759191E12, 10.830845771144281], [1.70759188E12, 16.0], [1.70759189E12, 16.0], [1.70759186E12, 16.0], [1.70759187E12, 16.0], [1.70759185E12, 15.295774647887324]], "isOverall": false, "label": "16", "isController": false}, {"data": [[1.70759182E12, 8.0], [1.70759183E12, 8.0], [1.70759181E12, 7.670731707317072], [1.70759184E12, 6.407035175879398], [1.70759185E12, 1.8]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.70759193E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 69.83333333333333, "minX": 1.0, "maxY": 806.8243243243243, "series": [{"data": [[1.0, 174.38000000000005]], "isOverall": false, "label": "1", "isController": false}, {"data": [[1.0, 174.38000000000005]], "isOverall": false, "label": "1-Aggregated", "isController": false}, {"data": [[1.0, 112.0], [2.0, 162.62499999999997]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.96, 160.60000000000002]], "isOverall": false, "label": "2-Aggregated", "isController": false}, {"data": [[1.0, 69.83333333333333], [2.0, 140.45161290322582], [4.0, 218.36440677966107], [3.0, 424.44444444444446]], "isOverall": false, "label": "4", "isController": false}, {"data": [[3.7775000000000043, 214.73500000000004]], "isOverall": false, "label": "4-Aggregated", "isController": false}, {"data": [[2.0, 162.07142857142856], [8.0, 160.0], [9.0, 296.2], [10.0, 478.1176470588236], [11.0, 299.54545454545456], [12.0, 806.8243243243243], [3.0, 124.92857142857142], [13.0, 633.4705882352941], [14.0, 622.2162162162164], [15.0, 491.0], [4.0, 283.75609756097566], [16.0, 745.863673469387], [1.0, 356.0], [5.0, 200.95833333333337], [6.0, 428.3448275862069], [7.0, 340.81250000000006]], "isOverall": false, "label": "16", "isController": false}, {"data": [[14.23999999999999, 679.0937500000005]], "isOverall": false, "label": "16-Aggregated", "isController": false}, {"data": [[2.0, 125.1], [4.0, 221.36842105263156], [8.0, 372.3863987635243], [1.0, 213.0], [5.0, 321.40540540540536], [3.0, 146.27272727272725], [6.0, 355.2777777777778], [7.0, 314.82456140350877]], "isOverall": false, "label": "8", "isController": false}, {"data": [[7.4975000000000005, 355.55625]], "isOverall": false, "label": "8-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 16.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 159.3, "minX": 1.70759175E12, "maxY": 1.20320933E7, "series": [{"data": [[1.70759183E12, 1.20320933E7], [1.70759181E12, 1.07380964E7], [1.70759179E12, 9542252.9], [1.70759192E12, 8664507.6], [1.70759177E12, 6141275.0], [1.7075919E12, 1.19295428E7], [1.70759175E12, 2142885.8], [1.70759188E12, 1.1421788E7], [1.70759186E12, 1.09081433E7], [1.70759184E12, 1.11391469E7], [1.70759182E12, 1.09929733E7], [1.7075918E12, 9123294.9], [1.70759178E12, 5965717.5], [1.70759176E12, 2633748.0], [1.70759193E12, 370002.7], [1.70759191E12, 1.17723264E7], [1.70759189E12, 1.0951629E7], [1.70759187E12, 1.14297008E7], [1.70759185E12, 1.02658597E7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.70759183E12, 4800.2], [1.70759181E12, 4504.5], [1.70759179E12, 3959.4], [1.70759192E12, 2776.1], [1.70759177E12, 2229.5], [1.7075919E12, 5073.6], [1.70759175E12, 319.2], [1.70759188E12, 4824.1], [1.70759186E12, 4709.4], [1.70759184E12, 4527.6], [1.70759182E12, 5028.9], [1.7075918E12, 4049.4], [1.70759178E12, 2911.7], [1.70759176E12, 1683.5], [1.70759193E12, 159.3], [1.70759191E12, 4573.6], [1.70759189E12, 4367.7], [1.70759187E12, 5073.6], [1.70759185E12, 4960.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.70759193E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 119.59459459459461, "minX": 1.70759175E12, "maxY": 821.5729166666669, "series": [{"data": [[1.70759176E12, 119.59459459459461], [1.70759177E12, 307.25], [1.70759175E12, 350.07142857142856]], "isOverall": false, "label": "1", "isController": false}, {"data": [[1.70759178E12, 156.09649122807014], [1.70759177E12, 166.56976744186045]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.7075918E12, 213.80337078651678], [1.70759181E12, 216.26470588235293], [1.70759178E12, 123.85714285714286], [1.70759179E12, 222.70114942528744]], "isOverall": false, "label": "4", "isController": false}, {"data": [[1.70759192E12, 291.8196721311473], [1.70759193E12, 135.85714285714286], [1.7075919E12, 732.2107623318383], [1.70759191E12, 593.5621890547264], [1.70759188E12, 761.4056603773585], [1.70759189E12, 821.5729166666669], [1.70759186E12, 739.6086956521742], [1.70759187E12, 730.165919282511], [1.70759185E12, 621.2300469483569]], "isOverall": false, "label": "16", "isController": false}, {"data": [[1.70759182E12, 349.43438914027126], [1.70759183E12, 391.2132701421799], [1.70759181E12, 349.13414634146363], [1.70759184E12, 334.391959798995], [1.70759185E12, 174.4]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.70759193E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 45.07142857142857, "minX": 1.70759175E12, "maxY": 183.25120772946866, "series": [{"data": [[1.70759176E12, 58.90540540540539], [1.70759177E12, 152.58333333333334], [1.70759175E12, 181.5]], "isOverall": false, "label": "1", "isController": false}, {"data": [[1.70759178E12, 71.51754385964912], [1.70759177E12, 78.51162790697674]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.7075918E12, 87.83146067415731], [1.70759181E12, 95.05882352941174], [1.70759178E12, 45.07142857142857], [1.70759179E12, 90.70689655172417]], "isOverall": false, "label": "4", "isController": false}, {"data": [[1.70759192E12, 113.61475409836062], [1.70759193E12, 63.99999999999999], [1.7075919E12, 179.59641255605374], [1.70759191E12, 155.3034825870648], [1.70759188E12, 176.11320754716974], [1.70759189E12, 180.50520833333343], [1.70759186E12, 183.25120772946866], [1.70759187E12, 170.6367713004484], [1.70759185E12, 169.1971830985915]], "isOverall": false, "label": "16", "isController": false}, {"data": [[1.70759182E12, 112.84162895927597], [1.70759183E12, 125.47867298578194], [1.70759181E12, 117.17073170731703], [1.70759184E12, 112.80402010050248], [1.70759185E12, 47.8]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.70759193E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 16.0, "minX": 1.70759175E12, "maxY": 56.57276995305164, "series": [{"data": [[1.70759176E12, 17.459459459459467], [1.70759177E12, 17.333333333333332], [1.70759175E12, 18.714285714285715]], "isOverall": false, "label": "1", "isController": false}, {"data": [[1.70759178E12, 17.59649122807018], [1.70759177E12, 17.709302325581397]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.7075918E12, 19.674157303370794], [1.70759181E12, 17.44117647058824], [1.70759178E12, 18.642857142857146], [1.70759179E12, 19.408045977011486]], "isOverall": false, "label": "4", "isController": false}, {"data": [[1.70759192E12, 19.844262295081972], [1.70759193E12, 16.0], [1.7075919E12, 32.38116591928251], [1.70759191E12, 28.268656716417905], [1.70759188E12, 28.8490566037736], [1.70759189E12, 29.921875], [1.70759186E12, 39.97584541062803], [1.70759187E12, 32.775784753363226], [1.70759185E12, 56.57276995305164]], "isOverall": false, "label": "16", "isController": false}, {"data": [[1.70759182E12, 24.547511312217214], [1.70759183E12, 24.06635071090046], [1.70759181E12, 25.426829268292682], [1.70759184E12, 22.95477386934673], [1.70759185E12, 17.6]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.70759193E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 28.0, "minX": 1.70759175E12, "maxY": 14142.0, "series": [{"data": [[1.70759183E12, 4110.0], [1.70759181E12, 3775.0], [1.70759179E12, 2626.0], [1.70759192E12, 3186.0], [1.70759177E12, 2358.0], [1.7075919E12, 6478.0], [1.70759175E12, 2042.0], [1.70759188E12, 10693.0], [1.70759186E12, 7043.0], [1.70759184E12, 3840.0], [1.70759182E12, 4110.0], [1.7075918E12, 2373.0], [1.70759178E12, 2459.0], [1.70759176E12, 891.0], [1.70759193E12, 505.0], [1.70759191E12, 6625.0], [1.70759189E12, 14142.0], [1.70759187E12, 12989.0], [1.70759185E12, 7234.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.70759183E12, 37.0], [1.70759181E12, 30.0], [1.70759179E12, 30.0], [1.70759192E12, 33.0], [1.70759177E12, 34.0], [1.7075919E12, 81.0], [1.70759175E12, 42.0], [1.70759188E12, 78.0], [1.70759186E12, 78.0], [1.70759184E12, 28.0], [1.70759182E12, 36.0], [1.7075918E12, 28.0], [1.70759178E12, 30.0], [1.70759176E12, 32.0], [1.70759193E12, 33.0], [1.70759191E12, 31.0], [1.70759189E12, 75.0], [1.70759187E12, 71.0], [1.70759185E12, 37.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.70759183E12, 714.0000000000001], [1.70759181E12, 727.4], [1.70759179E12, 482.5], [1.70759192E12, 711.3000000000002], [1.70759177E12, 374.80000000000007], [1.7075919E12, 1614.3999999999999], [1.70759175E12, 1348.0], [1.70759188E12, 1396.7000000000005], [1.70759186E12, 1472.8000000000002], [1.70759184E12, 689.0], [1.70759182E12, 787.0000000000003], [1.7075918E12, 446.3999999999999], [1.70759178E12, 260.9000000000003], [1.70759176E12, 194.0], [1.70759193E12, 505.0], [1.70759191E12, 1327.4000000000005], [1.70759189E12, 1545.4000000000005], [1.70759187E12, 1441.9999999999998], [1.70759185E12, 1498.2999999999993]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.70759183E12, 3052.9599999999987], [1.70759181E12, 2893.899999999992], [1.70759179E12, 2463.25], [1.70759192E12, 3002.689999999997], [1.70759177E12, 2358.0], [1.7075919E12, 5359.479999999999], [1.70759175E12, 2042.0], [1.70759188E12, 8483.30000000001], [1.70759186E12, 6151.639999999976], [1.70759184E12, 3271.0], [1.70759182E12, 2678.380000000001], [1.7075918E12, 2361.15], [1.70759178E12, 2009.4999999999902], [1.70759176E12, 891.0], [1.70759193E12, 505.0], [1.70759191E12, 5823.539999999987], [1.70759189E12, 7830.089999999954], [1.70759187E12, 9075.639999999947], [1.70759185E12, 3789.9700000000003]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.70759183E12, 213.0], [1.70759181E12, 176.5], [1.70759179E12, 117.5], [1.70759192E12, 138.0], [1.70759177E12, 93.0], [1.7075919E12, 422.0], [1.70759175E12, 122.5], [1.70759188E12, 433.5], [1.70759186E12, 420.0], [1.70759184E12, 189.0], [1.70759182E12, 207.0], [1.7075918E12, 121.0], [1.70759178E12, 92.5], [1.70759176E12, 87.5], [1.70759193E12, 99.0], [1.70759191E12, 337.0], [1.70759189E12, 487.0], [1.70759187E12, 408.0], [1.70759185E12, 326.5]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.70759183E12, 1383.1999999999996], [1.70759181E12, 1163.25], [1.70759179E12, 887.0], [1.70759192E12, 1047.4999999999995], [1.70759177E12, 530.0999999999997], [1.7075919E12, 2824.7999999999965], [1.70759175E12, 2042.0], [1.70759188E12, 2457.7], [1.70759186E12, 2652.9999999999973], [1.70759184E12, 1054.0], [1.70759182E12, 1210.7999999999997], [1.7075918E12, 819.6999999999998], [1.70759178E12, 469.04999999999967], [1.70759176E12, 331.75], [1.70759193E12, 505.0], [1.70759191E12, 2038.099999999998], [1.70759189E12, 2710.4999999999977], [1.70759187E12, 2159.999999999997], [1.70759185E12, 2392.749999999997]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.70759193E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 75.0, "minX": 1.0, "maxY": 2036.5, "series": [{"data": [[33.0, 137.5], [32.0, 239.5], [2.0, 1126.5], [36.0, 515.0], [3.0, 403.0], [4.0, 394.5], [5.0, 91.0], [6.0, 75.0], [7.0, 100.5], [8.0, 191.0], [9.0, 94.0], [10.0, 103.5], [11.0, 107.0], [12.0, 121.0], [13.0, 352.0], [14.0, 286.5], [15.0, 183.0], [1.0, 2036.5], [16.0, 190.0], [17.0, 213.5], [18.0, 265.0], [19.0, 205.0], [20.0, 367.0], [21.0, 247.0], [22.0, 329.5], [23.0, 347.5], [24.0, 359.5], [25.0, 294.5], [26.0, 141.5], [27.0, 189.5], [28.0, 325.0], [29.0, 198.0], [30.0, 176.5], [31.0, 158.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 36.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 37.5, "minX": 1.0, "maxY": 1134.5, "series": [{"data": [[33.0, 57.5], [32.0, 87.0], [2.0, 601.5], [36.0, 111.0], [3.0, 168.5], [4.0, 159.5], [5.0, 43.0], [6.0, 43.5], [7.0, 43.5], [8.0, 64.5], [9.0, 37.5], [10.0, 52.0], [11.0, 48.0], [12.0, 49.5], [13.0, 118.0], [14.0, 109.5], [15.0, 79.5], [1.0, 1134.5], [16.0, 74.5], [17.0, 81.5], [18.0, 95.0], [19.0, 73.0], [20.0, 128.5], [21.0, 104.0], [22.0, 121.5], [23.0, 118.0], [24.0, 124.0], [25.0, 112.0], [26.0, 51.0], [27.0, 73.0], [28.0, 107.5], [29.0, 91.5], [30.0, 72.5], [31.0, 62.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 36.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.6, "minX": 1.70759175E12, "maxY": 23.2, "series": [{"data": [[1.70759183E12, 21.1], [1.70759181E12, 20.3], [1.70759179E12, 17.4], [1.70759192E12, 11.7], [1.70759177E12, 9.9], [1.7075919E12, 22.1], [1.70759175E12, 1.5], [1.70759188E12, 21.2], [1.70759186E12, 20.7], [1.70759184E12, 19.3], [1.70759182E12, 22.1], [1.7075918E12, 17.7], [1.70759178E12, 13.0], [1.70759176E12, 7.4], [1.70759193E12, 0.6], [1.70759191E12, 19.3], [1.70759189E12, 19.2], [1.70759187E12, 22.3], [1.70759185E12, 23.2]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.70759193E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.7, "minX": 1.70759175E12, "maxY": 22.3, "series": [{"data": [[1.70759183E12, 21.1], [1.70759181E12, 19.8], [1.70759179E12, 17.4], [1.70759192E12, 12.2], [1.70759177E12, 9.8], [1.7075919E12, 22.3], [1.70759175E12, 1.4], [1.70759188E12, 21.2], [1.70759186E12, 20.7], [1.70759184E12, 19.9], [1.70759182E12, 22.1], [1.7075918E12, 17.8], [1.70759178E12, 12.8], [1.70759176E12, 7.4], [1.70759193E12, 0.7], [1.70759191E12, 20.1], [1.70759189E12, 19.2], [1.70759187E12, 22.3], [1.70759185E12, 21.8]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.70759193E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.5, "minX": 1.70759175E12, "maxY": 22.3, "series": [{"data": [[1.70759192E12, 12.2], [1.70759193E12, 0.7], [1.7075919E12, 22.3], [1.70759191E12, 20.1], [1.70759188E12, 21.2], [1.70759189E12, 19.2], [1.70759186E12, 20.7], [1.70759187E12, 22.3], [1.70759185E12, 21.3]], "isOverall": false, "label": "16-success", "isController": false}, {"data": [[1.70759176E12, 7.4], [1.70759177E12, 1.2], [1.70759175E12, 1.4]], "isOverall": false, "label": "1-success", "isController": false}, {"data": [[1.7075918E12, 17.8], [1.70759181E12, 3.4], [1.70759178E12, 1.4], [1.70759179E12, 17.4]], "isOverall": false, "label": "4-success", "isController": false}, {"data": [[1.70759182E12, 22.1], [1.70759183E12, 21.1], [1.70759181E12, 16.4], [1.70759184E12, 19.9], [1.70759185E12, 0.5]], "isOverall": false, "label": "8-success", "isController": false}, {"data": [[1.70759178E12, 11.4], [1.70759177E12, 8.6]], "isOverall": false, "label": "2-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.70759193E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.7, "minX": 1.70759175E12, "maxY": 22.3, "series": [{"data": [[1.70759183E12, 21.1], [1.70759181E12, 19.8], [1.70759179E12, 17.4], [1.70759192E12, 12.2], [1.70759177E12, 9.8], [1.7075919E12, 22.3], [1.70759175E12, 1.4], [1.70759188E12, 21.2], [1.70759186E12, 20.7], [1.70759184E12, 19.9], [1.70759182E12, 22.1], [1.7075918E12, 17.8], [1.70759178E12, 12.8], [1.70759176E12, 7.4], [1.70759193E12, 0.7], [1.70759191E12, 20.1], [1.70759189E12, 19.2], [1.70759187E12, 22.3], [1.70759185E12, 21.8]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.70759193E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

