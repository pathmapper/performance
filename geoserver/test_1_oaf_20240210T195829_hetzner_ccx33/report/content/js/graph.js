/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 28.0, "minX": 0.0, "maxY": 22777.0, "series": [{"data": [[0.0, 35.0], [0.1, 35.0], [0.2, 35.0], [0.3, 35.0], [0.4, 35.0], [0.5, 35.0], [0.6, 35.0], [0.7, 35.0], [0.8, 35.0], [0.9, 35.0], [1.0, 35.0], [1.1, 35.0], [1.2, 35.0], [1.3, 35.0], [1.4, 35.0], [1.5, 35.0], [1.6, 35.0], [1.7, 35.0], [1.8, 35.0], [1.9, 35.0], [2.0, 36.0], [2.1, 36.0], [2.2, 36.0], [2.3, 36.0], [2.4, 36.0], [2.5, 36.0], [2.6, 36.0], [2.7, 36.0], [2.8, 36.0], [2.9, 36.0], [3.0, 36.0], [3.1, 36.0], [3.2, 36.0], [3.3, 36.0], [3.4, 36.0], [3.5, 36.0], [3.6, 36.0], [3.7, 36.0], [3.8, 36.0], [3.9, 36.0], [4.0, 39.0], [4.1, 39.0], [4.2, 39.0], [4.3, 39.0], [4.4, 39.0], [4.5, 39.0], [4.6, 39.0], [4.7, 39.0], [4.8, 39.0], [4.9, 39.0], [5.0, 39.0], [5.1, 39.0], [5.2, 39.0], [5.3, 39.0], [5.4, 39.0], [5.5, 39.0], [5.6, 39.0], [5.7, 39.0], [5.8, 39.0], [5.9, 39.0], [6.0, 39.0], [6.1, 39.0], [6.2, 39.0], [6.3, 39.0], [6.4, 39.0], [6.5, 39.0], [6.6, 39.0], [6.7, 39.0], [6.8, 39.0], [6.9, 39.0], [7.0, 40.0], [7.1, 40.0], [7.2, 40.0], [7.3, 40.0], [7.4, 40.0], [7.5, 40.0], [7.6, 40.0], [7.7, 40.0], [7.8, 40.0], [7.9, 40.0], [8.0, 40.0], [8.1, 40.0], [8.2, 40.0], [8.3, 40.0], [8.4, 40.0], [8.5, 40.0], [8.6, 40.0], [8.7, 40.0], [8.8, 40.0], [8.9, 40.0], [9.0, 44.0], [9.1, 44.0], [9.2, 44.0], [9.3, 44.0], [9.4, 44.0], [9.5, 44.0], [9.6, 44.0], [9.7, 44.0], [9.8, 44.0], [9.9, 44.0], [10.0, 44.0], [10.1, 44.0], [10.2, 44.0], [10.3, 44.0], [10.4, 44.0], [10.5, 44.0], [10.6, 44.0], [10.7, 44.0], [10.8, 44.0], [10.9, 44.0], [11.0, 44.0], [11.1, 44.0], [11.2, 44.0], [11.3, 44.0], [11.4, 44.0], [11.5, 44.0], [11.6, 44.0], [11.7, 44.0], [11.8, 44.0], [11.9, 44.0], [12.0, 45.0], [12.1, 45.0], [12.2, 45.0], [12.3, 45.0], [12.4, 45.0], [12.5, 45.0], [12.6, 45.0], [12.7, 45.0], [12.8, 45.0], [12.9, 45.0], [13.0, 48.0], [13.1, 48.0], [13.2, 48.0], [13.3, 48.0], [13.4, 48.0], [13.5, 48.0], [13.6, 48.0], [13.7, 48.0], [13.8, 48.0], [13.9, 48.0], [14.0, 48.0], [14.1, 48.0], [14.2, 48.0], [14.3, 48.0], [14.4, 48.0], [14.5, 48.0], [14.6, 48.0], [14.7, 48.0], [14.8, 48.0], [14.9, 48.0], [15.0, 49.0], [15.1, 49.0], [15.2, 49.0], [15.3, 49.0], [15.4, 49.0], [15.5, 49.0], [15.6, 49.0], [15.7, 49.0], [15.8, 49.0], [15.9, 49.0], [16.0, 49.0], [16.1, 49.0], [16.2, 49.0], [16.3, 49.0], [16.4, 49.0], [16.5, 49.0], [16.6, 49.0], [16.7, 49.0], [16.8, 49.0], [16.9, 49.0], [17.0, 50.0], [17.1, 50.0], [17.2, 50.0], [17.3, 50.0], [17.4, 50.0], [17.5, 50.0], [17.6, 50.0], [17.7, 50.0], [17.8, 50.0], [17.9, 50.0], [18.0, 50.0], [18.1, 50.0], [18.2, 50.0], [18.3, 50.0], [18.4, 50.0], [18.5, 50.0], [18.6, 50.0], [18.7, 50.0], [18.8, 50.0], [18.9, 50.0], [19.0, 51.0], [19.1, 51.0], [19.2, 51.0], [19.3, 51.0], [19.4, 51.0], [19.5, 51.0], [19.6, 51.0], [19.7, 51.0], [19.8, 51.0], [19.9, 51.0], [20.0, 51.0], [20.1, 51.0], [20.2, 51.0], [20.3, 51.0], [20.4, 51.0], [20.5, 51.0], [20.6, 51.0], [20.7, 51.0], [20.8, 51.0], [20.9, 51.0], [21.0, 51.0], [21.1, 51.0], [21.2, 51.0], [21.3, 51.0], [21.4, 51.0], [21.5, 51.0], [21.6, 51.0], [21.7, 51.0], [21.8, 51.0], [21.9, 51.0], [22.0, 53.0], [22.1, 53.0], [22.2, 53.0], [22.3, 53.0], [22.4, 53.0], [22.5, 53.0], [22.6, 53.0], [22.7, 53.0], [22.8, 53.0], [22.9, 53.0], [23.0, 53.0], [23.1, 53.0], [23.2, 53.0], [23.3, 53.0], [23.4, 53.0], [23.5, 53.0], [23.6, 53.0], [23.7, 53.0], [23.8, 53.0], [23.9, 53.0], [24.0, 54.0], [24.1, 54.0], [24.2, 54.0], [24.3, 54.0], [24.4, 54.0], [24.5, 54.0], [24.6, 54.0], [24.7, 54.0], [24.8, 54.0], [24.9, 54.0], [25.0, 54.0], [25.1, 54.0], [25.2, 54.0], [25.3, 54.0], [25.4, 54.0], [25.5, 54.0], [25.6, 54.0], [25.7, 54.0], [25.8, 54.0], [25.9, 54.0], [26.0, 57.0], [26.1, 57.0], [26.2, 57.0], [26.3, 57.0], [26.4, 57.0], [26.5, 57.0], [26.6, 57.0], [26.7, 57.0], [26.8, 57.0], [26.9, 57.0], [27.0, 62.0], [27.1, 62.0], [27.2, 62.0], [27.3, 62.0], [27.4, 62.0], [27.5, 62.0], [27.6, 62.0], [27.7, 62.0], [27.8, 62.0], [27.9, 62.0], [28.0, 63.0], [28.1, 63.0], [28.2, 63.0], [28.3, 63.0], [28.4, 63.0], [28.5, 63.0], [28.6, 63.0], [28.7, 63.0], [28.8, 63.0], [28.9, 63.0], [29.0, 66.0], [29.1, 66.0], [29.2, 66.0], [29.3, 66.0], [29.4, 66.0], [29.5, 66.0], [29.6, 66.0], [29.7, 66.0], [29.8, 66.0], [29.9, 66.0], [30.0, 66.0], [30.1, 66.0], [30.2, 66.0], [30.3, 66.0], [30.4, 66.0], [30.5, 66.0], [30.6, 66.0], [30.7, 66.0], [30.8, 66.0], [30.9, 66.0], [31.0, 66.0], [31.1, 66.0], [31.2, 66.0], [31.3, 66.0], [31.4, 66.0], [31.5, 66.0], [31.6, 66.0], [31.7, 66.0], [31.8, 66.0], [31.9, 66.0], [32.0, 68.0], [32.1, 68.0], [32.2, 68.0], [32.3, 68.0], [32.4, 68.0], [32.5, 68.0], [32.6, 68.0], [32.7, 68.0], [32.8, 68.0], [32.9, 68.0], [33.0, 69.0], [33.1, 69.0], [33.2, 69.0], [33.3, 69.0], [33.4, 69.0], [33.5, 69.0], [33.6, 69.0], [33.7, 69.0], [33.8, 69.0], [33.9, 69.0], [34.0, 70.0], [34.1, 70.0], [34.2, 70.0], [34.3, 70.0], [34.4, 70.0], [34.5, 70.0], [34.6, 70.0], [34.7, 70.0], [34.8, 70.0], [34.9, 70.0], [35.0, 70.0], [35.1, 70.0], [35.2, 70.0], [35.3, 70.0], [35.4, 70.0], [35.5, 70.0], [35.6, 70.0], [35.7, 70.0], [35.8, 70.0], [35.9, 70.0], [36.0, 71.0], [36.1, 71.0], [36.2, 71.0], [36.3, 71.0], [36.4, 71.0], [36.5, 71.0], [36.6, 71.0], [36.7, 71.0], [36.8, 71.0], [36.9, 71.0], [37.0, 72.0], [37.1, 72.0], [37.2, 72.0], [37.3, 72.0], [37.4, 72.0], [37.5, 72.0], [37.6, 72.0], [37.7, 72.0], [37.8, 72.0], [37.9, 72.0], [38.0, 73.0], [38.1, 73.0], [38.2, 73.0], [38.3, 73.0], [38.4, 73.0], [38.5, 73.0], [38.6, 73.0], [38.7, 73.0], [38.8, 73.0], [38.9, 73.0], [39.0, 73.0], [39.1, 73.0], [39.2, 73.0], [39.3, 73.0], [39.4, 73.0], [39.5, 73.0], [39.6, 73.0], [39.7, 73.0], [39.8, 73.0], [39.9, 73.0], [40.0, 75.0], [40.1, 75.0], [40.2, 75.0], [40.3, 75.0], [40.4, 75.0], [40.5, 75.0], [40.6, 75.0], [40.7, 75.0], [40.8, 75.0], [40.9, 75.0], [41.0, 80.0], [41.1, 80.0], [41.2, 80.0], [41.3, 80.0], [41.4, 80.0], [41.5, 80.0], [41.6, 80.0], [41.7, 80.0], [41.8, 80.0], [41.9, 80.0], [42.0, 81.0], [42.1, 81.0], [42.2, 81.0], [42.3, 81.0], [42.4, 81.0], [42.5, 81.0], [42.6, 81.0], [42.7, 81.0], [42.8, 81.0], [42.9, 81.0], [43.0, 84.0], [43.1, 84.0], [43.2, 84.0], [43.3, 84.0], [43.4, 84.0], [43.5, 84.0], [43.6, 84.0], [43.7, 84.0], [43.8, 84.0], [43.9, 84.0], [44.0, 85.0], [44.1, 85.0], [44.2, 85.0], [44.3, 85.0], [44.4, 85.0], [44.5, 85.0], [44.6, 85.0], [44.7, 85.0], [44.8, 85.0], [44.9, 85.0], [45.0, 87.0], [45.1, 87.0], [45.2, 87.0], [45.3, 87.0], [45.4, 87.0], [45.5, 87.0], [45.6, 87.0], [45.7, 87.0], [45.8, 87.0], [45.9, 87.0], [46.0, 88.0], [46.1, 88.0], [46.2, 88.0], [46.3, 88.0], [46.4, 88.0], [46.5, 88.0], [46.6, 88.0], [46.7, 88.0], [46.8, 88.0], [46.9, 88.0], [47.0, 88.0], [47.1, 88.0], [47.2, 88.0], [47.3, 88.0], [47.4, 88.0], [47.5, 88.0], [47.6, 88.0], [47.7, 88.0], [47.8, 88.0], [47.9, 88.0], [48.0, 95.0], [48.1, 95.0], [48.2, 95.0], [48.3, 95.0], [48.4, 95.0], [48.5, 95.0], [48.6, 95.0], [48.7, 95.0], [48.8, 95.0], [48.9, 95.0], [49.0, 95.0], [49.1, 95.0], [49.2, 95.0], [49.3, 95.0], [49.4, 95.0], [49.5, 95.0], [49.6, 95.0], [49.7, 95.0], [49.8, 95.0], [49.9, 95.0], [50.0, 96.0], [50.1, 96.0], [50.2, 96.0], [50.3, 96.0], [50.4, 96.0], [50.5, 96.0], [50.6, 96.0], [50.7, 96.0], [50.8, 96.0], [50.9, 96.0], [51.0, 96.0], [51.1, 96.0], [51.2, 96.0], [51.3, 96.0], [51.4, 96.0], [51.5, 96.0], [51.6, 96.0], [51.7, 96.0], [51.8, 96.0], [51.9, 96.0], [52.0, 97.0], [52.1, 97.0], [52.2, 97.0], [52.3, 97.0], [52.4, 97.0], [52.5, 97.0], [52.6, 97.0], [52.7, 97.0], [52.8, 97.0], [52.9, 97.0], [53.0, 97.0], [53.1, 97.0], [53.2, 97.0], [53.3, 97.0], [53.4, 97.0], [53.5, 97.0], [53.6, 97.0], [53.7, 97.0], [53.8, 97.0], [53.9, 97.0], [54.0, 99.0], [54.1, 99.0], [54.2, 99.0], [54.3, 99.0], [54.4, 99.0], [54.5, 99.0], [54.6, 99.0], [54.7, 99.0], [54.8, 99.0], [54.9, 99.0], [55.0, 100.0], [55.1, 100.0], [55.2, 100.0], [55.3, 100.0], [55.4, 100.0], [55.5, 100.0], [55.6, 100.0], [55.7, 100.0], [55.8, 100.0], [55.9, 100.0], [56.0, 101.0], [56.1, 101.0], [56.2, 101.0], [56.3, 101.0], [56.4, 101.0], [56.5, 101.0], [56.6, 101.0], [56.7, 101.0], [56.8, 101.0], [56.9, 101.0], [57.0, 108.0], [57.1, 108.0], [57.2, 108.0], [57.3, 108.0], [57.4, 108.0], [57.5, 108.0], [57.6, 108.0], [57.7, 108.0], [57.8, 108.0], [57.9, 108.0], [58.0, 108.0], [58.1, 108.0], [58.2, 108.0], [58.3, 108.0], [58.4, 108.0], [58.5, 108.0], [58.6, 108.0], [58.7, 108.0], [58.8, 108.0], [58.9, 108.0], [59.0, 112.0], [59.1, 112.0], [59.2, 112.0], [59.3, 112.0], [59.4, 112.0], [59.5, 112.0], [59.6, 112.0], [59.7, 112.0], [59.8, 112.0], [59.9, 112.0], [60.0, 116.0], [60.1, 116.0], [60.2, 116.0], [60.3, 116.0], [60.4, 116.0], [60.5, 116.0], [60.6, 116.0], [60.7, 116.0], [60.8, 116.0], [60.9, 116.0], [61.0, 117.0], [61.1, 117.0], [61.2, 117.0], [61.3, 117.0], [61.4, 117.0], [61.5, 117.0], [61.6, 117.0], [61.7, 117.0], [61.8, 117.0], [61.9, 117.0], [62.0, 118.0], [62.1, 118.0], [62.2, 118.0], [62.3, 118.0], [62.4, 118.0], [62.5, 118.0], [62.6, 118.0], [62.7, 118.0], [62.8, 118.0], [62.9, 118.0], [63.0, 120.0], [63.1, 120.0], [63.2, 120.0], [63.3, 120.0], [63.4, 120.0], [63.5, 120.0], [63.6, 120.0], [63.7, 120.0], [63.8, 120.0], [63.9, 120.0], [64.0, 127.0], [64.1, 127.0], [64.2, 127.0], [64.3, 127.0], [64.4, 127.0], [64.5, 127.0], [64.6, 127.0], [64.7, 127.0], [64.8, 127.0], [64.9, 127.0], [65.0, 128.0], [65.1, 128.0], [65.2, 128.0], [65.3, 128.0], [65.4, 128.0], [65.5, 128.0], [65.6, 128.0], [65.7, 128.0], [65.8, 128.0], [65.9, 128.0], [66.0, 130.0], [66.1, 130.0], [66.2, 130.0], [66.3, 130.0], [66.4, 130.0], [66.5, 130.0], [66.6, 130.0], [66.7, 130.0], [66.8, 130.0], [66.9, 130.0], [67.0, 134.0], [67.1, 134.0], [67.2, 134.0], [67.3, 134.0], [67.4, 134.0], [67.5, 134.0], [67.6, 134.0], [67.7, 134.0], [67.8, 134.0], [67.9, 134.0], [68.0, 135.0], [68.1, 135.0], [68.2, 135.0], [68.3, 135.0], [68.4, 135.0], [68.5, 135.0], [68.6, 135.0], [68.7, 135.0], [68.8, 135.0], [68.9, 135.0], [69.0, 137.0], [69.1, 137.0], [69.2, 137.0], [69.3, 137.0], [69.4, 137.0], [69.5, 137.0], [69.6, 137.0], [69.7, 137.0], [69.8, 137.0], [69.9, 137.0], [70.0, 142.0], [70.1, 142.0], [70.2, 142.0], [70.3, 142.0], [70.4, 142.0], [70.5, 142.0], [70.6, 142.0], [70.7, 142.0], [70.8, 142.0], [70.9, 142.0], [71.0, 144.0], [71.1, 144.0], [71.2, 144.0], [71.3, 144.0], [71.4, 144.0], [71.5, 144.0], [71.6, 144.0], [71.7, 144.0], [71.8, 144.0], [71.9, 144.0], [72.0, 145.0], [72.1, 145.0], [72.2, 145.0], [72.3, 145.0], [72.4, 145.0], [72.5, 145.0], [72.6, 145.0], [72.7, 145.0], [72.8, 145.0], [72.9, 145.0], [73.0, 149.0], [73.1, 149.0], [73.2, 149.0], [73.3, 149.0], [73.4, 149.0], [73.5, 149.0], [73.6, 149.0], [73.7, 149.0], [73.8, 149.0], [73.9, 149.0], [74.0, 151.0], [74.1, 151.0], [74.2, 151.0], [74.3, 151.0], [74.4, 151.0], [74.5, 151.0], [74.6, 151.0], [74.7, 151.0], [74.8, 151.0], [74.9, 151.0], [75.0, 152.0], [75.1, 152.0], [75.2, 152.0], [75.3, 152.0], [75.4, 152.0], [75.5, 152.0], [75.6, 152.0], [75.7, 152.0], [75.8, 152.0], [75.9, 152.0], [76.0, 153.0], [76.1, 153.0], [76.2, 153.0], [76.3, 153.0], [76.4, 153.0], [76.5, 153.0], [76.6, 153.0], [76.7, 153.0], [76.8, 153.0], [76.9, 153.0], [77.0, 163.0], [77.1, 163.0], [77.2, 163.0], [77.3, 163.0], [77.4, 163.0], [77.5, 163.0], [77.6, 163.0], [77.7, 163.0], [77.8, 163.0], [77.9, 163.0], [78.0, 166.0], [78.1, 166.0], [78.2, 166.0], [78.3, 166.0], [78.4, 166.0], [78.5, 166.0], [78.6, 166.0], [78.7, 166.0], [78.8, 166.0], [78.9, 166.0], [79.0, 169.0], [79.1, 169.0], [79.2, 169.0], [79.3, 169.0], [79.4, 169.0], [79.5, 169.0], [79.6, 169.0], [79.7, 169.0], [79.8, 169.0], [79.9, 169.0], [80.0, 180.0], [80.1, 180.0], [80.2, 180.0], [80.3, 180.0], [80.4, 180.0], [80.5, 180.0], [80.6, 180.0], [80.7, 180.0], [80.8, 180.0], [80.9, 180.0], [81.0, 207.0], [81.1, 207.0], [81.2, 207.0], [81.3, 207.0], [81.4, 207.0], [81.5, 207.0], [81.6, 207.0], [81.7, 207.0], [81.8, 207.0], [81.9, 207.0], [82.0, 210.0], [82.1, 210.0], [82.2, 210.0], [82.3, 210.0], [82.4, 210.0], [82.5, 210.0], [82.6, 210.0], [82.7, 210.0], [82.8, 210.0], [82.9, 210.0], [83.0, 217.0], [83.1, 217.0], [83.2, 217.0], [83.3, 217.0], [83.4, 217.0], [83.5, 217.0], [83.6, 217.0], [83.7, 217.0], [83.8, 217.0], [83.9, 217.0], [84.0, 247.0], [84.1, 247.0], [84.2, 247.0], [84.3, 247.0], [84.4, 247.0], [84.5, 247.0], [84.6, 247.0], [84.7, 247.0], [84.8, 247.0], [84.9, 247.0], [85.0, 267.0], [85.1, 267.0], [85.2, 267.0], [85.3, 267.0], [85.4, 267.0], [85.5, 267.0], [85.6, 267.0], [85.7, 267.0], [85.8, 267.0], [85.9, 267.0], [86.0, 287.0], [86.1, 287.0], [86.2, 287.0], [86.3, 287.0], [86.4, 287.0], [86.5, 287.0], [86.6, 287.0], [86.7, 287.0], [86.8, 287.0], [86.9, 287.0], [87.0, 304.0], [87.1, 304.0], [87.2, 304.0], [87.3, 304.0], [87.4, 304.0], [87.5, 304.0], [87.6, 304.0], [87.7, 304.0], [87.8, 304.0], [87.9, 304.0], [88.0, 320.0], [88.1, 320.0], [88.2, 320.0], [88.3, 320.0], [88.4, 320.0], [88.5, 320.0], [88.6, 320.0], [88.7, 320.0], [88.8, 320.0], [88.9, 320.0], [89.0, 360.0], [89.1, 360.0], [89.2, 360.0], [89.3, 360.0], [89.4, 360.0], [89.5, 360.0], [89.6, 360.0], [89.7, 360.0], [89.8, 360.0], [89.9, 360.0], [90.0, 416.0], [90.1, 416.0], [90.2, 416.0], [90.3, 416.0], [90.4, 416.0], [90.5, 416.0], [90.6, 416.0], [90.7, 416.0], [90.8, 416.0], [90.9, 416.0], [91.0, 429.0], [91.1, 429.0], [91.2, 429.0], [91.3, 429.0], [91.4, 429.0], [91.5, 429.0], [91.6, 429.0], [91.7, 429.0], [91.8, 429.0], [91.9, 429.0], [92.0, 466.0], [92.1, 466.0], [92.2, 466.0], [92.3, 466.0], [92.4, 466.0], [92.5, 466.0], [92.6, 466.0], [92.7, 466.0], [92.8, 466.0], [92.9, 466.0], [93.0, 482.0], [93.1, 482.0], [93.2, 482.0], [93.3, 482.0], [93.4, 482.0], [93.5, 482.0], [93.6, 482.0], [93.7, 482.0], [93.8, 482.0], [93.9, 482.0], [94.0, 495.0], [94.1, 495.0], [94.2, 495.0], [94.3, 495.0], [94.4, 495.0], [94.5, 495.0], [94.6, 495.0], [94.7, 495.0], [94.8, 495.0], [94.9, 495.0], [95.0, 637.0], [95.1, 637.0], [95.2, 637.0], [95.3, 637.0], [95.4, 637.0], [95.5, 637.0], [95.6, 637.0], [95.7, 637.0], [95.8, 637.0], [95.9, 637.0], [96.0, 637.0], [96.1, 637.0], [96.2, 637.0], [96.3, 637.0], [96.4, 637.0], [96.5, 637.0], [96.6, 637.0], [96.7, 637.0], [96.8, 637.0], [96.9, 637.0], [97.0, 847.0], [97.1, 847.0], [97.2, 847.0], [97.3, 847.0], [97.4, 847.0], [97.5, 847.0], [97.6, 847.0], [97.7, 847.0], [97.8, 847.0], [97.9, 847.0], [98.0, 1999.0], [98.1, 1999.0], [98.2, 1999.0], [98.3, 1999.0], [98.4, 1999.0], [98.5, 1999.0], [98.6, 1999.0], [98.7, 1999.0], [98.8, 1999.0], [98.9, 1999.0], [99.0, 2056.0], [99.1, 2056.0], [99.2, 2056.0], [99.3, 2056.0], [99.4, 2056.0], [99.5, 2056.0], [99.6, 2056.0], [99.7, 2056.0], [99.8, 2056.0], [99.9, 2056.0]], "isOverall": false, "label": "1", "isController": false}, {"data": [[0.0, 31.0], [0.1, 31.0], [0.2, 31.0], [0.3, 31.0], [0.4, 31.0], [0.5, 31.0], [0.6, 31.0], [0.7, 31.0], [0.8, 31.0], [0.9, 31.0], [1.0, 32.0], [1.1, 32.0], [1.2, 32.0], [1.3, 32.0], [1.4, 32.0], [1.5, 33.0], [1.6, 33.0], [1.7, 33.0], [1.8, 33.0], [1.9, 33.0], [2.0, 35.0], [2.1, 35.0], [2.2, 35.0], [2.3, 35.0], [2.4, 35.0], [2.5, 35.0], [2.6, 35.0], [2.7, 35.0], [2.8, 35.0], [2.9, 35.0], [3.0, 36.0], [3.1, 36.0], [3.2, 36.0], [3.3, 36.0], [3.4, 36.0], [3.5, 36.0], [3.6, 36.0], [3.7, 36.0], [3.8, 36.0], [3.9, 36.0], [4.0, 37.0], [4.1, 37.0], [4.2, 37.0], [4.3, 37.0], [4.4, 37.0], [4.5, 37.0], [4.6, 37.0], [4.7, 37.0], [4.8, 37.0], [4.9, 37.0], [5.0, 37.0], [5.1, 37.0], [5.2, 37.0], [5.3, 37.0], [5.4, 37.0], [5.5, 37.0], [5.6, 37.0], [5.7, 37.0], [5.8, 37.0], [5.9, 37.0], [6.0, 38.0], [6.1, 38.0], [6.2, 38.0], [6.3, 38.0], [6.4, 38.0], [6.5, 40.0], [6.6, 40.0], [6.7, 40.0], [6.8, 40.0], [6.9, 40.0], [7.0, 40.0], [7.1, 40.0], [7.2, 40.0], [7.3, 40.0], [7.4, 40.0], [7.5, 41.0], [7.6, 41.0], [7.7, 41.0], [7.8, 41.0], [7.9, 41.0], [8.0, 41.0], [8.1, 41.0], [8.2, 41.0], [8.3, 41.0], [8.4, 41.0], [8.5, 42.0], [8.6, 42.0], [8.7, 42.0], [8.8, 42.0], [8.9, 42.0], [9.0, 42.0], [9.1, 42.0], [9.2, 42.0], [9.3, 42.0], [9.4, 42.0], [9.5, 42.0], [9.6, 42.0], [9.7, 42.0], [9.8, 42.0], [9.9, 42.0], [10.0, 42.0], [10.1, 42.0], [10.2, 42.0], [10.3, 42.0], [10.4, 42.0], [10.5, 44.0], [10.6, 44.0], [10.7, 44.0], [10.8, 44.0], [10.9, 44.0], [11.0, 44.0], [11.1, 44.0], [11.2, 44.0], [11.3, 44.0], [11.4, 44.0], [11.5, 44.0], [11.6, 44.0], [11.7, 44.0], [11.8, 44.0], [11.9, 44.0], [12.0, 45.0], [12.1, 45.0], [12.2, 45.0], [12.3, 45.0], [12.4, 45.0], [12.5, 46.0], [12.6, 46.0], [12.7, 46.0], [12.8, 46.0], [12.9, 46.0], [13.0, 46.0], [13.1, 46.0], [13.2, 46.0], [13.3, 46.0], [13.4, 46.0], [13.5, 47.0], [13.6, 47.0], [13.7, 47.0], [13.8, 47.0], [13.9, 47.0], [14.0, 48.0], [14.1, 48.0], [14.2, 48.0], [14.3, 48.0], [14.4, 48.0], [14.5, 50.0], [14.6, 50.0], [14.7, 50.0], [14.8, 50.0], [14.9, 50.0], [15.0, 50.0], [15.1, 50.0], [15.2, 50.0], [15.3, 50.0], [15.4, 50.0], [15.5, 51.0], [15.6, 51.0], [15.7, 51.0], [15.8, 51.0], [15.9, 51.0], [16.0, 51.0], [16.1, 51.0], [16.2, 51.0], [16.3, 51.0], [16.4, 51.0], [16.5, 52.0], [16.6, 52.0], [16.7, 52.0], [16.8, 52.0], [16.9, 52.0], [17.0, 52.0], [17.1, 52.0], [17.2, 52.0], [17.3, 52.0], [17.4, 52.0], [17.5, 52.0], [17.6, 52.0], [17.7, 52.0], [17.8, 52.0], [17.9, 52.0], [18.0, 52.0], [18.1, 52.0], [18.2, 52.0], [18.3, 52.0], [18.4, 52.0], [18.5, 52.0], [18.6, 52.0], [18.7, 52.0], [18.8, 52.0], [18.9, 52.0], [19.0, 53.0], [19.1, 53.0], [19.2, 53.0], [19.3, 53.0], [19.4, 53.0], [19.5, 53.0], [19.6, 53.0], [19.7, 53.0], [19.8, 53.0], [19.9, 53.0], [20.0, 54.0], [20.1, 54.0], [20.2, 54.0], [20.3, 54.0], [20.4, 54.0], [20.5, 55.0], [20.6, 55.0], [20.7, 55.0], [20.8, 55.0], [20.9, 55.0], [21.0, 56.0], [21.1, 56.0], [21.2, 56.0], [21.3, 56.0], [21.4, 56.0], [21.5, 58.0], [21.6, 58.0], [21.7, 58.0], [21.8, 58.0], [21.9, 58.0], [22.0, 59.0], [22.1, 59.0], [22.2, 59.0], [22.3, 59.0], [22.4, 59.0], [22.5, 62.0], [22.6, 62.0], [22.7, 62.0], [22.8, 62.0], [22.9, 62.0], [23.0, 62.0], [23.1, 62.0], [23.2, 62.0], [23.3, 62.0], [23.4, 62.0], [23.5, 62.0], [23.6, 62.0], [23.7, 62.0], [23.8, 62.0], [23.9, 62.0], [24.0, 63.0], [24.1, 63.0], [24.2, 63.0], [24.3, 63.0], [24.4, 63.0], [24.5, 63.0], [24.6, 63.0], [24.7, 63.0], [24.8, 63.0], [24.9, 63.0], [25.0, 63.0], [25.1, 63.0], [25.2, 63.0], [25.3, 63.0], [25.4, 63.0], [25.5, 63.0], [25.6, 63.0], [25.7, 63.0], [25.8, 63.0], [25.9, 63.0], [26.0, 64.0], [26.1, 64.0], [26.2, 64.0], [26.3, 64.0], [26.4, 64.0], [26.5, 64.0], [26.6, 64.0], [26.7, 64.0], [26.8, 64.0], [26.9, 64.0], [27.0, 66.0], [27.1, 66.0], [27.2, 66.0], [27.3, 66.0], [27.4, 66.0], [27.5, 66.0], [27.6, 66.0], [27.7, 66.0], [27.8, 66.0], [27.9, 66.0], [28.0, 67.0], [28.1, 67.0], [28.2, 67.0], [28.3, 67.0], [28.4, 67.0], [28.5, 67.0], [28.6, 67.0], [28.7, 67.0], [28.8, 67.0], [28.9, 67.0], [29.0, 68.0], [29.1, 68.0], [29.2, 68.0], [29.3, 68.0], [29.4, 68.0], [29.5, 68.0], [29.6, 68.0], [29.7, 68.0], [29.8, 68.0], [29.9, 68.0], [30.0, 68.0], [30.1, 68.0], [30.2, 68.0], [30.3, 68.0], [30.4, 68.0], [30.5, 70.0], [30.6, 70.0], [30.7, 70.0], [30.8, 70.0], [30.9, 70.0], [31.0, 70.0], [31.1, 70.0], [31.2, 70.0], [31.3, 70.0], [31.4, 70.0], [31.5, 70.0], [31.6, 70.0], [31.7, 70.0], [31.8, 70.0], [31.9, 70.0], [32.0, 71.0], [32.1, 71.0], [32.2, 71.0], [32.3, 71.0], [32.4, 71.0], [32.5, 73.0], [32.6, 73.0], [32.7, 73.0], [32.8, 73.0], [32.9, 73.0], [33.0, 73.0], [33.1, 73.0], [33.2, 73.0], [33.3, 73.0], [33.4, 73.0], [33.5, 73.0], [33.6, 73.0], [33.7, 73.0], [33.8, 73.0], [33.9, 73.0], [34.0, 74.0], [34.1, 74.0], [34.2, 74.0], [34.3, 74.0], [34.4, 74.0], [34.5, 75.0], [34.6, 75.0], [34.7, 75.0], [34.8, 75.0], [34.9, 75.0], [35.0, 75.0], [35.1, 75.0], [35.2, 75.0], [35.3, 75.0], [35.4, 75.0], [35.5, 77.0], [35.6, 77.0], [35.7, 77.0], [35.8, 77.0], [35.9, 77.0], [36.0, 77.0], [36.1, 77.0], [36.2, 77.0], [36.3, 77.0], [36.4, 77.0], [36.5, 79.0], [36.6, 79.0], [36.7, 79.0], [36.8, 79.0], [36.9, 79.0], [37.0, 80.0], [37.1, 80.0], [37.2, 80.0], [37.3, 80.0], [37.4, 80.0], [37.5, 81.0], [37.6, 81.0], [37.7, 81.0], [37.8, 81.0], [37.9, 81.0], [38.0, 83.0], [38.1, 83.0], [38.2, 83.0], [38.3, 83.0], [38.4, 83.0], [38.5, 84.0], [38.6, 84.0], [38.7, 84.0], [38.8, 84.0], [38.9, 84.0], [39.0, 84.0], [39.1, 84.0], [39.2, 84.0], [39.3, 84.0], [39.4, 84.0], [39.5, 84.0], [39.6, 84.0], [39.7, 84.0], [39.8, 84.0], [39.9, 84.0], [40.0, 84.0], [40.1, 84.0], [40.2, 84.0], [40.3, 84.0], [40.4, 84.0], [40.5, 84.0], [40.6, 84.0], [40.7, 84.0], [40.8, 84.0], [40.9, 84.0], [41.0, 85.0], [41.1, 85.0], [41.2, 85.0], [41.3, 85.0], [41.4, 85.0], [41.5, 86.0], [41.6, 86.0], [41.7, 86.0], [41.8, 86.0], [41.9, 86.0], [42.0, 86.0], [42.1, 86.0], [42.2, 86.0], [42.3, 86.0], [42.4, 86.0], [42.5, 87.0], [42.6, 87.0], [42.7, 87.0], [42.8, 87.0], [42.9, 87.0], [43.0, 87.0], [43.1, 87.0], [43.2, 87.0], [43.3, 87.0], [43.4, 87.0], [43.5, 88.0], [43.6, 88.0], [43.7, 88.0], [43.8, 88.0], [43.9, 88.0], [44.0, 89.0], [44.1, 89.0], [44.2, 89.0], [44.3, 89.0], [44.4, 89.0], [44.5, 89.0], [44.6, 89.0], [44.7, 89.0], [44.8, 89.0], [44.9, 89.0], [45.0, 90.0], [45.1, 90.0], [45.2, 90.0], [45.3, 90.0], [45.4, 90.0], [45.5, 90.0], [45.6, 90.0], [45.7, 90.0], [45.8, 90.0], [45.9, 90.0], [46.0, 91.0], [46.1, 91.0], [46.2, 91.0], [46.3, 91.0], [46.4, 91.0], [46.5, 92.0], [46.6, 92.0], [46.7, 92.0], [46.8, 92.0], [46.9, 92.0], [47.0, 92.0], [47.1, 92.0], [47.2, 92.0], [47.3, 92.0], [47.4, 92.0], [47.5, 94.0], [47.6, 94.0], [47.7, 94.0], [47.8, 94.0], [47.9, 94.0], [48.0, 94.0], [48.1, 94.0], [48.2, 94.0], [48.3, 94.0], [48.4, 94.0], [48.5, 94.0], [48.6, 94.0], [48.7, 94.0], [48.8, 94.0], [48.9, 94.0], [49.0, 94.0], [49.1, 94.0], [49.2, 94.0], [49.3, 94.0], [49.4, 94.0], [49.5, 96.0], [49.6, 96.0], [49.7, 96.0], [49.8, 96.0], [49.9, 96.0], [50.0, 98.0], [50.1, 98.0], [50.2, 98.0], [50.3, 98.0], [50.4, 98.0], [50.5, 99.0], [50.6, 99.0], [50.7, 99.0], [50.8, 99.0], [50.9, 99.0], [51.0, 99.0], [51.1, 99.0], [51.2, 99.0], [51.3, 99.0], [51.4, 99.0], [51.5, 102.0], [51.6, 102.0], [51.7, 102.0], [51.8, 102.0], [51.9, 102.0], [52.0, 102.0], [52.1, 102.0], [52.2, 102.0], [52.3, 102.0], [52.4, 102.0], [52.5, 102.0], [52.6, 102.0], [52.7, 102.0], [52.8, 102.0], [52.9, 102.0], [53.0, 102.0], [53.1, 102.0], [53.2, 102.0], [53.3, 102.0], [53.4, 102.0], [53.5, 103.0], [53.6, 103.0], [53.7, 103.0], [53.8, 103.0], [53.9, 103.0], [54.0, 103.0], [54.1, 103.0], [54.2, 103.0], [54.3, 103.0], [54.4, 103.0], [54.5, 105.0], [54.6, 105.0], [54.7, 105.0], [54.8, 105.0], [54.9, 105.0], [55.0, 105.0], [55.1, 105.0], [55.2, 105.0], [55.3, 105.0], [55.4, 105.0], [55.5, 106.0], [55.6, 106.0], [55.7, 106.0], [55.8, 106.0], [55.9, 106.0], [56.0, 107.0], [56.1, 107.0], [56.2, 107.0], [56.3, 107.0], [56.4, 107.0], [56.5, 107.0], [56.6, 107.0], [56.7, 107.0], [56.8, 107.0], [56.9, 107.0], [57.0, 108.0], [57.1, 108.0], [57.2, 108.0], [57.3, 108.0], [57.4, 108.0], [57.5, 108.0], [57.6, 108.0], [57.7, 108.0], [57.8, 108.0], [57.9, 108.0], [58.0, 109.0], [58.1, 109.0], [58.2, 109.0], [58.3, 109.0], [58.4, 109.0], [58.5, 109.0], [58.6, 109.0], [58.7, 109.0], [58.8, 109.0], [58.9, 109.0], [59.0, 110.0], [59.1, 110.0], [59.2, 110.0], [59.3, 110.0], [59.4, 110.0], [59.5, 111.0], [59.6, 111.0], [59.7, 111.0], [59.8, 111.0], [59.9, 111.0], [60.0, 111.0], [60.1, 111.0], [60.2, 111.0], [60.3, 111.0], [60.4, 111.0], [60.5, 114.0], [60.6, 114.0], [60.7, 114.0], [60.8, 114.0], [60.9, 114.0], [61.0, 115.0], [61.1, 115.0], [61.2, 115.0], [61.3, 115.0], [61.4, 115.0], [61.5, 120.0], [61.6, 120.0], [61.7, 120.0], [61.8, 120.0], [61.9, 120.0], [62.0, 121.0], [62.1, 121.0], [62.2, 121.0], [62.3, 121.0], [62.4, 121.0], [62.5, 122.0], [62.6, 122.0], [62.7, 122.0], [62.8, 122.0], [62.9, 122.0], [63.0, 126.0], [63.1, 126.0], [63.2, 126.0], [63.3, 126.0], [63.4, 126.0], [63.5, 126.0], [63.6, 126.0], [63.7, 126.0], [63.8, 126.0], [63.9, 126.0], [64.0, 130.0], [64.1, 130.0], [64.2, 130.0], [64.3, 130.0], [64.4, 130.0], [64.5, 130.0], [64.6, 130.0], [64.7, 130.0], [64.8, 130.0], [64.9, 130.0], [65.0, 131.0], [65.1, 131.0], [65.2, 131.0], [65.3, 131.0], [65.4, 131.0], [65.5, 131.0], [65.6, 131.0], [65.7, 131.0], [65.8, 131.0], [65.9, 131.0], [66.0, 134.0], [66.1, 134.0], [66.2, 134.0], [66.3, 134.0], [66.4, 134.0], [66.5, 136.0], [66.6, 136.0], [66.7, 136.0], [66.8, 136.0], [66.9, 136.0], [67.0, 136.0], [67.1, 136.0], [67.2, 136.0], [67.3, 136.0], [67.4, 136.0], [67.5, 140.0], [67.6, 140.0], [67.7, 140.0], [67.8, 140.0], [67.9, 140.0], [68.0, 141.0], [68.1, 141.0], [68.2, 141.0], [68.3, 141.0], [68.4, 141.0], [68.5, 143.0], [68.6, 143.0], [68.7, 143.0], [68.8, 143.0], [68.9, 143.0], [69.0, 143.0], [69.1, 143.0], [69.2, 143.0], [69.3, 143.0], [69.4, 143.0], [69.5, 144.0], [69.6, 144.0], [69.7, 144.0], [69.8, 144.0], [69.9, 144.0], [70.0, 145.0], [70.1, 145.0], [70.2, 145.0], [70.3, 145.0], [70.4, 145.0], [70.5, 145.0], [70.6, 145.0], [70.7, 145.0], [70.8, 145.0], [70.9, 145.0], [71.0, 151.0], [71.1, 151.0], [71.2, 151.0], [71.3, 151.0], [71.4, 151.0], [71.5, 152.0], [71.6, 152.0], [71.7, 152.0], [71.8, 152.0], [71.9, 152.0], [72.0, 152.0], [72.1, 152.0], [72.2, 152.0], [72.3, 152.0], [72.4, 152.0], [72.5, 154.0], [72.6, 154.0], [72.7, 154.0], [72.8, 154.0], [72.9, 154.0], [73.0, 154.0], [73.1, 154.0], [73.2, 154.0], [73.3, 154.0], [73.4, 154.0], [73.5, 155.0], [73.6, 155.0], [73.7, 155.0], [73.8, 155.0], [73.9, 155.0], [74.0, 155.0], [74.1, 155.0], [74.2, 155.0], [74.3, 155.0], [74.4, 155.0], [74.5, 156.0], [74.6, 156.0], [74.7, 156.0], [74.8, 156.0], [74.9, 156.0], [75.0, 157.0], [75.1, 157.0], [75.2, 157.0], [75.3, 157.0], [75.4, 157.0], [75.5, 158.0], [75.6, 158.0], [75.7, 158.0], [75.8, 158.0], [75.9, 158.0], [76.0, 161.0], [76.1, 161.0], [76.2, 161.0], [76.3, 161.0], [76.4, 161.0], [76.5, 161.0], [76.6, 161.0], [76.7, 161.0], [76.8, 161.0], [76.9, 161.0], [77.0, 168.0], [77.1, 168.0], [77.2, 168.0], [77.3, 168.0], [77.4, 168.0], [77.5, 168.0], [77.6, 168.0], [77.7, 168.0], [77.8, 168.0], [77.9, 168.0], [78.0, 170.0], [78.1, 170.0], [78.2, 170.0], [78.3, 170.0], [78.4, 170.0], [78.5, 171.0], [78.6, 171.0], [78.7, 171.0], [78.8, 171.0], [78.9, 171.0], [79.0, 173.0], [79.1, 173.0], [79.2, 173.0], [79.3, 173.0], [79.4, 173.0], [79.5, 185.0], [79.6, 185.0], [79.7, 185.0], [79.8, 185.0], [79.9, 185.0], [80.0, 187.0], [80.1, 187.0], [80.2, 187.0], [80.3, 187.0], [80.4, 187.0], [80.5, 188.0], [80.6, 188.0], [80.7, 188.0], [80.8, 188.0], [80.9, 188.0], [81.0, 189.0], [81.1, 189.0], [81.2, 189.0], [81.3, 189.0], [81.4, 189.0], [81.5, 189.0], [81.6, 189.0], [81.7, 189.0], [81.8, 189.0], [81.9, 189.0], [82.0, 195.0], [82.1, 195.0], [82.2, 195.0], [82.3, 195.0], [82.4, 195.0], [82.5, 197.0], [82.6, 197.0], [82.7, 197.0], [82.8, 197.0], [82.9, 197.0], [83.0, 204.0], [83.1, 204.0], [83.2, 204.0], [83.3, 204.0], [83.4, 204.0], [83.5, 210.0], [83.6, 210.0], [83.7, 210.0], [83.8, 210.0], [83.9, 210.0], [84.0, 214.0], [84.1, 214.0], [84.2, 214.0], [84.3, 214.0], [84.4, 214.0], [84.5, 215.0], [84.6, 215.0], [84.7, 215.0], [84.8, 215.0], [84.9, 215.0], [85.0, 216.0], [85.1, 216.0], [85.2, 216.0], [85.3, 216.0], [85.4, 216.0], [85.5, 222.0], [85.6, 222.0], [85.7, 222.0], [85.8, 222.0], [85.9, 222.0], [86.0, 225.0], [86.1, 225.0], [86.2, 225.0], [86.3, 225.0], [86.4, 225.0], [86.5, 243.0], [86.6, 243.0], [86.7, 243.0], [86.8, 243.0], [86.9, 243.0], [87.0, 244.0], [87.1, 244.0], [87.2, 244.0], [87.3, 244.0], [87.4, 244.0], [87.5, 261.0], [87.6, 261.0], [87.7, 261.0], [87.8, 261.0], [87.9, 261.0], [88.0, 263.0], [88.1, 263.0], [88.2, 263.0], [88.3, 263.0], [88.4, 263.0], [88.5, 266.0], [88.6, 266.0], [88.7, 266.0], [88.8, 266.0], [88.9, 266.0], [89.0, 271.0], [89.1, 271.0], [89.2, 271.0], [89.3, 271.0], [89.4, 271.0], [89.5, 279.0], [89.6, 279.0], [89.7, 279.0], [89.8, 279.0], [89.9, 279.0], [90.0, 280.0], [90.1, 280.0], [90.2, 280.0], [90.3, 280.0], [90.4, 280.0], [90.5, 289.0], [90.6, 289.0], [90.7, 289.0], [90.8, 289.0], [90.9, 289.0], [91.0, 294.0], [91.1, 294.0], [91.2, 294.0], [91.3, 294.0], [91.4, 294.0], [91.5, 309.0], [91.6, 309.0], [91.7, 309.0], [91.8, 309.0], [91.9, 309.0], [92.0, 320.0], [92.1, 320.0], [92.2, 320.0], [92.3, 320.0], [92.4, 320.0], [92.5, 347.0], [92.6, 347.0], [92.7, 347.0], [92.8, 347.0], [92.9, 347.0], [93.0, 349.0], [93.1, 349.0], [93.2, 349.0], [93.3, 349.0], [93.4, 349.0], [93.5, 387.0], [93.6, 387.0], [93.7, 387.0], [93.8, 387.0], [93.9, 387.0], [94.0, 438.0], [94.1, 438.0], [94.2, 438.0], [94.3, 438.0], [94.4, 438.0], [94.5, 478.0], [94.6, 478.0], [94.7, 478.0], [94.8, 478.0], [94.9, 478.0], [95.0, 482.0], [95.1, 482.0], [95.2, 482.0], [95.3, 482.0], [95.4, 482.0], [95.5, 532.0], [95.6, 532.0], [95.7, 532.0], [95.8, 532.0], [95.9, 532.0], [96.0, 534.0], [96.1, 534.0], [96.2, 534.0], [96.3, 534.0], [96.4, 534.0], [96.5, 595.0], [96.6, 595.0], [96.7, 595.0], [96.8, 595.0], [96.9, 595.0], [97.0, 641.0], [97.1, 641.0], [97.2, 641.0], [97.3, 641.0], [97.4, 641.0], [97.5, 854.0], [97.6, 854.0], [97.7, 854.0], [97.8, 854.0], [97.9, 854.0], [98.0, 884.0], [98.1, 884.0], [98.2, 884.0], [98.3, 884.0], [98.4, 884.0], [98.5, 893.0], [98.6, 893.0], [98.7, 893.0], [98.8, 893.0], [98.9, 893.0], [99.0, 2163.0], [99.1, 2163.0], [99.2, 2163.0], [99.3, 2163.0], [99.4, 2163.0], [99.5, 2345.0], [99.6, 2345.0], [99.7, 2345.0], [99.8, 2345.0], [99.9, 2345.0]], "isOverall": false, "label": "2", "isController": false}, {"data": [[0.0, 28.0], [0.1, 28.0], [0.2, 28.0], [0.3, 30.0], [0.4, 30.0], [0.5, 32.0], [0.6, 32.0], [0.7, 32.0], [0.8, 32.0], [0.9, 32.0], [1.0, 34.0], [1.1, 34.0], [1.2, 34.0], [1.3, 35.0], [1.4, 35.0], [1.5, 35.0], [1.6, 35.0], [1.7, 35.0], [1.8, 35.0], [1.9, 35.0], [2.0, 36.0], [2.1, 36.0], [2.2, 36.0], [2.3, 36.0], [2.4, 36.0], [2.5, 36.0], [2.6, 36.0], [2.7, 36.0], [2.8, 37.0], [2.9, 37.0], [3.0, 37.0], [3.1, 37.0], [3.2, 37.0], [3.3, 38.0], [3.4, 38.0], [3.5, 38.0], [3.6, 38.0], [3.7, 38.0], [3.8, 38.0], [3.9, 38.0], [4.0, 40.0], [4.1, 40.0], [4.2, 40.0], [4.3, 40.0], [4.4, 40.0], [4.5, 40.0], [4.6, 40.0], [4.7, 40.0], [4.8, 40.0], [4.9, 40.0], [5.0, 40.0], [5.1, 40.0], [5.2, 40.0], [5.3, 42.0], [5.4, 42.0], [5.5, 42.0], [5.6, 42.0], [5.7, 42.0], [5.8, 42.0], [5.9, 42.0], [6.0, 42.0], [6.1, 42.0], [6.2, 42.0], [6.3, 42.0], [6.4, 42.0], [6.5, 42.0], [6.6, 42.0], [6.7, 42.0], [6.8, 43.0], [6.9, 43.0], [7.0, 43.0], [7.1, 43.0], [7.2, 43.0], [7.3, 43.0], [7.4, 43.0], [7.5, 43.0], [7.6, 43.0], [7.7, 43.0], [7.8, 44.0], [7.9, 44.0], [8.0, 44.0], [8.1, 44.0], [8.2, 44.0], [8.3, 45.0], [8.4, 45.0], [8.5, 45.0], [8.6, 45.0], [8.7, 45.0], [8.8, 45.0], [8.9, 45.0], [9.0, 46.0], [9.1, 46.0], [9.2, 46.0], [9.3, 47.0], [9.4, 47.0], [9.5, 47.0], [9.6, 47.0], [9.7, 47.0], [9.8, 48.0], [9.9, 48.0], [10.0, 48.0], [10.1, 48.0], [10.2, 48.0], [10.3, 48.0], [10.4, 48.0], [10.5, 49.0], [10.6, 49.0], [10.7, 49.0], [10.8, 49.0], [10.9, 49.0], [11.0, 49.0], [11.1, 49.0], [11.2, 49.0], [11.3, 49.0], [11.4, 49.0], [11.5, 49.0], [11.6, 49.0], [11.7, 49.0], [11.8, 50.0], [11.9, 50.0], [12.0, 50.0], [12.1, 50.0], [12.2, 50.0], [12.3, 51.0], [12.4, 51.0], [12.5, 52.0], [12.6, 52.0], [12.7, 52.0], [12.8, 52.0], [12.9, 52.0], [13.0, 52.0], [13.1, 52.0], [13.2, 52.0], [13.3, 52.0], [13.4, 52.0], [13.5, 52.0], [13.6, 52.0], [13.7, 52.0], [13.8, 53.0], [13.9, 53.0], [14.0, 53.0], [14.1, 53.0], [14.2, 53.0], [14.3, 53.0], [14.4, 53.0], [14.5, 53.0], [14.6, 53.0], [14.7, 53.0], [14.8, 53.0], [14.9, 53.0], [15.0, 53.0], [15.1, 53.0], [15.2, 53.0], [15.3, 54.0], [15.4, 54.0], [15.5, 54.0], [15.6, 54.0], [15.7, 54.0], [15.8, 56.0], [15.9, 56.0], [16.0, 57.0], [16.1, 57.0], [16.2, 57.0], [16.3, 57.0], [16.4, 57.0], [16.5, 58.0], [16.6, 58.0], [16.7, 58.0], [16.8, 58.0], [16.9, 58.0], [17.0, 58.0], [17.1, 58.0], [17.2, 58.0], [17.3, 59.0], [17.4, 59.0], [17.5, 59.0], [17.6, 59.0], [17.7, 59.0], [17.8, 60.0], [17.9, 60.0], [18.0, 60.0], [18.1, 60.0], [18.2, 60.0], [18.3, 60.0], [18.4, 60.0], [18.5, 61.0], [18.6, 61.0], [18.7, 61.0], [18.8, 62.0], [18.9, 62.0], [19.0, 62.0], [19.1, 62.0], [19.2, 62.0], [19.3, 62.0], [19.4, 62.0], [19.5, 62.0], [19.6, 62.0], [19.7, 62.0], [19.8, 62.0], [19.9, 62.0], [20.0, 63.0], [20.1, 63.0], [20.2, 63.0], [20.3, 63.0], [20.4, 63.0], [20.5, 63.0], [20.6, 63.0], [20.7, 63.0], [20.8, 63.0], [20.9, 63.0], [21.0, 64.0], [21.1, 64.0], [21.2, 64.0], [21.3, 64.0], [21.4, 64.0], [21.5, 65.0], [21.6, 65.0], [21.7, 65.0], [21.8, 66.0], [21.9, 66.0], [22.0, 66.0], [22.1, 66.0], [22.2, 66.0], [22.3, 67.0], [22.4, 67.0], [22.5, 67.0], [22.6, 67.0], [22.7, 67.0], [22.8, 67.0], [22.9, 67.0], [23.0, 67.0], [23.1, 67.0], [23.2, 67.0], [23.3, 68.0], [23.4, 68.0], [23.5, 68.0], [23.6, 68.0], [23.7, 68.0], [23.8, 68.0], [23.9, 68.0], [24.0, 69.0], [24.1, 69.0], [24.2, 69.0], [24.3, 70.0], [24.4, 70.0], [24.5, 70.0], [24.6, 70.0], [24.7, 70.0], [24.8, 70.0], [24.9, 70.0], [25.0, 70.0], [25.1, 70.0], [25.2, 70.0], [25.3, 70.0], [25.4, 70.0], [25.5, 71.0], [25.6, 71.0], [25.7, 71.0], [25.8, 71.0], [25.9, 71.0], [26.0, 71.0], [26.1, 71.0], [26.2, 71.0], [26.3, 71.0], [26.4, 71.0], [26.5, 72.0], [26.6, 72.0], [26.7, 72.0], [26.8, 72.0], [26.9, 72.0], [27.0, 73.0], [27.1, 73.0], [27.2, 73.0], [27.3, 73.0], [27.4, 73.0], [27.5, 74.0], [27.6, 74.0], [27.7, 74.0], [27.8, 74.0], [27.9, 74.0], [28.0, 75.0], [28.1, 75.0], [28.2, 75.0], [28.3, 76.0], [28.4, 76.0], [28.5, 76.0], [28.6, 76.0], [28.7, 76.0], [28.8, 77.0], [28.9, 77.0], [29.0, 77.0], [29.1, 77.0], [29.2, 77.0], [29.3, 77.0], [29.4, 77.0], [29.5, 77.0], [29.6, 77.0], [29.7, 77.0], [29.8, 78.0], [29.9, 78.0], [30.0, 78.0], [30.1, 78.0], [30.2, 78.0], [30.3, 78.0], [30.4, 78.0], [30.5, 79.0], [30.6, 79.0], [30.7, 79.0], [30.8, 79.0], [30.9, 79.0], [31.0, 80.0], [31.1, 80.0], [31.2, 80.0], [31.3, 80.0], [31.4, 80.0], [31.5, 80.0], [31.6, 80.0], [31.7, 80.0], [31.8, 80.0], [31.9, 80.0], [32.0, 80.0], [32.1, 80.0], [32.2, 80.0], [32.3, 81.0], [32.4, 81.0], [32.5, 81.0], [32.6, 81.0], [32.7, 81.0], [32.8, 81.0], [32.9, 81.0], [33.0, 82.0], [33.1, 82.0], [33.2, 82.0], [33.3, 82.0], [33.4, 82.0], [33.5, 82.0], [33.6, 82.0], [33.7, 82.0], [33.8, 83.0], [33.9, 83.0], [34.0, 83.0], [34.1, 83.0], [34.2, 83.0], [34.3, 83.0], [34.4, 83.0], [34.5, 84.0], [34.6, 84.0], [34.7, 84.0], [34.8, 84.0], [34.9, 84.0], [35.0, 84.0], [35.1, 84.0], [35.2, 84.0], [35.3, 85.0], [35.4, 85.0], [35.5, 86.0], [35.6, 86.0], [35.7, 86.0], [35.8, 86.0], [35.9, 86.0], [36.0, 88.0], [36.1, 88.0], [36.2, 88.0], [36.3, 88.0], [36.4, 88.0], [36.5, 88.0], [36.6, 88.0], [36.7, 88.0], [36.8, 88.0], [36.9, 88.0], [37.0, 89.0], [37.1, 89.0], [37.2, 89.0], [37.3, 90.0], [37.4, 90.0], [37.5, 91.0], [37.6, 91.0], [37.7, 91.0], [37.8, 91.0], [37.9, 91.0], [38.0, 91.0], [38.1, 91.0], [38.2, 91.0], [38.3, 92.0], [38.4, 92.0], [38.5, 94.0], [38.6, 94.0], [38.7, 94.0], [38.8, 95.0], [38.9, 95.0], [39.0, 95.0], [39.1, 95.0], [39.2, 95.0], [39.3, 95.0], [39.4, 95.0], [39.5, 95.0], [39.6, 95.0], [39.7, 95.0], [39.8, 96.0], [39.9, 96.0], [40.0, 97.0], [40.1, 97.0], [40.2, 97.0], [40.3, 97.0], [40.4, 97.0], [40.5, 97.0], [40.6, 97.0], [40.7, 97.0], [40.8, 97.0], [40.9, 97.0], [41.0, 98.0], [41.1, 98.0], [41.2, 98.0], [41.3, 98.0], [41.4, 98.0], [41.5, 98.0], [41.6, 98.0], [41.7, 98.0], [41.8, 99.0], [41.9, 99.0], [42.0, 99.0], [42.1, 99.0], [42.2, 99.0], [42.3, 99.0], [42.4, 99.0], [42.5, 99.0], [42.6, 99.0], [42.7, 99.0], [42.8, 99.0], [42.9, 99.0], [43.0, 99.0], [43.1, 99.0], [43.2, 99.0], [43.3, 100.0], [43.4, 100.0], [43.5, 101.0], [43.6, 101.0], [43.7, 101.0], [43.8, 101.0], [43.9, 101.0], [44.0, 102.0], [44.1, 102.0], [44.2, 102.0], [44.3, 102.0], [44.4, 102.0], [44.5, 103.0], [44.6, 103.0], [44.7, 103.0], [44.8, 104.0], [44.9, 104.0], [45.0, 105.0], [45.1, 105.0], [45.2, 105.0], [45.3, 105.0], [45.4, 105.0], [45.5, 105.0], [45.6, 105.0], [45.7, 105.0], [45.8, 106.0], [45.9, 106.0], [46.0, 106.0], [46.1, 106.0], [46.2, 106.0], [46.3, 107.0], [46.4, 107.0], [46.5, 107.0], [46.6, 107.0], [46.7, 107.0], [46.8, 107.0], [46.9, 107.0], [47.0, 108.0], [47.1, 108.0], [47.2, 108.0], [47.3, 109.0], [47.4, 109.0], [47.5, 109.0], [47.6, 109.0], [47.7, 109.0], [47.8, 109.0], [47.9, 109.0], [48.0, 110.0], [48.1, 110.0], [48.2, 110.0], [48.3, 110.0], [48.4, 110.0], [48.5, 111.0], [48.6, 111.0], [48.7, 111.0], [48.8, 111.0], [48.9, 111.0], [49.0, 111.0], [49.1, 111.0], [49.2, 111.0], [49.3, 111.0], [49.4, 111.0], [49.5, 111.0], [49.6, 111.0], [49.7, 111.0], [49.8, 112.0], [49.9, 112.0], [50.0, 112.0], [50.1, 112.0], [50.2, 112.0], [50.3, 113.0], [50.4, 113.0], [50.5, 113.0], [50.6, 113.0], [50.7, 113.0], [50.8, 113.0], [50.9, 113.0], [51.0, 113.0], [51.1, 113.0], [51.2, 113.0], [51.3, 115.0], [51.4, 115.0], [51.5, 115.0], [51.6, 115.0], [51.7, 115.0], [51.8, 115.0], [51.9, 115.0], [52.0, 115.0], [52.1, 115.0], [52.2, 115.0], [52.3, 115.0], [52.4, 115.0], [52.5, 116.0], [52.6, 116.0], [52.7, 116.0], [52.8, 116.0], [52.9, 116.0], [53.0, 118.0], [53.1, 118.0], [53.2, 118.0], [53.3, 118.0], [53.4, 118.0], [53.5, 118.0], [53.6, 118.0], [53.7, 118.0], [53.8, 120.0], [53.9, 120.0], [54.0, 121.0], [54.1, 121.0], [54.2, 121.0], [54.3, 122.0], [54.4, 122.0], [54.5, 122.0], [54.6, 122.0], [54.7, 122.0], [54.8, 123.0], [54.9, 123.0], [55.0, 124.0], [55.1, 124.0], [55.2, 124.0], [55.3, 124.0], [55.4, 124.0], [55.5, 124.0], [55.6, 124.0], [55.7, 124.0], [55.8, 125.0], [55.9, 125.0], [56.0, 126.0], [56.1, 126.0], [56.2, 126.0], [56.3, 126.0], [56.4, 126.0], [56.5, 129.0], [56.6, 129.0], [56.7, 129.0], [56.8, 130.0], [56.9, 130.0], [57.0, 130.0], [57.1, 130.0], [57.2, 130.0], [57.3, 130.0], [57.4, 130.0], [57.5, 131.0], [57.6, 131.0], [57.7, 131.0], [57.8, 131.0], [57.9, 131.0], [58.0, 132.0], [58.1, 132.0], [58.2, 132.0], [58.3, 133.0], [58.4, 133.0], [58.5, 133.0], [58.6, 133.0], [58.7, 133.0], [58.8, 133.0], [58.9, 133.0], [59.0, 133.0], [59.1, 133.0], [59.2, 133.0], [59.3, 133.0], [59.4, 133.0], [59.5, 133.0], [59.6, 133.0], [59.7, 133.0], [59.8, 135.0], [59.9, 135.0], [60.0, 135.0], [60.1, 135.0], [60.2, 135.0], [60.3, 135.0], [60.4, 135.0], [60.5, 137.0], [60.6, 137.0], [60.7, 137.0], [60.8, 138.0], [60.9, 138.0], [61.0, 138.0], [61.1, 138.0], [61.2, 138.0], [61.3, 142.0], [61.4, 142.0], [61.5, 143.0], [61.6, 143.0], [61.7, 143.0], [61.8, 145.0], [61.9, 145.0], [62.0, 146.0], [62.1, 146.0], [62.2, 146.0], [62.3, 146.0], [62.4, 146.0], [62.5, 146.0], [62.6, 146.0], [62.7, 146.0], [62.8, 147.0], [62.9, 147.0], [63.0, 148.0], [63.1, 148.0], [63.2, 148.0], [63.3, 149.0], [63.4, 149.0], [63.5, 151.0], [63.6, 151.0], [63.7, 151.0], [63.8, 153.0], [63.9, 153.0], [64.0, 155.0], [64.1, 155.0], [64.2, 155.0], [64.3, 164.0], [64.4, 164.0], [64.5, 164.0], [64.6, 164.0], [64.7, 164.0], [64.8, 165.0], [64.9, 165.0], [65.0, 168.0], [65.1, 168.0], [65.2, 168.0], [65.3, 168.0], [65.4, 168.0], [65.5, 169.0], [65.6, 169.0], [65.7, 169.0], [65.8, 169.0], [65.9, 169.0], [66.0, 170.0], [66.1, 170.0], [66.2, 170.0], [66.3, 171.0], [66.4, 171.0], [66.5, 172.0], [66.6, 172.0], [66.7, 172.0], [66.8, 173.0], [66.9, 173.0], [67.0, 173.0], [67.1, 173.0], [67.2, 173.0], [67.3, 174.0], [67.4, 174.0], [67.5, 175.0], [67.6, 175.0], [67.7, 175.0], [67.8, 177.0], [67.9, 177.0], [68.0, 178.0], [68.1, 178.0], [68.2, 178.0], [68.3, 180.0], [68.4, 180.0], [68.5, 182.0], [68.6, 182.0], [68.7, 182.0], [68.8, 182.0], [68.9, 182.0], [69.0, 183.0], [69.1, 183.0], [69.2, 183.0], [69.3, 184.0], [69.4, 184.0], [69.5, 185.0], [69.6, 185.0], [69.7, 185.0], [69.8, 185.0], [69.9, 185.0], [70.0, 186.0], [70.1, 186.0], [70.2, 186.0], [70.3, 189.0], [70.4, 189.0], [70.5, 190.0], [70.6, 190.0], [70.7, 190.0], [70.8, 192.0], [70.9, 192.0], [71.0, 192.0], [71.1, 192.0], [71.2, 192.0], [71.3, 192.0], [71.4, 192.0], [71.5, 192.0], [71.6, 192.0], [71.7, 192.0], [71.8, 194.0], [71.9, 194.0], [72.0, 194.0], [72.1, 194.0], [72.2, 194.0], [72.3, 203.0], [72.4, 203.0], [72.5, 203.0], [72.6, 203.0], [72.7, 203.0], [72.8, 204.0], [72.9, 204.0], [73.0, 206.0], [73.1, 206.0], [73.2, 206.0], [73.3, 207.0], [73.4, 207.0], [73.5, 208.0], [73.6, 208.0], [73.7, 208.0], [73.8, 209.0], [73.9, 209.0], [74.0, 210.0], [74.1, 210.0], [74.2, 210.0], [74.3, 211.0], [74.4, 211.0], [74.5, 213.0], [74.6, 213.0], [74.7, 213.0], [74.8, 213.0], [74.9, 213.0], [75.0, 213.0], [75.1, 213.0], [75.2, 213.0], [75.3, 216.0], [75.4, 216.0], [75.5, 227.0], [75.6, 227.0], [75.7, 227.0], [75.8, 227.0], [75.9, 227.0], [76.0, 227.0], [76.1, 227.0], [76.2, 227.0], [76.3, 230.0], [76.4, 230.0], [76.5, 231.0], [76.6, 231.0], [76.7, 231.0], [76.8, 233.0], [76.9, 233.0], [77.0, 233.0], [77.1, 233.0], [77.2, 233.0], [77.3, 234.0], [77.4, 234.0], [77.5, 236.0], [77.6, 236.0], [77.7, 236.0], [77.8, 236.0], [77.9, 236.0], [78.0, 237.0], [78.1, 237.0], [78.2, 237.0], [78.3, 238.0], [78.4, 238.0], [78.5, 238.0], [78.6, 238.0], [78.7, 238.0], [78.8, 239.0], [78.9, 239.0], [79.0, 242.0], [79.1, 242.0], [79.2, 242.0], [79.3, 244.0], [79.4, 244.0], [79.5, 247.0], [79.6, 247.0], [79.7, 247.0], [79.8, 249.0], [79.9, 249.0], [80.0, 255.0], [80.1, 255.0], [80.2, 255.0], [80.3, 255.0], [80.4, 255.0], [80.5, 257.0], [80.6, 257.0], [80.7, 257.0], [80.8, 262.0], [80.9, 262.0], [81.0, 262.0], [81.1, 262.0], [81.2, 262.0], [81.3, 264.0], [81.4, 264.0], [81.5, 266.0], [81.6, 266.0], [81.7, 266.0], [81.8, 267.0], [81.9, 267.0], [82.0, 268.0], [82.1, 268.0], [82.2, 268.0], [82.3, 272.0], [82.4, 272.0], [82.5, 279.0], [82.6, 279.0], [82.7, 279.0], [82.8, 279.0], [82.9, 279.0], [83.0, 281.0], [83.1, 281.0], [83.2, 281.0], [83.3, 281.0], [83.4, 281.0], [83.5, 285.0], [83.6, 285.0], [83.7, 285.0], [83.8, 292.0], [83.9, 292.0], [84.0, 292.0], [84.1, 292.0], [84.2, 292.0], [84.3, 295.0], [84.4, 295.0], [84.5, 297.0], [84.6, 297.0], [84.7, 297.0], [84.8, 299.0], [84.9, 299.0], [85.0, 304.0], [85.1, 304.0], [85.2, 304.0], [85.3, 312.0], [85.4, 312.0], [85.5, 312.0], [85.6, 312.0], [85.7, 312.0], [85.8, 321.0], [85.9, 321.0], [86.0, 322.0], [86.1, 322.0], [86.2, 322.0], [86.3, 334.0], [86.4, 334.0], [86.5, 338.0], [86.6, 338.0], [86.7, 338.0], [86.8, 342.0], [86.9, 342.0], [87.0, 350.0], [87.1, 350.0], [87.2, 350.0], [87.3, 350.0], [87.4, 350.0], [87.5, 364.0], [87.6, 364.0], [87.7, 364.0], [87.8, 369.0], [87.9, 369.0], [88.0, 382.0], [88.1, 382.0], [88.2, 382.0], [88.3, 382.0], [88.4, 382.0], [88.5, 383.0], [88.6, 383.0], [88.7, 383.0], [88.8, 405.0], [88.9, 405.0], [89.0, 411.0], [89.1, 411.0], [89.2, 411.0], [89.3, 415.0], [89.4, 415.0], [89.5, 418.0], [89.6, 418.0], [89.7, 418.0], [89.8, 420.0], [89.9, 420.0], [90.0, 428.0], [90.1, 428.0], [90.2, 428.0], [90.3, 441.0], [90.4, 441.0], [90.5, 451.0], [90.6, 451.0], [90.7, 451.0], [90.8, 452.0], [90.9, 452.0], [91.0, 455.0], [91.1, 455.0], [91.2, 455.0], [91.3, 461.0], [91.4, 461.0], [91.5, 506.0], [91.6, 506.0], [91.7, 506.0], [91.8, 511.0], [91.9, 511.0], [92.0, 514.0], [92.1, 514.0], [92.2, 514.0], [92.3, 518.0], [92.4, 518.0], [92.5, 524.0], [92.6, 524.0], [92.7, 524.0], [92.8, 526.0], [92.9, 526.0], [93.0, 527.0], [93.1, 527.0], [93.2, 527.0], [93.3, 538.0], [93.4, 538.0], [93.5, 540.0], [93.6, 540.0], [93.7, 540.0], [93.8, 552.0], [93.9, 552.0], [94.0, 648.0], [94.1, 648.0], [94.2, 648.0], [94.3, 678.0], [94.4, 678.0], [94.5, 681.0], [94.6, 681.0], [94.7, 681.0], [94.8, 708.0], [94.9, 708.0], [95.0, 757.0], [95.1, 757.0], [95.2, 757.0], [95.3, 789.0], [95.4, 789.0], [95.5, 844.0], [95.6, 844.0], [95.7, 844.0], [95.8, 853.0], [95.9, 853.0], [96.0, 857.0], [96.1, 857.0], [96.2, 857.0], [96.3, 883.0], [96.4, 883.0], [96.5, 908.0], [96.6, 908.0], [96.7, 908.0], [96.8, 937.0], [96.9, 937.0], [97.0, 944.0], [97.1, 944.0], [97.2, 944.0], [97.3, 999.0], [97.4, 999.0], [97.5, 1024.0], [97.6, 1024.0], [97.7, 1024.0], [97.8, 1059.0], [97.9, 1059.0], [98.0, 1079.0], [98.1, 1079.0], [98.2, 1079.0], [98.3, 1289.0], [98.4, 1289.0], [98.5, 1480.0], [98.6, 1480.0], [98.7, 1480.0], [98.8, 2347.0], [98.9, 2347.0], [99.0, 2374.0], [99.1, 2374.0], [99.2, 2374.0], [99.3, 2517.0], [99.4, 2517.0], [99.5, 2602.0], [99.6, 2602.0], [99.7, 2602.0], [99.8, 2617.0], [99.9, 2617.0]], "isOverall": false, "label": "4", "isController": false}, {"data": [[0.0, 29.0], [0.1, 34.0], [0.2, 36.0], [0.3, 38.0], [0.4, 43.0], [0.5, 46.0], [0.6, 47.0], [0.7, 52.0], [0.8, 52.0], [0.9, 54.0], [1.0, 56.0], [1.1, 56.0], [1.2, 57.0], [1.3, 57.0], [1.4, 58.0], [1.5, 60.0], [1.6, 60.0], [1.7, 62.0], [1.8, 64.0], [1.9, 65.0], [2.0, 66.0], [2.1, 66.0], [2.2, 67.0], [2.3, 68.0], [2.4, 69.0], [2.5, 69.0], [2.6, 69.0], [2.7, 70.0], [2.8, 71.0], [2.9, 72.0], [3.0, 72.0], [3.1, 73.0], [3.2, 73.0], [3.3, 74.0], [3.4, 74.0], [3.5, 75.0], [3.6, 75.0], [3.7, 75.0], [3.8, 76.0], [3.9, 77.0], [4.0, 77.0], [4.1, 78.0], [4.2, 78.0], [4.3, 78.0], [4.4, 80.0], [4.5, 82.0], [4.6, 82.0], [4.7, 84.0], [4.8, 84.0], [4.9, 85.0], [5.0, 85.0], [5.1, 85.0], [5.2, 85.0], [5.3, 86.0], [5.4, 86.0], [5.5, 86.0], [5.6, 86.0], [5.7, 87.0], [5.8, 87.0], [5.9, 89.0], [6.0, 89.0], [6.1, 89.0], [6.2, 90.0], [6.3, 90.0], [6.4, 90.0], [6.5, 92.0], [6.6, 92.0], [6.7, 93.0], [6.8, 93.0], [6.9, 94.0], [7.0, 94.0], [7.1, 95.0], [7.2, 95.0], [7.3, 95.0], [7.4, 95.0], [7.5, 96.0], [7.6, 96.0], [7.7, 97.0], [7.8, 98.0], [7.9, 98.0], [8.0, 99.0], [8.1, 99.0], [8.2, 100.0], [8.3, 101.0], [8.4, 101.0], [8.5, 101.0], [8.6, 102.0], [8.7, 102.0], [8.8, 102.0], [8.9, 103.0], [9.0, 103.0], [9.1, 103.0], [9.2, 104.0], [9.3, 104.0], [9.4, 105.0], [9.5, 106.0], [9.6, 106.0], [9.7, 107.0], [9.8, 107.0], [9.9, 108.0], [10.0, 108.0], [10.1, 108.0], [10.2, 109.0], [10.3, 109.0], [10.4, 110.0], [10.5, 111.0], [10.6, 111.0], [10.7, 111.0], [10.8, 112.0], [10.9, 112.0], [11.0, 112.0], [11.1, 112.0], [11.2, 113.0], [11.3, 113.0], [11.4, 114.0], [11.5, 114.0], [11.6, 114.0], [11.7, 114.0], [11.8, 115.0], [11.9, 116.0], [12.0, 117.0], [12.1, 117.0], [12.2, 117.0], [12.3, 118.0], [12.4, 119.0], [12.5, 119.0], [12.6, 119.0], [12.7, 119.0], [12.8, 119.0], [12.9, 120.0], [13.0, 121.0], [13.1, 121.0], [13.2, 121.0], [13.3, 122.0], [13.4, 122.0], [13.5, 122.0], [13.6, 122.0], [13.7, 122.0], [13.8, 123.0], [13.9, 123.0], [14.0, 126.0], [14.1, 127.0], [14.2, 128.0], [14.3, 128.0], [14.4, 129.0], [14.5, 130.0], [14.6, 130.0], [14.7, 130.0], [14.8, 130.0], [14.9, 131.0], [15.0, 133.0], [15.1, 134.0], [15.2, 134.0], [15.3, 135.0], [15.4, 135.0], [15.5, 136.0], [15.6, 136.0], [15.7, 136.0], [15.8, 137.0], [15.9, 138.0], [16.0, 138.0], [16.1, 139.0], [16.2, 140.0], [16.3, 140.0], [16.4, 141.0], [16.5, 142.0], [16.6, 142.0], [16.7, 143.0], [16.8, 144.0], [16.9, 145.0], [17.0, 145.0], [17.1, 146.0], [17.2, 147.0], [17.3, 147.0], [17.4, 148.0], [17.5, 148.0], [17.6, 149.0], [17.7, 150.0], [17.8, 150.0], [17.9, 150.0], [18.0, 153.0], [18.1, 153.0], [18.2, 154.0], [18.3, 154.0], [18.4, 157.0], [18.5, 158.0], [18.6, 158.0], [18.7, 158.0], [18.8, 159.0], [18.9, 160.0], [19.0, 161.0], [19.1, 162.0], [19.2, 162.0], [19.3, 163.0], [19.4, 164.0], [19.5, 166.0], [19.6, 166.0], [19.7, 167.0], [19.8, 167.0], [19.9, 169.0], [20.0, 171.0], [20.1, 171.0], [20.2, 173.0], [20.3, 174.0], [20.4, 174.0], [20.5, 175.0], [20.6, 175.0], [20.7, 175.0], [20.8, 176.0], [20.9, 176.0], [21.0, 176.0], [21.1, 177.0], [21.2, 177.0], [21.3, 178.0], [21.4, 179.0], [21.5, 180.0], [21.6, 181.0], [21.7, 181.0], [21.8, 182.0], [21.9, 184.0], [22.0, 185.0], [22.1, 185.0], [22.2, 185.0], [22.3, 186.0], [22.4, 187.0], [22.5, 187.0], [22.6, 187.0], [22.7, 188.0], [22.8, 188.0], [22.9, 189.0], [23.0, 190.0], [23.1, 190.0], [23.2, 191.0], [23.3, 191.0], [23.4, 191.0], [23.5, 191.0], [23.6, 192.0], [23.7, 192.0], [23.8, 193.0], [23.9, 193.0], [24.0, 196.0], [24.1, 196.0], [24.2, 196.0], [24.3, 196.0], [24.4, 198.0], [24.5, 199.0], [24.6, 199.0], [24.7, 199.0], [24.8, 199.0], [24.9, 200.0], [25.0, 201.0], [25.1, 201.0], [25.2, 202.0], [25.3, 203.0], [25.4, 203.0], [25.5, 203.0], [25.6, 204.0], [25.7, 205.0], [25.8, 206.0], [25.9, 208.0], [26.0, 208.0], [26.1, 209.0], [26.2, 210.0], [26.3, 210.0], [26.4, 212.0], [26.5, 212.0], [26.6, 213.0], [26.7, 214.0], [26.8, 214.0], [26.9, 215.0], [27.0, 215.0], [27.1, 217.0], [27.2, 218.0], [27.3, 218.0], [27.4, 221.0], [27.5, 221.0], [27.6, 224.0], [27.7, 224.0], [27.8, 226.0], [27.9, 226.0], [28.0, 227.0], [28.1, 227.0], [28.2, 228.0], [28.3, 228.0], [28.4, 230.0], [28.5, 230.0], [28.6, 230.0], [28.7, 230.0], [28.8, 231.0], [28.9, 231.0], [29.0, 231.0], [29.1, 233.0], [29.2, 233.0], [29.3, 234.0], [29.4, 235.0], [29.5, 236.0], [29.6, 236.0], [29.7, 237.0], [29.8, 238.0], [29.9, 238.0], [30.0, 239.0], [30.1, 239.0], [30.2, 240.0], [30.3, 241.0], [30.4, 244.0], [30.5, 244.0], [30.6, 244.0], [30.7, 245.0], [30.8, 246.0], [30.9, 247.0], [31.0, 247.0], [31.1, 247.0], [31.2, 248.0], [31.3, 248.0], [31.4, 250.0], [31.5, 250.0], [31.6, 251.0], [31.7, 251.0], [31.8, 251.0], [31.9, 253.0], [32.0, 253.0], [32.1, 254.0], [32.2, 254.0], [32.3, 256.0], [32.4, 257.0], [32.5, 257.0], [32.6, 258.0], [32.7, 258.0], [32.8, 258.0], [32.9, 259.0], [33.0, 259.0], [33.1, 260.0], [33.2, 261.0], [33.3, 263.0], [33.4, 264.0], [33.5, 265.0], [33.6, 265.0], [33.7, 265.0], [33.8, 265.0], [33.9, 267.0], [34.0, 268.0], [34.1, 268.0], [34.2, 269.0], [34.3, 269.0], [34.4, 271.0], [34.5, 272.0], [34.6, 273.0], [34.7, 273.0], [34.8, 273.0], [34.9, 273.0], [35.0, 274.0], [35.1, 274.0], [35.2, 275.0], [35.3, 276.0], [35.4, 276.0], [35.5, 277.0], [35.6, 277.0], [35.7, 278.0], [35.8, 278.0], [35.9, 279.0], [36.0, 279.0], [36.1, 279.0], [36.2, 281.0], [36.3, 282.0], [36.4, 282.0], [36.5, 283.0], [36.6, 283.0], [36.7, 284.0], [36.8, 284.0], [36.9, 284.0], [37.0, 285.0], [37.1, 285.0], [37.2, 287.0], [37.3, 287.0], [37.4, 288.0], [37.5, 289.0], [37.6, 289.0], [37.7, 289.0], [37.8, 289.0], [37.9, 290.0], [38.0, 292.0], [38.1, 292.0], [38.2, 293.0], [38.3, 295.0], [38.4, 296.0], [38.5, 296.0], [38.6, 296.0], [38.7, 297.0], [38.8, 297.0], [38.9, 298.0], [39.0, 298.0], [39.1, 298.0], [39.2, 299.0], [39.3, 300.0], [39.4, 301.0], [39.5, 301.0], [39.6, 301.0], [39.7, 301.0], [39.8, 303.0], [39.9, 304.0], [40.0, 305.0], [40.1, 305.0], [40.2, 305.0], [40.3, 305.0], [40.4, 306.0], [40.5, 307.0], [40.6, 307.0], [40.7, 309.0], [40.8, 309.0], [40.9, 310.0], [41.0, 310.0], [41.1, 310.0], [41.2, 311.0], [41.3, 311.0], [41.4, 312.0], [41.5, 312.0], [41.6, 312.0], [41.7, 313.0], [41.8, 313.0], [41.9, 314.0], [42.0, 314.0], [42.1, 316.0], [42.2, 317.0], [42.3, 318.0], [42.4, 319.0], [42.5, 319.0], [42.6, 319.0], [42.7, 320.0], [42.8, 321.0], [42.9, 323.0], [43.0, 325.0], [43.1, 325.0], [43.2, 325.0], [43.3, 326.0], [43.4, 327.0], [43.5, 327.0], [43.6, 328.0], [43.7, 328.0], [43.8, 328.0], [43.9, 329.0], [44.0, 330.0], [44.1, 330.0], [44.2, 331.0], [44.3, 331.0], [44.4, 334.0], [44.5, 335.0], [44.6, 336.0], [44.7, 338.0], [44.8, 338.0], [44.9, 339.0], [45.0, 339.0], [45.1, 340.0], [45.2, 340.0], [45.3, 340.0], [45.4, 341.0], [45.5, 341.0], [45.6, 341.0], [45.7, 342.0], [45.8, 342.0], [45.9, 343.0], [46.0, 343.0], [46.1, 344.0], [46.2, 345.0], [46.3, 345.0], [46.4, 345.0], [46.5, 346.0], [46.6, 346.0], [46.7, 347.0], [46.8, 348.0], [46.9, 349.0], [47.0, 351.0], [47.1, 351.0], [47.2, 351.0], [47.3, 352.0], [47.4, 352.0], [47.5, 352.0], [47.6, 353.0], [47.7, 353.0], [47.8, 354.0], [47.9, 355.0], [48.0, 356.0], [48.1, 356.0], [48.2, 359.0], [48.3, 359.0], [48.4, 360.0], [48.5, 360.0], [48.6, 361.0], [48.7, 361.0], [48.8, 362.0], [48.9, 362.0], [49.0, 362.0], [49.1, 363.0], [49.2, 363.0], [49.3, 364.0], [49.4, 364.0], [49.5, 367.0], [49.6, 367.0], [49.7, 369.0], [49.8, 369.0], [49.9, 370.0], [50.0, 370.0], [50.1, 370.0], [50.2, 371.0], [50.3, 371.0], [50.4, 373.0], [50.5, 374.0], [50.6, 374.0], [50.7, 375.0], [50.8, 376.0], [50.9, 376.0], [51.0, 377.0], [51.1, 379.0], [51.2, 380.0], [51.3, 381.0], [51.4, 381.0], [51.5, 381.0], [51.6, 382.0], [51.7, 382.0], [51.8, 382.0], [51.9, 383.0], [52.0, 383.0], [52.1, 385.0], [52.2, 385.0], [52.3, 386.0], [52.4, 386.0], [52.5, 387.0], [52.6, 387.0], [52.7, 389.0], [52.8, 389.0], [52.9, 390.0], [53.0, 392.0], [53.1, 392.0], [53.2, 394.0], [53.3, 394.0], [53.4, 396.0], [53.5, 397.0], [53.6, 397.0], [53.7, 398.0], [53.8, 400.0], [53.9, 402.0], [54.0, 403.0], [54.1, 403.0], [54.2, 403.0], [54.3, 403.0], [54.4, 404.0], [54.5, 405.0], [54.6, 405.0], [54.7, 405.0], [54.8, 406.0], [54.9, 406.0], [55.0, 406.0], [55.1, 407.0], [55.2, 408.0], [55.3, 408.0], [55.4, 410.0], [55.5, 410.0], [55.6, 411.0], [55.7, 412.0], [55.8, 413.0], [55.9, 415.0], [56.0, 415.0], [56.1, 417.0], [56.2, 418.0], [56.3, 419.0], [56.4, 420.0], [56.5, 420.0], [56.6, 421.0], [56.7, 421.0], [56.8, 422.0], [56.9, 423.0], [57.0, 424.0], [57.1, 425.0], [57.2, 425.0], [57.3, 426.0], [57.4, 429.0], [57.5, 429.0], [57.6, 429.0], [57.7, 430.0], [57.8, 430.0], [57.9, 431.0], [58.0, 433.0], [58.1, 433.0], [58.2, 435.0], [58.3, 437.0], [58.4, 438.0], [58.5, 439.0], [58.6, 441.0], [58.7, 441.0], [58.8, 442.0], [58.9, 443.0], [59.0, 445.0], [59.1, 445.0], [59.2, 447.0], [59.3, 448.0], [59.4, 450.0], [59.5, 451.0], [59.6, 451.0], [59.7, 453.0], [59.8, 453.0], [59.9, 454.0], [60.0, 454.0], [60.1, 454.0], [60.2, 456.0], [60.3, 457.0], [60.4, 460.0], [60.5, 462.0], [60.6, 463.0], [60.7, 464.0], [60.8, 464.0], [60.9, 465.0], [61.0, 466.0], [61.1, 467.0], [61.2, 469.0], [61.3, 469.0], [61.4, 471.0], [61.5, 472.0], [61.6, 472.0], [61.7, 474.0], [61.8, 474.0], [61.9, 475.0], [62.0, 479.0], [62.1, 480.0], [62.2, 481.0], [62.3, 482.0], [62.4, 484.0], [62.5, 486.0], [62.6, 489.0], [62.7, 489.0], [62.8, 490.0], [62.9, 490.0], [63.0, 492.0], [63.1, 492.0], [63.2, 496.0], [63.3, 500.0], [63.4, 500.0], [63.5, 502.0], [63.6, 503.0], [63.7, 504.0], [63.8, 505.0], [63.9, 507.0], [64.0, 508.0], [64.1, 508.0], [64.2, 511.0], [64.3, 511.0], [64.4, 514.0], [64.5, 518.0], [64.6, 521.0], [64.7, 525.0], [64.8, 525.0], [64.9, 525.0], [65.0, 528.0], [65.1, 530.0], [65.2, 533.0], [65.3, 533.0], [65.4, 536.0], [65.5, 537.0], [65.6, 537.0], [65.7, 542.0], [65.8, 542.0], [65.9, 546.0], [66.0, 547.0], [66.1, 547.0], [66.2, 551.0], [66.3, 552.0], [66.4, 555.0], [66.5, 556.0], [66.6, 559.0], [66.7, 559.0], [66.8, 559.0], [66.9, 561.0], [67.0, 562.0], [67.1, 563.0], [67.2, 567.0], [67.3, 569.0], [67.4, 571.0], [67.5, 572.0], [67.6, 577.0], [67.7, 579.0], [67.8, 581.0], [67.9, 583.0], [68.0, 584.0], [68.1, 585.0], [68.2, 586.0], [68.3, 587.0], [68.4, 588.0], [68.5, 590.0], [68.6, 592.0], [68.7, 592.0], [68.8, 595.0], [68.9, 598.0], [69.0, 601.0], [69.1, 602.0], [69.2, 608.0], [69.3, 609.0], [69.4, 610.0], [69.5, 617.0], [69.6, 618.0], [69.7, 619.0], [69.8, 620.0], [69.9, 622.0], [70.0, 624.0], [70.1, 624.0], [70.2, 625.0], [70.3, 627.0], [70.4, 628.0], [70.5, 631.0], [70.6, 633.0], [70.7, 636.0], [70.8, 638.0], [70.9, 640.0], [71.0, 640.0], [71.1, 640.0], [71.2, 642.0], [71.3, 643.0], [71.4, 647.0], [71.5, 649.0], [71.6, 649.0], [71.7, 652.0], [71.8, 652.0], [71.9, 654.0], [72.0, 656.0], [72.1, 657.0], [72.2, 659.0], [72.3, 659.0], [72.4, 660.0], [72.5, 663.0], [72.6, 666.0], [72.7, 670.0], [72.8, 673.0], [72.9, 674.0], [73.0, 675.0], [73.1, 675.0], [73.2, 678.0], [73.3, 679.0], [73.4, 680.0], [73.5, 682.0], [73.6, 682.0], [73.7, 684.0], [73.8, 688.0], [73.9, 692.0], [74.0, 693.0], [74.1, 696.0], [74.2, 696.0], [74.3, 698.0], [74.4, 701.0], [74.5, 703.0], [74.6, 703.0], [74.7, 705.0], [74.8, 705.0], [74.9, 705.0], [75.0, 707.0], [75.1, 707.0], [75.2, 713.0], [75.3, 713.0], [75.4, 714.0], [75.5, 716.0], [75.6, 717.0], [75.7, 718.0], [75.8, 719.0], [75.9, 722.0], [76.0, 725.0], [76.1, 726.0], [76.2, 727.0], [76.3, 729.0], [76.4, 732.0], [76.5, 736.0], [76.6, 736.0], [76.7, 739.0], [76.8, 740.0], [76.9, 740.0], [77.0, 742.0], [77.1, 744.0], [77.2, 747.0], [77.3, 748.0], [77.4, 751.0], [77.5, 760.0], [77.6, 760.0], [77.7, 767.0], [77.8, 770.0], [77.9, 773.0], [78.0, 776.0], [78.1, 778.0], [78.2, 787.0], [78.3, 788.0], [78.4, 797.0], [78.5, 801.0], [78.6, 807.0], [78.7, 809.0], [78.8, 809.0], [78.9, 811.0], [79.0, 816.0], [79.1, 817.0], [79.2, 817.0], [79.3, 818.0], [79.4, 822.0], [79.5, 829.0], [79.6, 835.0], [79.7, 837.0], [79.8, 840.0], [79.9, 845.0], [80.0, 847.0], [80.1, 853.0], [80.2, 855.0], [80.3, 856.0], [80.4, 856.0], [80.5, 859.0], [80.6, 860.0], [80.7, 862.0], [80.8, 870.0], [80.9, 874.0], [81.0, 874.0], [81.1, 875.0], [81.2, 878.0], [81.3, 882.0], [81.4, 890.0], [81.5, 893.0], [81.6, 894.0], [81.7, 895.0], [81.8, 896.0], [81.9, 898.0], [82.0, 911.0], [82.1, 913.0], [82.2, 914.0], [82.3, 914.0], [82.4, 916.0], [82.5, 919.0], [82.6, 921.0], [82.7, 929.0], [82.8, 930.0], [82.9, 931.0], [83.0, 937.0], [83.1, 938.0], [83.2, 942.0], [83.3, 945.0], [83.4, 958.0], [83.5, 959.0], [83.6, 960.0], [83.7, 971.0], [83.8, 972.0], [83.9, 976.0], [84.0, 985.0], [84.1, 989.0], [84.2, 991.0], [84.3, 995.0], [84.4, 997.0], [84.5, 1002.0], [84.6, 1003.0], [84.7, 1008.0], [84.8, 1008.0], [84.9, 1014.0], [85.0, 1045.0], [85.1, 1046.0], [85.2, 1054.0], [85.3, 1061.0], [85.4, 1081.0], [85.5, 1085.0], [85.6, 1087.0], [85.7, 1091.0], [85.8, 1093.0], [85.9, 1125.0], [86.0, 1137.0], [86.1, 1146.0], [86.2, 1152.0], [86.3, 1156.0], [86.4, 1165.0], [86.5, 1168.0], [86.6, 1172.0], [86.7, 1184.0], [86.8, 1188.0], [86.9, 1196.0], [87.0, 1211.0], [87.1, 1212.0], [87.2, 1229.0], [87.3, 1232.0], [87.4, 1255.0], [87.5, 1255.0], [87.6, 1268.0], [87.7, 1272.0], [87.8, 1280.0], [87.9, 1284.0], [88.0, 1289.0], [88.1, 1289.0], [88.2, 1313.0], [88.3, 1321.0], [88.4, 1336.0], [88.5, 1342.0], [88.6, 1342.0], [88.7, 1356.0], [88.8, 1368.0], [88.9, 1385.0], [89.0, 1414.0], [89.1, 1416.0], [89.2, 1464.0], [89.3, 1467.0], [89.4, 1475.0], [89.5, 1487.0], [89.6, 1499.0], [89.7, 1518.0], [89.8, 1521.0], [89.9, 1536.0], [90.0, 1575.0], [90.1, 1583.0], [90.2, 1609.0], [90.3, 1615.0], [90.4, 1630.0], [90.5, 1663.0], [90.6, 1664.0], [90.7, 1675.0], [90.8, 1681.0], [90.9, 1694.0], [91.0, 1701.0], [91.1, 1743.0], [91.2, 1769.0], [91.3, 1777.0], [91.4, 1794.0], [91.5, 1803.0], [91.6, 1814.0], [91.7, 1824.0], [91.8, 1831.0], [91.9, 1833.0], [92.0, 1840.0], [92.1, 1845.0], [92.2, 1872.0], [92.3, 1882.0], [92.4, 1931.0], [92.5, 1937.0], [92.6, 1940.0], [92.7, 1948.0], [92.8, 1972.0], [92.9, 1991.0], [93.0, 2012.0], [93.1, 2013.0], [93.2, 2031.0], [93.3, 2031.0], [93.4, 2047.0], [93.5, 2054.0], [93.6, 2056.0], [93.7, 2081.0], [93.8, 2096.0], [93.9, 2130.0], [94.0, 2143.0], [94.1, 2166.0], [94.2, 2172.0], [94.3, 2190.0], [94.4, 2225.0], [94.5, 2250.0], [94.6, 2250.0], [94.7, 2300.0], [94.8, 2306.0], [94.9, 2325.0], [95.0, 2431.0], [95.1, 2438.0], [95.2, 2453.0], [95.3, 2457.0], [95.4, 2483.0], [95.5, 2498.0], [95.6, 2501.0], [95.7, 2609.0], [95.8, 2614.0], [95.9, 2648.0], [96.0, 2738.0], [96.1, 2847.0], [96.2, 2983.0], [96.3, 2989.0], [96.4, 3076.0], [96.5, 3105.0], [96.6, 3133.0], [96.7, 3167.0], [96.8, 3183.0], [96.9, 3221.0], [97.0, 3234.0], [97.1, 3254.0], [97.2, 3328.0], [97.3, 3332.0], [97.4, 3348.0], [97.5, 3469.0], [97.6, 3606.0], [97.7, 3746.0], [97.8, 3820.0], [97.9, 3891.0], [98.0, 4024.0], [98.1, 4054.0], [98.2, 4147.0], [98.3, 4156.0], [98.4, 4355.0], [98.5, 4369.0], [98.6, 4412.0], [98.7, 4590.0], [98.8, 4943.0], [98.9, 5228.0], [99.0, 5461.0], [99.1, 5473.0], [99.2, 6504.0], [99.3, 6598.0], [99.4, 6766.0], [99.5, 6981.0], [99.6, 7030.0], [99.7, 9383.0], [99.8, 9506.0], [99.9, 12494.0]], "isOverall": false, "label": "16", "isController": false}, {"data": [[0.0, 28.0], [0.1, 28.0], [0.2, 29.0], [0.3, 29.0], [0.4, 32.0], [0.5, 32.0], [0.6, 32.0], [0.7, 32.0], [0.8, 33.0], [0.9, 33.0], [1.0, 33.0], [1.1, 33.0], [1.2, 33.0], [1.3, 34.0], [1.4, 34.0], [1.5, 35.0], [1.6, 35.0], [1.7, 38.0], [1.8, 38.0], [1.9, 40.0], [2.0, 40.0], [2.1, 40.0], [2.2, 40.0], [2.3, 40.0], [2.4, 40.0], [2.5, 41.0], [2.6, 41.0], [2.7, 41.0], [2.8, 41.0], [2.9, 41.0], [3.0, 42.0], [3.1, 42.0], [3.2, 42.0], [3.3, 43.0], [3.4, 43.0], [3.5, 43.0], [3.6, 43.0], [3.7, 43.0], [3.8, 44.0], [3.9, 44.0], [4.0, 45.0], [4.1, 45.0], [4.2, 46.0], [4.3, 46.0], [4.4, 46.0], [4.5, 46.0], [4.6, 46.0], [4.7, 47.0], [4.8, 47.0], [4.9, 47.0], [5.0, 47.0], [5.1, 47.0], [5.2, 48.0], [5.3, 48.0], [5.4, 48.0], [5.5, 48.0], [5.6, 48.0], [5.7, 48.0], [5.8, 48.0], [5.9, 49.0], [6.0, 49.0], [6.1, 49.0], [6.2, 49.0], [6.3, 49.0], [6.4, 50.0], [6.5, 50.0], [6.6, 50.0], [6.7, 51.0], [6.8, 51.0], [6.9, 52.0], [7.0, 52.0], [7.1, 52.0], [7.2, 52.0], [7.3, 53.0], [7.4, 53.0], [7.5, 53.0], [7.6, 53.0], [7.7, 53.0], [7.8, 53.0], [7.9, 53.0], [8.0, 53.0], [8.1, 53.0], [8.2, 54.0], [8.3, 55.0], [8.4, 55.0], [8.5, 55.0], [8.6, 55.0], [8.7, 56.0], [8.8, 56.0], [8.9, 56.0], [9.0, 56.0], [9.1, 56.0], [9.2, 57.0], [9.3, 57.0], [9.4, 57.0], [9.5, 58.0], [9.6, 58.0], [9.7, 59.0], [9.8, 59.0], [9.9, 59.0], [10.0, 59.0], [10.1, 59.0], [10.2, 59.0], [10.3, 60.0], [10.4, 61.0], [10.5, 63.0], [10.6, 63.0], [10.7, 63.0], [10.8, 64.0], [10.9, 64.0], [11.0, 64.0], [11.1, 64.0], [11.2, 65.0], [11.3, 65.0], [11.4, 65.0], [11.5, 65.0], [11.6, 65.0], [11.7, 65.0], [11.8, 66.0], [11.9, 68.0], [12.0, 69.0], [12.1, 69.0], [12.2, 69.0], [12.3, 70.0], [12.4, 71.0], [12.5, 71.0], [12.6, 71.0], [12.7, 71.0], [12.8, 72.0], [12.9, 72.0], [13.0, 72.0], [13.1, 72.0], [13.2, 72.0], [13.3, 73.0], [13.4, 73.0], [13.5, 74.0], [13.6, 74.0], [13.7, 74.0], [13.8, 74.0], [13.9, 74.0], [14.0, 75.0], [14.1, 75.0], [14.2, 75.0], [14.3, 75.0], [14.4, 75.0], [14.5, 75.0], [14.6, 75.0], [14.7, 76.0], [14.8, 76.0], [14.9, 76.0], [15.0, 76.0], [15.1, 76.0], [15.2, 77.0], [15.3, 78.0], [15.4, 79.0], [15.5, 79.0], [15.6, 79.0], [15.7, 80.0], [15.8, 80.0], [15.9, 81.0], [16.0, 81.0], [16.1, 81.0], [16.2, 81.0], [16.3, 81.0], [16.4, 82.0], [16.5, 82.0], [16.6, 82.0], [16.7, 82.0], [16.8, 82.0], [16.9, 83.0], [17.0, 83.0], [17.1, 83.0], [17.2, 83.0], [17.3, 84.0], [17.4, 84.0], [17.5, 85.0], [17.6, 85.0], [17.7, 85.0], [17.8, 86.0], [17.9, 87.0], [18.0, 87.0], [18.1, 87.0], [18.2, 87.0], [18.3, 88.0], [18.4, 88.0], [18.5, 89.0], [18.6, 89.0], [18.7, 89.0], [18.8, 89.0], [18.9, 89.0], [19.0, 89.0], [19.1, 89.0], [19.2, 90.0], [19.3, 90.0], [19.4, 90.0], [19.5, 91.0], [19.6, 91.0], [19.7, 91.0], [19.8, 91.0], [19.9, 91.0], [20.0, 91.0], [20.1, 91.0], [20.2, 92.0], [20.3, 92.0], [20.4, 92.0], [20.5, 92.0], [20.6, 92.0], [20.7, 93.0], [20.8, 93.0], [20.9, 93.0], [21.0, 94.0], [21.1, 94.0], [21.2, 94.0], [21.3, 94.0], [21.4, 94.0], [21.5, 95.0], [21.6, 95.0], [21.7, 95.0], [21.8, 95.0], [21.9, 95.0], [22.0, 96.0], [22.1, 96.0], [22.2, 97.0], [22.3, 97.0], [22.4, 97.0], [22.5, 98.0], [22.6, 98.0], [22.7, 98.0], [22.8, 98.0], [22.9, 99.0], [23.0, 99.0], [23.1, 99.0], [23.2, 100.0], [23.3, 100.0], [23.4, 101.0], [23.5, 102.0], [23.6, 102.0], [23.7, 103.0], [23.8, 103.0], [23.9, 103.0], [24.0, 103.0], [24.1, 103.0], [24.2, 104.0], [24.3, 104.0], [24.4, 105.0], [24.5, 105.0], [24.6, 105.0], [24.7, 105.0], [24.8, 105.0], [24.9, 106.0], [25.0, 106.0], [25.1, 106.0], [25.2, 107.0], [25.3, 107.0], [25.4, 108.0], [25.5, 109.0], [25.6, 109.0], [25.7, 109.0], [25.8, 109.0], [25.9, 109.0], [26.0, 109.0], [26.1, 109.0], [26.2, 110.0], [26.3, 111.0], [26.4, 111.0], [26.5, 111.0], [26.6, 111.0], [26.7, 111.0], [26.8, 112.0], [26.9, 113.0], [27.0, 113.0], [27.1, 113.0], [27.2, 113.0], [27.3, 114.0], [27.4, 114.0], [27.5, 114.0], [27.6, 114.0], [27.7, 114.0], [27.8, 115.0], [27.9, 115.0], [28.0, 115.0], [28.1, 115.0], [28.2, 115.0], [28.3, 115.0], [28.4, 117.0], [28.5, 117.0], [28.6, 117.0], [28.7, 117.0], [28.8, 118.0], [28.9, 118.0], [29.0, 118.0], [29.1, 118.0], [29.2, 118.0], [29.3, 120.0], [29.4, 121.0], [29.5, 121.0], [29.6, 121.0], [29.7, 122.0], [29.8, 122.0], [29.9, 122.0], [30.0, 123.0], [30.1, 123.0], [30.2, 123.0], [30.3, 123.0], [30.4, 123.0], [30.5, 123.0], [30.6, 123.0], [30.7, 124.0], [30.8, 125.0], [30.9, 125.0], [31.0, 125.0], [31.1, 125.0], [31.2, 126.0], [31.3, 126.0], [31.4, 126.0], [31.5, 126.0], [31.6, 126.0], [31.7, 127.0], [31.8, 127.0], [31.9, 127.0], [32.0, 128.0], [32.1, 128.0], [32.2, 128.0], [32.3, 129.0], [32.4, 129.0], [32.5, 129.0], [32.6, 129.0], [32.7, 130.0], [32.8, 130.0], [32.9, 130.0], [33.0, 131.0], [33.1, 131.0], [33.2, 132.0], [33.3, 133.0], [33.4, 133.0], [33.5, 133.0], [33.6, 133.0], [33.7, 134.0], [33.8, 135.0], [33.9, 135.0], [34.0, 135.0], [34.1, 135.0], [34.2, 135.0], [34.3, 136.0], [34.4, 136.0], [34.5, 136.0], [34.6, 136.0], [34.7, 136.0], [34.8, 136.0], [34.9, 136.0], [35.0, 136.0], [35.1, 136.0], [35.2, 137.0], [35.3, 137.0], [35.4, 138.0], [35.5, 140.0], [35.6, 140.0], [35.7, 141.0], [35.8, 141.0], [35.9, 141.0], [36.0, 143.0], [36.1, 143.0], [36.2, 143.0], [36.3, 143.0], [36.4, 144.0], [36.5, 144.0], [36.6, 144.0], [36.7, 144.0], [36.8, 145.0], [36.9, 146.0], [37.0, 146.0], [37.1, 146.0], [37.2, 146.0], [37.3, 146.0], [37.4, 147.0], [37.5, 147.0], [37.6, 147.0], [37.7, 147.0], [37.8, 147.0], [37.9, 147.0], [38.0, 148.0], [38.1, 148.0], [38.2, 148.0], [38.3, 149.0], [38.4, 149.0], [38.5, 149.0], [38.6, 149.0], [38.7, 149.0], [38.8, 150.0], [38.9, 150.0], [39.0, 151.0], [39.1, 151.0], [39.2, 151.0], [39.3, 151.0], [39.4, 152.0], [39.5, 152.0], [39.6, 152.0], [39.7, 153.0], [39.8, 154.0], [39.9, 154.0], [40.0, 155.0], [40.1, 155.0], [40.2, 155.0], [40.3, 155.0], [40.4, 155.0], [40.5, 156.0], [40.6, 156.0], [40.7, 156.0], [40.8, 157.0], [40.9, 158.0], [41.0, 158.0], [41.1, 158.0], [41.2, 159.0], [41.3, 159.0], [41.4, 159.0], [41.5, 160.0], [41.6, 160.0], [41.7, 160.0], [41.8, 162.0], [41.9, 163.0], [42.0, 163.0], [42.1, 163.0], [42.2, 163.0], [42.3, 163.0], [42.4, 164.0], [42.5, 164.0], [42.6, 164.0], [42.7, 165.0], [42.8, 165.0], [42.9, 167.0], [43.0, 167.0], [43.1, 167.0], [43.2, 169.0], [43.3, 171.0], [43.4, 171.0], [43.5, 172.0], [43.6, 172.0], [43.7, 172.0], [43.8, 174.0], [43.9, 174.0], [44.0, 174.0], [44.1, 174.0], [44.2, 175.0], [44.3, 176.0], [44.4, 176.0], [44.5, 177.0], [44.6, 177.0], [44.7, 178.0], [44.8, 178.0], [44.9, 178.0], [45.0, 179.0], [45.1, 179.0], [45.2, 180.0], [45.3, 180.0], [45.4, 181.0], [45.5, 181.0], [45.6, 181.0], [45.7, 182.0], [45.8, 183.0], [45.9, 184.0], [46.0, 185.0], [46.1, 185.0], [46.2, 185.0], [46.3, 186.0], [46.4, 186.0], [46.5, 187.0], [46.6, 187.0], [46.7, 187.0], [46.8, 188.0], [46.9, 188.0], [47.0, 188.0], [47.1, 188.0], [47.2, 188.0], [47.3, 188.0], [47.4, 189.0], [47.5, 190.0], [47.6, 190.0], [47.7, 191.0], [47.8, 192.0], [47.9, 192.0], [48.0, 192.0], [48.1, 192.0], [48.2, 193.0], [48.3, 193.0], [48.4, 194.0], [48.5, 195.0], [48.6, 195.0], [48.7, 195.0], [48.8, 195.0], [48.9, 196.0], [49.0, 197.0], [49.1, 197.0], [49.2, 199.0], [49.3, 200.0], [49.4, 202.0], [49.5, 203.0], [49.6, 203.0], [49.7, 204.0], [49.8, 204.0], [49.9, 204.0], [50.0, 204.0], [50.1, 204.0], [50.2, 204.0], [50.3, 205.0], [50.4, 205.0], [50.5, 205.0], [50.6, 205.0], [50.7, 206.0], [50.8, 206.0], [50.9, 207.0], [51.0, 207.0], [51.1, 207.0], [51.2, 207.0], [51.3, 207.0], [51.4, 208.0], [51.5, 208.0], [51.6, 208.0], [51.7, 209.0], [51.8, 209.0], [51.9, 210.0], [52.0, 210.0], [52.1, 210.0], [52.2, 211.0], [52.3, 211.0], [52.4, 212.0], [52.5, 212.0], [52.6, 212.0], [52.7, 212.0], [52.8, 213.0], [52.9, 213.0], [53.0, 213.0], [53.1, 213.0], [53.2, 214.0], [53.3, 215.0], [53.4, 216.0], [53.5, 217.0], [53.6, 217.0], [53.7, 217.0], [53.8, 218.0], [53.9, 219.0], [54.0, 219.0], [54.1, 219.0], [54.2, 221.0], [54.3, 222.0], [54.4, 222.0], [54.5, 223.0], [54.6, 223.0], [54.7, 223.0], [54.8, 223.0], [54.9, 224.0], [55.0, 225.0], [55.1, 225.0], [55.2, 225.0], [55.3, 225.0], [55.4, 225.0], [55.5, 226.0], [55.6, 226.0], [55.7, 226.0], [55.8, 227.0], [55.9, 229.0], [56.0, 230.0], [56.1, 230.0], [56.2, 230.0], [56.3, 232.0], [56.4, 232.0], [56.5, 233.0], [56.6, 233.0], [56.7, 233.0], [56.8, 233.0], [56.9, 235.0], [57.0, 235.0], [57.1, 235.0], [57.2, 236.0], [57.3, 236.0], [57.4, 237.0], [57.5, 237.0], [57.6, 237.0], [57.7, 237.0], [57.8, 238.0], [57.9, 238.0], [58.0, 238.0], [58.1, 238.0], [58.2, 239.0], [58.3, 240.0], [58.4, 241.0], [58.5, 243.0], [58.6, 243.0], [58.7, 244.0], [58.8, 245.0], [58.9, 245.0], [59.0, 246.0], [59.1, 246.0], [59.2, 247.0], [59.3, 247.0], [59.4, 247.0], [59.5, 247.0], [59.6, 247.0], [59.7, 248.0], [59.8, 249.0], [59.9, 250.0], [60.0, 250.0], [60.1, 250.0], [60.2, 250.0], [60.3, 251.0], [60.4, 253.0], [60.5, 254.0], [60.6, 254.0], [60.7, 254.0], [60.8, 254.0], [60.9, 256.0], [61.0, 256.0], [61.1, 256.0], [61.2, 258.0], [61.3, 260.0], [61.4, 260.0], [61.5, 262.0], [61.6, 262.0], [61.7, 262.0], [61.8, 262.0], [61.9, 262.0], [62.0, 264.0], [62.1, 264.0], [62.2, 265.0], [62.3, 265.0], [62.4, 265.0], [62.5, 265.0], [62.6, 265.0], [62.7, 265.0], [62.8, 268.0], [62.9, 272.0], [63.0, 276.0], [63.1, 276.0], [63.2, 277.0], [63.3, 278.0], [63.4, 278.0], [63.5, 279.0], [63.6, 279.0], [63.7, 279.0], [63.8, 280.0], [63.9, 283.0], [64.0, 283.0], [64.1, 283.0], [64.2, 285.0], [64.3, 287.0], [64.4, 288.0], [64.5, 288.0], [64.6, 288.0], [64.7, 290.0], [64.8, 290.0], [64.9, 292.0], [65.0, 292.0], [65.1, 292.0], [65.2, 293.0], [65.3, 295.0], [65.4, 295.0], [65.5, 298.0], [65.6, 298.0], [65.7, 298.0], [65.8, 299.0], [65.9, 300.0], [66.0, 300.0], [66.1, 300.0], [66.2, 306.0], [66.3, 306.0], [66.4, 306.0], [66.5, 309.0], [66.6, 309.0], [66.7, 311.0], [66.8, 311.0], [66.9, 311.0], [67.0, 311.0], [67.1, 311.0], [67.2, 312.0], [67.3, 312.0], [67.4, 314.0], [67.5, 316.0], [67.6, 316.0], [67.7, 316.0], [67.8, 317.0], [67.9, 321.0], [68.0, 330.0], [68.1, 330.0], [68.2, 332.0], [68.3, 338.0], [68.4, 340.0], [68.5, 340.0], [68.6, 340.0], [68.7, 342.0], [68.8, 342.0], [68.9, 343.0], [69.0, 344.0], [69.1, 344.0], [69.2, 346.0], [69.3, 346.0], [69.4, 348.0], [69.5, 351.0], [69.6, 351.0], [69.7, 351.0], [69.8, 352.0], [69.9, 353.0], [70.0, 353.0], [70.1, 353.0], [70.2, 353.0], [70.3, 357.0], [70.4, 358.0], [70.5, 358.0], [70.6, 358.0], [70.7, 358.0], [70.8, 359.0], [70.9, 362.0], [71.0, 362.0], [71.1, 362.0], [71.2, 363.0], [71.3, 363.0], [71.4, 367.0], [71.5, 367.0], [71.6, 367.0], [71.7, 368.0], [71.8, 368.0], [71.9, 370.0], [72.0, 370.0], [72.1, 370.0], [72.2, 370.0], [72.3, 372.0], [72.4, 375.0], [72.5, 375.0], [72.6, 375.0], [72.7, 376.0], [72.8, 376.0], [72.9, 377.0], [73.0, 378.0], [73.1, 378.0], [73.2, 379.0], [73.3, 379.0], [73.4, 379.0], [73.5, 380.0], [73.6, 380.0], [73.7, 380.0], [73.8, 381.0], [73.9, 382.0], [74.0, 382.0], [74.1, 382.0], [74.2, 383.0], [74.3, 383.0], [74.4, 384.0], [74.5, 388.0], [74.6, 388.0], [74.7, 389.0], [74.8, 389.0], [74.9, 390.0], [75.0, 392.0], [75.1, 392.0], [75.2, 393.0], [75.3, 395.0], [75.4, 397.0], [75.5, 398.0], [75.6, 398.0], [75.7, 400.0], [75.8, 404.0], [75.9, 405.0], [76.0, 409.0], [76.1, 409.0], [76.2, 410.0], [76.3, 415.0], [76.4, 418.0], [76.5, 419.0], [76.6, 419.0], [76.7, 421.0], [76.8, 429.0], [76.9, 430.0], [77.0, 435.0], [77.1, 435.0], [77.2, 435.0], [77.3, 437.0], [77.4, 442.0], [77.5, 446.0], [77.6, 446.0], [77.7, 447.0], [77.8, 453.0], [77.9, 453.0], [78.0, 454.0], [78.1, 454.0], [78.2, 456.0], [78.3, 458.0], [78.4, 468.0], [78.5, 470.0], [78.6, 470.0], [78.7, 474.0], [78.8, 474.0], [78.9, 475.0], [79.0, 476.0], [79.1, 476.0], [79.2, 485.0], [79.3, 486.0], [79.4, 486.0], [79.5, 486.0], [79.6, 486.0], [79.7, 487.0], [79.8, 489.0], [79.9, 489.0], [80.0, 491.0], [80.1, 491.0], [80.2, 492.0], [80.3, 497.0], [80.4, 497.0], [80.5, 500.0], [80.6, 500.0], [80.7, 500.0], [80.8, 501.0], [80.9, 505.0], [81.0, 506.0], [81.1, 506.0], [81.2, 510.0], [81.3, 511.0], [81.4, 513.0], [81.5, 513.0], [81.6, 513.0], [81.7, 516.0], [81.8, 518.0], [81.9, 520.0], [82.0, 523.0], [82.1, 523.0], [82.2, 526.0], [82.3, 527.0], [82.4, 527.0], [82.5, 527.0], [82.6, 527.0], [82.7, 528.0], [82.8, 531.0], [82.9, 532.0], [83.0, 533.0], [83.1, 533.0], [83.2, 535.0], [83.3, 540.0], [83.4, 542.0], [83.5, 545.0], [83.6, 545.0], [83.7, 546.0], [83.8, 549.0], [83.9, 553.0], [84.0, 556.0], [84.1, 556.0], [84.2, 556.0], [84.3, 563.0], [84.4, 565.0], [84.5, 570.0], [84.6, 570.0], [84.7, 573.0], [84.8, 583.0], [84.9, 586.0], [85.0, 586.0], [85.1, 586.0], [85.2, 589.0], [85.3, 590.0], [85.4, 596.0], [85.5, 597.0], [85.6, 597.0], [85.7, 600.0], [85.8, 605.0], [85.9, 606.0], [86.0, 611.0], [86.1, 611.0], [86.2, 617.0], [86.3, 621.0], [86.4, 624.0], [86.5, 625.0], [86.6, 625.0], [86.7, 625.0], [86.8, 627.0], [86.9, 629.0], [87.0, 643.0], [87.1, 643.0], [87.2, 652.0], [87.3, 652.0], [87.4, 654.0], [87.5, 662.0], [87.6, 662.0], [87.7, 675.0], [87.8, 676.0], [87.9, 680.0], [88.0, 688.0], [88.1, 688.0], [88.2, 689.0], [88.3, 690.0], [88.4, 690.0], [88.5, 693.0], [88.6, 693.0], [88.7, 701.0], [88.8, 708.0], [88.9, 710.0], [89.0, 712.0], [89.1, 712.0], [89.2, 734.0], [89.3, 737.0], [89.4, 748.0], [89.5, 759.0], [89.6, 759.0], [89.7, 763.0], [89.8, 763.0], [89.9, 768.0], [90.0, 775.0], [90.1, 775.0], [90.2, 782.0], [90.3, 791.0], [90.4, 802.0], [90.5, 807.0], [90.6, 807.0], [90.7, 811.0], [90.8, 851.0], [90.9, 864.0], [91.0, 869.0], [91.1, 869.0], [91.2, 871.0], [91.3, 880.0], [91.4, 883.0], [91.5, 888.0], [91.6, 888.0], [91.7, 897.0], [91.8, 899.0], [91.9, 901.0], [92.0, 901.0], [92.1, 901.0], [92.2, 908.0], [92.3, 927.0], [92.4, 937.0], [92.5, 944.0], [92.6, 944.0], [92.7, 967.0], [92.8, 981.0], [92.9, 1003.0], [93.0, 1008.0], [93.1, 1008.0], [93.2, 1054.0], [93.3, 1057.0], [93.4, 1064.0], [93.5, 1074.0], [93.6, 1074.0], [93.7, 1079.0], [93.8, 1096.0], [93.9, 1102.0], [94.0, 1129.0], [94.1, 1129.0], [94.2, 1129.0], [94.3, 1143.0], [94.4, 1145.0], [94.5, 1154.0], [94.6, 1154.0], [94.7, 1157.0], [94.8, 1169.0], [94.9, 1179.0], [95.0, 1181.0], [95.1, 1181.0], [95.2, 1191.0], [95.3, 1194.0], [95.4, 1195.0], [95.5, 1199.0], [95.6, 1199.0], [95.7, 1200.0], [95.8, 1202.0], [95.9, 1202.0], [96.0, 1207.0], [96.1, 1207.0], [96.2, 1246.0], [96.3, 1265.0], [96.4, 1277.0], [96.5, 1278.0], [96.6, 1278.0], [96.7, 1283.0], [96.8, 1285.0], [96.9, 1330.0], [97.0, 1333.0], [97.1, 1333.0], [97.2, 1469.0], [97.3, 1516.0], [97.4, 1574.0], [97.5, 1642.0], [97.6, 1642.0], [97.7, 1669.0], [97.8, 1672.0], [97.9, 1691.0], [98.0, 1755.0], [98.1, 1755.0], [98.2, 2229.0], [98.3, 2274.0], [98.4, 2362.0], [98.5, 2501.0], [98.6, 2501.0], [98.7, 2679.0], [98.8, 2772.0], [98.9, 2827.0], [99.0, 2862.0], [99.1, 2862.0], [99.2, 3205.0], [99.3, 3239.0], [99.4, 3300.0], [99.5, 3513.0], [99.6, 3513.0], [99.7, 3668.0], [99.8, 3670.0], [99.9, 3837.0]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 268.0, "series": [{"data": [[0.0, 55.0], [300.0, 3.0], [600.0, 2.0], [100.0, 26.0], [400.0, 5.0], [200.0, 6.0], [800.0, 1.0], [1900.0, 1.0], [2000.0, 1.0]], "isOverall": false, "label": "1", "isController": false}, {"data": [[0.0, 103.0], [2100.0, 1.0], [2300.0, 1.0], [600.0, 1.0], [300.0, 5.0], [100.0, 63.0], [200.0, 17.0], [800.0, 3.0], [400.0, 3.0], [500.0, 3.0]], "isOverall": false, "label": "2", "isController": false}, {"data": [[0.0, 173.0], [2300.0, 2.0], [600.0, 3.0], [2500.0, 1.0], [2600.0, 2.0], [700.0, 3.0], [200.0, 51.0], [800.0, 4.0], [900.0, 4.0], [1000.0, 3.0], [300.0, 15.0], [1200.0, 1.0], [1400.0, 1.0], [100.0, 116.0], [400.0, 11.0], [500.0, 10.0]], "isOverall": false, "label": "4", "isController": false}, {"data": [[0.0, 130.0], [600.0, 86.0], [700.0, 66.0], [800.0, 56.0], [900.0, 40.0], [1000.0, 21.0], [1100.0, 18.0], [1200.0, 19.0], [1300.0, 13.0], [1400.0, 11.0], [1500.0, 8.0], [1600.0, 13.0], [1700.0, 8.0], [1800.0, 14.0], [1900.0, 11.0], [2000.0, 13.0], [2100.0, 8.0], [2200.0, 6.0], [2300.0, 5.0], [2400.0, 9.0], [2500.0, 2.0], [2600.0, 4.0], [2800.0, 1.0], [2700.0, 2.0], [2900.0, 3.0], [3000.0, 3.0], [3100.0, 6.0], [3300.0, 5.0], [3200.0, 5.0], [3400.0, 1.0], [3700.0, 1.0], [3600.0, 2.0], [3800.0, 3.0], [3900.0, 1.0], [4000.0, 3.0], [4200.0, 1.0], [4100.0, 2.0], [4300.0, 3.0], [4400.0, 2.0], [4500.0, 1.0], [4900.0, 2.0], [5200.0, 2.0], [5400.0, 2.0], [5900.0, 1.0], [6500.0, 2.0], [6700.0, 2.0], [6900.0, 1.0], [6800.0, 1.0], [7000.0, 1.0], [8600.0, 1.0], [9300.0, 1.0], [9500.0, 1.0], [10400.0, 1.0], [12400.0, 1.0], [22700.0, 1.0], [100.0, 268.0], [200.0, 230.0], [300.0, 232.0], [400.0, 152.0], [500.0, 92.0]], "isOverall": false, "label": "16", "isController": false}, {"data": [[0.0, 185.0], [600.0, 24.0], [700.0, 14.0], [800.0, 12.0], [900.0, 8.0], [1000.0, 8.0], [1100.0, 14.0], [1200.0, 10.0], [1300.0, 2.0], [1400.0, 1.0], [1500.0, 2.0], [100.0, 209.0], [1600.0, 4.0], [1700.0, 1.0], [2200.0, 2.0], [2300.0, 1.0], [2500.0, 1.0], [2600.0, 1.0], [2800.0, 2.0], [2700.0, 1.0], [200.0, 133.0], [3200.0, 2.0], [3300.0, 1.0], [3500.0, 1.0], [3600.0, 2.0], [3800.0, 1.0], [300.0, 78.0], [400.0, 39.0], [500.0, 41.0]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 22700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 197.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2313.0, "series": [{"data": [[0.0, 2313.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 590.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 197.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.70759153E12, "maxY": 16.0, "series": [{"data": [[1.70759154E12, 1.0], [1.70759153E12, 1.0]], "isOverall": false, "label": "1", "isController": false}, {"data": [[1.70759156E12, 1.9846153846153847], [1.70759154E12, 1.0], [1.70759155E12, 1.9924242424242427]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.70759158E12, 3.288590604026844], [1.70759156E12, 3.661290322580645], [1.70759157E12, 4.0]], "isOverall": false, "label": "4", "isController": false}, {"data": [[1.70759166E12, 16.0], [1.70759167E12, 16.0], [1.70759164E12, 16.0], [1.70759165E12, 16.0], [1.70759162E12, 12.499999999999998], [1.70759163E12, 16.0], [1.7075917E12, 3.862068965517241], [1.70759168E12, 15.64678899082569], [1.70759169E12, 11.849246231155778]], "isOverall": false, "label": "16", "isController": false}, {"data": [[1.70759162E12, 5.784810126582278], [1.7075916E12, 8.0], [1.70759161E12, 7.774193548387096], [1.70759158E12, 2.4], [1.70759159E12, 7.853211009174314]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.7075917E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 95.31250000000001, "minX": 1.0, "maxY": 1028.0, "series": [{"data": [[1.0, 178.54]], "isOverall": false, "label": "1", "isController": false}, {"data": [[1.0, 178.54]], "isOverall": false, "label": "1-Aggregated", "isController": false}, {"data": [[1.0, 120.6], [2.0, 161.27692307692314]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.9749999999999999, 160.26]], "isOverall": false, "label": "2-Aggregated", "isController": false}, {"data": [[1.0, 95.31250000000001], [2.0, 146.55555555555554], [4.0, 219.3281733746131], [3.0, 228.00000000000003]], "isOverall": false, "label": "4", "isController": false}, {"data": [[3.6825, 212.02500000000003]], "isOverall": false, "label": "4-Aggregated", "isController": false}, {"data": [[2.0, 249.77777777777777], [8.0, 576.3214285714286], [9.0, 248.61111111111111], [10.0, 168.25], [11.0, 669.0], [12.0, 720.0312500000001], [3.0, 207.03999999999996], [13.0, 663.3191489361703], [14.0, 1028.0], [15.0, 758.2479999999999], [4.0, 416.3], [16.0, 738.2429983525541], [1.0, 348.7777777777778], [5.0, 195.39999999999998], [6.0, 538.8], [7.0, 239.31578947368425]], "isOverall": false, "label": "16", "isController": false}, {"data": [[14.675000000000002, 696.6587499999996]], "isOverall": false, "label": "16-Aggregated", "isController": false}, {"data": [[2.0, 111.66666666666666], [4.0, 967.75], [8.0, 372.7547826086956], [1.0, 107.0], [5.0, 154.45], [3.0, 285.0714285714286], [6.0, 270.0], [7.0, 343.1409395973154]], "isOverall": false, "label": "8", "isController": false}, {"data": [[7.42625, 354.3362500000004]], "isOverall": false, "label": "8-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 16.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 841.8, "minX": 1.70759153E12, "maxY": 1.23843237E7, "series": [{"data": [[1.70759166E12, 1.21682902E7], [1.70759164E12, 1.15844303E7], [1.70759162E12, 9948233.9], [1.7075916E12, 1.15638894E7], [1.70759158E12, 8257744.4], [1.70759156E12, 7013523.9], [1.70759154E12, 3611444.0], [1.70759169E12, 1.15829833E7], [1.70759167E12, 1.08734184E7], [1.70759165E12, 1.09262575E7], [1.70759163E12, 1.04702895E7], [1.70759161E12, 1.17138256E7], [1.70759159E12, 1.08296234E7], [1.70759157E12, 1.00049725E7], [1.7075917E12, 6214176.1], [1.70759155E12, 6110627.8], [1.70759168E12, 1.23843237E7], [1.70759153E12, 2906930.4]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.70759166E12, 4960.1], [1.70759164E12, 5187.1], [1.70759162E12, 4641.5], [1.7075916E12, 4596.3], [1.70759158E12, 3503.8], [1.70759156E12, 2889.6], [1.70759154E12, 1502.2], [1.70759169E12, 4527.3], [1.70759167E12, 4573.6], [1.70759165E12, 4481.7], [1.70759163E12, 4687.0], [1.70759161E12, 4936.4], [1.70759159E12, 4960.2], [1.70759157E12, 4300.0], [1.7075917E12, 1980.2], [1.70759155E12, 3002.5], [1.70759168E12, 4960.0], [1.70759153E12, 841.8]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.7075917E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 64.66666666666667, "minX": 1.70759153E12, "maxY": 828.3532110091745, "series": [{"data": [[1.70759154E12, 153.26984126984127], [1.70759153E12, 221.56756756756758]], "isOverall": false, "label": "1", "isController": false}, {"data": [[1.70759156E12, 183.99999999999997], [1.70759154E12, 64.66666666666667], [1.70759155E12, 150.7424242424242]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.70759158E12, 204.88590604026845], [1.70759156E12, 212.0645161290323], [1.70759157E12, 217.6402116402116]], "isOverall": false, "label": "4", "isController": false}, {"data": [[1.70759166E12, 828.3532110091745], [1.70759167E12, 787.3184079601991], [1.70759164E12, 688.8508771929824], [1.70759165E12, 751.4974619289336], [1.70759162E12, 215.21739130434787], [1.70759163E12, 716.966019417476], [1.7075917E12, 279.8620689655173], [1.70759168E12, 758.1467889908255], [1.70759169E12, 620.6030150753774]], "isOverall": false, "label": "16", "isController": false}, {"data": [[1.70759162E12, 302.9620253164558], [1.7075916E12, 398.1930693069307], [1.70759161E12, 369.4746543778802], [1.70759158E12, 98.8], [1.70759159E12, 341.72477064220203]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.7075917E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 40.666666666666664, "minX": 1.70759153E12, "maxY": 177.39800995024876, "series": [{"data": [[1.70759154E12, 73.36507936507938], [1.70759153E12, 122.27027027027029]], "isOverall": false, "label": "1", "isController": false}, {"data": [[1.70759156E12, 89.1538461538462], [1.70759154E12, 40.666666666666664], [1.70759155E12, 71.25757575757576]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.70759158E12, 87.47651006711409], [1.70759156E12, 93.0], [1.70759157E12, 86.95767195767192]], "isOverall": false, "label": "4", "isController": false}, {"data": [[1.70759166E12, 176.6009174311926], [1.70759167E12, 177.39800995024876], [1.70759164E12, 170.02631578947373], [1.70759165E12, 171.31472081218274], [1.70759162E12, 90.78260869565219], [1.70759163E12, 166.4174757281553], [1.7075917E12, 110.11494252873564], [1.70759168E12, 164.57798165137612], [1.70759169E12, 165.49246231155783]], "isOverall": false, "label": "16", "isController": false}, {"data": [[1.70759162E12, 104.5253164556961], [1.7075916E12, 129.04950495049516], [1.70759161E12, 117.89861751152081], [1.70759158E12, 45.2], [1.70759159E12, 111.0321100917431]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.7075917E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 17.079365079365083, "minX": 1.70759153E12, "maxY": 40.95412844036697, "series": [{"data": [[1.70759154E12, 17.079365079365083], [1.70759153E12, 18.324324324324323]], "isOverall": false, "label": "1", "isController": false}, {"data": [[1.70759156E12, 17.58461538461539], [1.70759154E12, 17.333333333333332], [1.70759155E12, 17.78787878787879]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.70759158E12, 19.3758389261745], [1.70759156E12, 19.516129032258064], [1.70759157E12, 20.269841269841283]], "isOverall": false, "label": "4", "isController": false}, {"data": [[1.70759166E12, 40.95412844036697], [1.70759167E12, 28.582089552238806], [1.70759164E12, 33.64912280701754], [1.70759165E12, 26.86802030456854], [1.70759162E12, 26.065217391304348], [1.70759163E12, 30.344660194174736], [1.7075917E12, 19.218390804597696], [1.70759168E12, 28.366972477064206], [1.70759169E12, 32.53768844221106]], "isOverall": false, "label": "16", "isController": false}, {"data": [[1.70759162E12, 21.879746835443044], [1.7075916E12, 25.33663366336634], [1.70759161E12, 24.230414746543772], [1.70759158E12, 18.6], [1.70759159E12, 24.633027522935777]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.7075917E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 28.0, "minX": 1.70759153E12, "maxY": 22777.0, "series": [{"data": [[1.70759166E12, 22777.0], [1.70759164E12, 10406.0], [1.70759162E12, 3300.0], [1.7075916E12, 3668.0], [1.70759158E12, 2617.0], [1.70759156E12, 2517.0], [1.70759154E12, 1999.0], [1.70759169E12, 6598.0], [1.70759167E12, 12494.0], [1.70759165E12, 9383.0], [1.70759163E12, 7030.0], [1.70759161E12, 3837.0], [1.70759159E12, 3513.0], [1.70759157E12, 2374.0], [1.7075917E12, 2738.0], [1.70759155E12, 2163.0], [1.70759168E12, 9506.0], [1.70759153E12, 2056.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.70759166E12, 44.0], [1.70759164E12, 66.0], [1.70759162E12, 29.0], [1.7075916E12, 28.0], [1.70759158E12, 28.0], [1.70759156E12, 31.0], [1.70759154E12, 35.0], [1.70759169E12, 35.0], [1.70759167E12, 74.0], [1.70759165E12, 57.0], [1.70759163E12, 74.0], [1.70759161E12, 29.0], [1.70759159E12, 32.0], [1.70759157E12, 30.0], [1.7075917E12, 29.0], [1.70759155E12, 32.0], [1.70759168E12, 58.0], [1.70759153E12, 35.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.70759166E12, 2065.5999999999995], [1.70759164E12, 1592.1999999999994], [1.70759162E12, 620.0], [1.7075916E12, 865.0000000000003], [1.70759158E12, 382.5], [1.70759156E12, 430.0], [1.70759154E12, 232.00000000000023], [1.70759169E12, 1487.0], [1.70759167E12, 1667.8000000000006], [1.70759165E12, 1808.6000000000004], [1.70759163E12, 1535.1000000000006], [1.70759161E12, 871.4000000000007], [1.70759159E12, 710.5999999999999], [1.70759157E12, 455.0], [1.7075917E12, 627.2], [1.70759155E12, 262.4], [1.70759168E12, 1745.1], [1.70759153E12, 523.4000000000004]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.70759166E12, 6261.560000000003], [1.70759164E12, 4221.810000000001], [1.70759162E12, 2628.6499999999887], [1.7075916E12, 3237.98], [1.70759158E12, 2608.75], [1.70759156E12, 2468.8399999999997], [1.70759154E12, 1999.0], [1.70759169E12, 4943.0], [1.70759167E12, 6977.859999999999], [1.70759165E12, 6804.620000000027], [1.70759163E12, 6675.490000000009], [1.70759161E12, 3518.2599999999943], [1.70759159E12, 2750.2800000000016], [1.70759157E12, 2349.7], [1.7075917E12, 2738.0], [1.70759155E12, 1740.929999999984], [1.70759168E12, 8005.210000000007], [1.70759153E12, 2056.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.70759166E12, 410.5], [1.70759164E12, 382.5], [1.70759162E12, 155.0], [1.7075916E12, 240.0], [1.70759158E12, 102.5], [1.70759156E12, 100.0], [1.70759154E12, 95.5], [1.70759169E12, 374.0], [1.70759167E12, 406.0], [1.70759165E12, 394.0], [1.70759163E12, 401.0], [1.70759161E12, 209.0], [1.70759159E12, 204.5], [1.70759157E12, 121.0], [1.7075917E12, 123.0], [1.70759155E12, 96.0], [1.70759168E12, 375.0], [1.70759153E12, 88.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.70759166E12, 3034.9499999999975], [1.70759164E12, 2197.849999999999], [1.70759162E12, 1044.75], [1.7075916E12, 1192.8999999999999], [1.70759158E12, 656.25], [1.70759156E12, 572.9999999999997], [1.70759154E12, 463.44999999999993], [1.70759169E12, 2047.0], [1.70759167E12, 3118.5999999999967], [1.70759165E12, 2992.2999999999993], [1.70759163E12, 2706.299999999991], [1.70759161E12, 1191.8999999999999], [1.70759159E12, 1246.9499999999996], [1.70759157E12, 816.5], [1.7075917E12, 1198.799999999999], [1.70759155E12, 418.84999999999945], [1.70759168E12, 2728.0499999999956], [1.70759153E12, 967.9000000000017]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.7075917E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 90.0, "minX": 1.0, "maxY": 2027.5, "series": [{"data": [[33.0, 273.0], [32.0, 281.5], [35.0, 133.0], [37.0, 228.0], [3.0, 451.5], [4.0, 306.0], [5.0, 112.0], [6.0, 107.0], [7.0, 120.0], [8.0, 507.0], [9.0, 95.0], [10.0, 90.0], [11.0, 550.5], [12.0, 191.0], [13.0, 203.0], [14.0, 269.0], [15.0, 258.0], [1.0, 2027.5], [16.0, 304.0], [17.0, 131.0], [18.0, 176.5], [19.0, 209.0], [20.0, 314.0], [21.0, 341.5], [22.0, 361.0], [23.0, 372.0], [24.0, 236.5], [25.0, 303.0], [26.0, 284.5], [27.0, 169.5], [28.0, 152.0], [29.0, 208.0], [30.0, 301.0], [31.0, 224.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 37.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 41.0, "minX": 1.0, "maxY": 1138.5, "series": [{"data": [[33.0, 105.0], [32.0, 93.0], [35.0, 54.0], [37.0, 86.5], [3.0, 208.5], [4.0, 112.5], [5.0, 48.5], [6.0, 45.0], [7.0, 47.0], [8.0, 134.0], [9.0, 41.0], [10.0, 45.5], [11.0, 130.0], [12.0, 59.0], [13.0, 75.0], [14.0, 112.5], [15.0, 99.0], [1.0, 1138.5], [16.0, 102.5], [17.0, 49.0], [18.0, 57.5], [19.0, 90.5], [20.0, 112.0], [21.0, 131.0], [22.0, 117.0], [23.0, 126.0], [24.0, 89.0], [25.0, 107.0], [26.0, 99.0], [27.0, 62.0], [28.0, 58.5], [29.0, 87.0], [30.0, 123.0], [31.0, 95.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 37.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 3.8, "minX": 1.70759153E12, "maxY": 22.8, "series": [{"data": [[1.70759166E12, 21.8], [1.70759164E12, 22.8], [1.70759162E12, 21.3], [1.7075916E12, 20.2], [1.70759158E12, 15.4], [1.70759156E12, 12.9], [1.70759154E12, 6.6], [1.70759169E12, 19.1], [1.70759167E12, 20.1], [1.70759165E12, 19.7], [1.70759163E12, 20.6], [1.70759161E12, 21.6], [1.70759159E12, 22.2], [1.70759157E12, 18.9], [1.7075917E12, 8.0], [1.70759155E12, 13.3], [1.70759168E12, 21.7], [1.70759153E12, 3.8]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.7075917E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 3.7, "minX": 1.70759153E12, "maxY": 22.8, "series": [{"data": [[1.70759166E12, 21.8], [1.70759164E12, 22.8], [1.70759162E12, 20.4], [1.7075916E12, 20.2], [1.70759158E12, 15.4], [1.70759156E12, 12.7], [1.70759154E12, 6.6], [1.70759169E12, 19.9], [1.70759167E12, 20.1], [1.70759165E12, 19.7], [1.70759163E12, 20.6], [1.70759161E12, 21.7], [1.70759159E12, 21.8], [1.70759157E12, 18.9], [1.7075917E12, 8.7], [1.70759155E12, 13.2], [1.70759168E12, 21.8], [1.70759153E12, 3.7]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.7075917E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.3, "minX": 1.70759153E12, "maxY": 22.8, "series": [{"data": [[1.70759166E12, 21.8], [1.70759167E12, 20.1], [1.70759164E12, 22.8], [1.70759165E12, 19.7], [1.70759162E12, 4.6], [1.70759163E12, 20.6], [1.7075917E12, 8.7], [1.70759168E12, 21.8], [1.70759169E12, 19.9]], "isOverall": false, "label": "16-success", "isController": false}, {"data": [[1.70759154E12, 6.3], [1.70759153E12, 3.7]], "isOverall": false, "label": "1-success", "isController": false}, {"data": [[1.70759158E12, 14.9], [1.70759156E12, 6.2], [1.70759157E12, 18.9]], "isOverall": false, "label": "4-success", "isController": false}, {"data": [[1.70759162E12, 15.8], [1.7075916E12, 20.2], [1.70759161E12, 21.7], [1.70759158E12, 0.5], [1.70759159E12, 21.8]], "isOverall": false, "label": "8-success", "isController": false}, {"data": [[1.70759156E12, 6.5], [1.70759154E12, 0.3], [1.70759155E12, 13.2]], "isOverall": false, "label": "2-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.7075917E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 3.7, "minX": 1.70759153E12, "maxY": 22.8, "series": [{"data": [[1.70759166E12, 21.8], [1.70759164E12, 22.8], [1.70759162E12, 20.4], [1.7075916E12, 20.2], [1.70759158E12, 15.4], [1.70759156E12, 12.7], [1.70759154E12, 6.6], [1.70759169E12, 19.9], [1.70759167E12, 20.1], [1.70759165E12, 19.7], [1.70759163E12, 20.6], [1.70759161E12, 21.7], [1.70759159E12, 21.8], [1.70759157E12, 18.9], [1.7075917E12, 8.7], [1.70759155E12, 13.2], [1.70759168E12, 21.8], [1.70759153E12, 3.7]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.7075917E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

