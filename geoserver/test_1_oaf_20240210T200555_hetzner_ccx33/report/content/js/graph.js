/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 28.0, "minX": 0.0, "maxY": 15989.0, "series": [{"data": [[0.0, 32.0], [0.1, 32.0], [0.2, 32.0], [0.3, 32.0], [0.4, 32.0], [0.5, 32.0], [0.6, 32.0], [0.7, 32.0], [0.8, 32.0], [0.9, 32.0], [1.0, 34.0], [1.1, 34.0], [1.2, 34.0], [1.3, 34.0], [1.4, 34.0], [1.5, 34.0], [1.6, 34.0], [1.7, 34.0], [1.8, 34.0], [1.9, 34.0], [2.0, 34.0], [2.1, 34.0], [2.2, 34.0], [2.3, 34.0], [2.4, 34.0], [2.5, 34.0], [2.6, 34.0], [2.7, 34.0], [2.8, 34.0], [2.9, 34.0], [3.0, 35.0], [3.1, 35.0], [3.2, 35.0], [3.3, 35.0], [3.4, 35.0], [3.5, 35.0], [3.6, 35.0], [3.7, 35.0], [3.8, 35.0], [3.9, 35.0], [4.0, 35.0], [4.1, 35.0], [4.2, 35.0], [4.3, 35.0], [4.4, 35.0], [4.5, 35.0], [4.6, 35.0], [4.7, 35.0], [4.8, 35.0], [4.9, 35.0], [5.0, 35.0], [5.1, 35.0], [5.2, 35.0], [5.3, 35.0], [5.4, 35.0], [5.5, 35.0], [5.6, 35.0], [5.7, 35.0], [5.8, 35.0], [5.9, 35.0], [6.0, 36.0], [6.1, 36.0], [6.2, 36.0], [6.3, 36.0], [6.4, 36.0], [6.5, 36.0], [6.6, 36.0], [6.7, 36.0], [6.8, 36.0], [6.9, 36.0], [7.0, 38.0], [7.1, 38.0], [7.2, 38.0], [7.3, 38.0], [7.4, 38.0], [7.5, 38.0], [7.6, 38.0], [7.7, 38.0], [7.8, 38.0], [7.9, 38.0], [8.0, 42.0], [8.1, 42.0], [8.2, 42.0], [8.3, 42.0], [8.4, 42.0], [8.5, 42.0], [8.6, 42.0], [8.7, 42.0], [8.8, 42.0], [8.9, 42.0], [9.0, 43.0], [9.1, 43.0], [9.2, 43.0], [9.3, 43.0], [9.4, 43.0], [9.5, 43.0], [9.6, 43.0], [9.7, 43.0], [9.8, 43.0], [9.9, 43.0], [10.0, 44.0], [10.1, 44.0], [10.2, 44.0], [10.3, 44.0], [10.4, 44.0], [10.5, 44.0], [10.6, 44.0], [10.7, 44.0], [10.8, 44.0], [10.9, 44.0], [11.0, 44.0], [11.1, 44.0], [11.2, 44.0], [11.3, 44.0], [11.4, 44.0], [11.5, 44.0], [11.6, 44.0], [11.7, 44.0], [11.8, 44.0], [11.9, 44.0], [12.0, 44.0], [12.1, 44.0], [12.2, 44.0], [12.3, 44.0], [12.4, 44.0], [12.5, 44.0], [12.6, 44.0], [12.7, 44.0], [12.8, 44.0], [12.9, 44.0], [13.0, 45.0], [13.1, 45.0], [13.2, 45.0], [13.3, 45.0], [13.4, 45.0], [13.5, 45.0], [13.6, 45.0], [13.7, 45.0], [13.8, 45.0], [13.9, 45.0], [14.0, 45.0], [14.1, 45.0], [14.2, 45.0], [14.3, 45.0], [14.4, 45.0], [14.5, 45.0], [14.6, 45.0], [14.7, 45.0], [14.8, 45.0], [14.9, 45.0], [15.0, 47.0], [15.1, 47.0], [15.2, 47.0], [15.3, 47.0], [15.4, 47.0], [15.5, 47.0], [15.6, 47.0], [15.7, 47.0], [15.8, 47.0], [15.9, 47.0], [16.0, 48.0], [16.1, 48.0], [16.2, 48.0], [16.3, 48.0], [16.4, 48.0], [16.5, 48.0], [16.6, 48.0], [16.7, 48.0], [16.8, 48.0], [16.9, 48.0], [17.0, 48.0], [17.1, 48.0], [17.2, 48.0], [17.3, 48.0], [17.4, 48.0], [17.5, 48.0], [17.6, 48.0], [17.7, 48.0], [17.8, 48.0], [17.9, 48.0], [18.0, 49.0], [18.1, 49.0], [18.2, 49.0], [18.3, 49.0], [18.4, 49.0], [18.5, 49.0], [18.6, 49.0], [18.7, 49.0], [18.8, 49.0], [18.9, 49.0], [19.0, 50.0], [19.1, 50.0], [19.2, 50.0], [19.3, 50.0], [19.4, 50.0], [19.5, 50.0], [19.6, 50.0], [19.7, 50.0], [19.8, 50.0], [19.9, 50.0], [20.0, 50.0], [20.1, 50.0], [20.2, 50.0], [20.3, 50.0], [20.4, 50.0], [20.5, 50.0], [20.6, 50.0], [20.7, 50.0], [20.8, 50.0], [20.9, 50.0], [21.0, 51.0], [21.1, 51.0], [21.2, 51.0], [21.3, 51.0], [21.4, 51.0], [21.5, 51.0], [21.6, 51.0], [21.7, 51.0], [21.8, 51.0], [21.9, 51.0], [22.0, 51.0], [22.1, 51.0], [22.2, 51.0], [22.3, 51.0], [22.4, 51.0], [22.5, 51.0], [22.6, 51.0], [22.7, 51.0], [22.8, 51.0], [22.9, 51.0], [23.0, 58.0], [23.1, 58.0], [23.2, 58.0], [23.3, 58.0], [23.4, 58.0], [23.5, 58.0], [23.6, 58.0], [23.7, 58.0], [23.8, 58.0], [23.9, 58.0], [24.0, 60.0], [24.1, 60.0], [24.2, 60.0], [24.3, 60.0], [24.4, 60.0], [24.5, 60.0], [24.6, 60.0], [24.7, 60.0], [24.8, 60.0], [24.9, 60.0], [25.0, 61.0], [25.1, 61.0], [25.2, 61.0], [25.3, 61.0], [25.4, 61.0], [25.5, 61.0], [25.6, 61.0], [25.7, 61.0], [25.8, 61.0], [25.9, 61.0], [26.0, 63.0], [26.1, 63.0], [26.2, 63.0], [26.3, 63.0], [26.4, 63.0], [26.5, 63.0], [26.6, 63.0], [26.7, 63.0], [26.8, 63.0], [26.9, 63.0], [27.0, 63.0], [27.1, 63.0], [27.2, 63.0], [27.3, 63.0], [27.4, 63.0], [27.5, 63.0], [27.6, 63.0], [27.7, 63.0], [27.8, 63.0], [27.9, 63.0], [28.0, 65.0], [28.1, 65.0], [28.2, 65.0], [28.3, 65.0], [28.4, 65.0], [28.5, 65.0], [28.6, 65.0], [28.7, 65.0], [28.8, 65.0], [28.9, 65.0], [29.0, 68.0], [29.1, 68.0], [29.2, 68.0], [29.3, 68.0], [29.4, 68.0], [29.5, 68.0], [29.6, 68.0], [29.7, 68.0], [29.8, 68.0], [29.9, 68.0], [30.0, 71.0], [30.1, 71.0], [30.2, 71.0], [30.3, 71.0], [30.4, 71.0], [30.5, 71.0], [30.6, 71.0], [30.7, 71.0], [30.8, 71.0], [30.9, 71.0], [31.0, 72.0], [31.1, 72.0], [31.2, 72.0], [31.3, 72.0], [31.4, 72.0], [31.5, 72.0], [31.6, 72.0], [31.7, 72.0], [31.8, 72.0], [31.9, 72.0], [32.0, 72.0], [32.1, 72.0], [32.2, 72.0], [32.3, 72.0], [32.4, 72.0], [32.5, 72.0], [32.6, 72.0], [32.7, 72.0], [32.8, 72.0], [32.9, 72.0], [33.0, 73.0], [33.1, 73.0], [33.2, 73.0], [33.3, 73.0], [33.4, 73.0], [33.5, 73.0], [33.6, 73.0], [33.7, 73.0], [33.8, 73.0], [33.9, 73.0], [34.0, 74.0], [34.1, 74.0], [34.2, 74.0], [34.3, 74.0], [34.4, 74.0], [34.5, 74.0], [34.6, 74.0], [34.7, 74.0], [34.8, 74.0], [34.9, 74.0], [35.0, 74.0], [35.1, 74.0], [35.2, 74.0], [35.3, 74.0], [35.4, 74.0], [35.5, 74.0], [35.6, 74.0], [35.7, 74.0], [35.8, 74.0], [35.9, 74.0], [36.0, 76.0], [36.1, 76.0], [36.2, 76.0], [36.3, 76.0], [36.4, 76.0], [36.5, 76.0], [36.6, 76.0], [36.7, 76.0], [36.8, 76.0], [36.9, 76.0], [37.0, 79.0], [37.1, 79.0], [37.2, 79.0], [37.3, 79.0], [37.4, 79.0], [37.5, 79.0], [37.6, 79.0], [37.7, 79.0], [37.8, 79.0], [37.9, 79.0], [38.0, 81.0], [38.1, 81.0], [38.2, 81.0], [38.3, 81.0], [38.4, 81.0], [38.5, 81.0], [38.6, 81.0], [38.7, 81.0], [38.8, 81.0], [38.9, 81.0], [39.0, 81.0], [39.1, 81.0], [39.2, 81.0], [39.3, 81.0], [39.4, 81.0], [39.5, 81.0], [39.6, 81.0], [39.7, 81.0], [39.8, 81.0], [39.9, 81.0], [40.0, 82.0], [40.1, 82.0], [40.2, 82.0], [40.3, 82.0], [40.4, 82.0], [40.5, 82.0], [40.6, 82.0], [40.7, 82.0], [40.8, 82.0], [40.9, 82.0], [41.0, 84.0], [41.1, 84.0], [41.2, 84.0], [41.3, 84.0], [41.4, 84.0], [41.5, 84.0], [41.6, 84.0], [41.7, 84.0], [41.8, 84.0], [41.9, 84.0], [42.0, 84.0], [42.1, 84.0], [42.2, 84.0], [42.3, 84.0], [42.4, 84.0], [42.5, 84.0], [42.6, 84.0], [42.7, 84.0], [42.8, 84.0], [42.9, 84.0], [43.0, 86.0], [43.1, 86.0], [43.2, 86.0], [43.3, 86.0], [43.4, 86.0], [43.5, 86.0], [43.6, 86.0], [43.7, 86.0], [43.8, 86.0], [43.9, 86.0], [44.0, 87.0], [44.1, 87.0], [44.2, 87.0], [44.3, 87.0], [44.4, 87.0], [44.5, 87.0], [44.6, 87.0], [44.7, 87.0], [44.8, 87.0], [44.9, 87.0], [45.0, 87.0], [45.1, 87.0], [45.2, 87.0], [45.3, 87.0], [45.4, 87.0], [45.5, 87.0], [45.6, 87.0], [45.7, 87.0], [45.8, 87.0], [45.9, 87.0], [46.0, 88.0], [46.1, 88.0], [46.2, 88.0], [46.3, 88.0], [46.4, 88.0], [46.5, 88.0], [46.6, 88.0], [46.7, 88.0], [46.8, 88.0], [46.9, 88.0], [47.0, 89.0], [47.1, 89.0], [47.2, 89.0], [47.3, 89.0], [47.4, 89.0], [47.5, 89.0], [47.6, 89.0], [47.7, 89.0], [47.8, 89.0], [47.9, 89.0], [48.0, 89.0], [48.1, 89.0], [48.2, 89.0], [48.3, 89.0], [48.4, 89.0], [48.5, 89.0], [48.6, 89.0], [48.7, 89.0], [48.8, 89.0], [48.9, 89.0], [49.0, 90.0], [49.1, 90.0], [49.2, 90.0], [49.3, 90.0], [49.4, 90.0], [49.5, 90.0], [49.6, 90.0], [49.7, 90.0], [49.8, 90.0], [49.9, 90.0], [50.0, 92.0], [50.1, 92.0], [50.2, 92.0], [50.3, 92.0], [50.4, 92.0], [50.5, 92.0], [50.6, 92.0], [50.7, 92.0], [50.8, 92.0], [50.9, 92.0], [51.0, 94.0], [51.1, 94.0], [51.2, 94.0], [51.3, 94.0], [51.4, 94.0], [51.5, 94.0], [51.6, 94.0], [51.7, 94.0], [51.8, 94.0], [51.9, 94.0], [52.0, 94.0], [52.1, 94.0], [52.2, 94.0], [52.3, 94.0], [52.4, 94.0], [52.5, 94.0], [52.6, 94.0], [52.7, 94.0], [52.8, 94.0], [52.9, 94.0], [53.0, 97.0], [53.1, 97.0], [53.2, 97.0], [53.3, 97.0], [53.4, 97.0], [53.5, 97.0], [53.6, 97.0], [53.7, 97.0], [53.8, 97.0], [53.9, 97.0], [54.0, 101.0], [54.1, 101.0], [54.2, 101.0], [54.3, 101.0], [54.4, 101.0], [54.5, 101.0], [54.6, 101.0], [54.7, 101.0], [54.8, 101.0], [54.9, 101.0], [55.0, 102.0], [55.1, 102.0], [55.2, 102.0], [55.3, 102.0], [55.4, 102.0], [55.5, 102.0], [55.6, 102.0], [55.7, 102.0], [55.8, 102.0], [55.9, 102.0], [56.0, 103.0], [56.1, 103.0], [56.2, 103.0], [56.3, 103.0], [56.4, 103.0], [56.5, 103.0], [56.6, 103.0], [56.7, 103.0], [56.8, 103.0], [56.9, 103.0], [57.0, 103.0], [57.1, 103.0], [57.2, 103.0], [57.3, 103.0], [57.4, 103.0], [57.5, 103.0], [57.6, 103.0], [57.7, 103.0], [57.8, 103.0], [57.9, 103.0], [58.0, 103.0], [58.1, 103.0], [58.2, 103.0], [58.3, 103.0], [58.4, 103.0], [58.5, 103.0], [58.6, 103.0], [58.7, 103.0], [58.8, 103.0], [58.9, 103.0], [59.0, 107.0], [59.1, 107.0], [59.2, 107.0], [59.3, 107.0], [59.4, 107.0], [59.5, 107.0], [59.6, 107.0], [59.7, 107.0], [59.8, 107.0], [59.9, 107.0], [60.0, 110.0], [60.1, 110.0], [60.2, 110.0], [60.3, 110.0], [60.4, 110.0], [60.5, 110.0], [60.6, 110.0], [60.7, 110.0], [60.8, 110.0], [60.9, 110.0], [61.0, 111.0], [61.1, 111.0], [61.2, 111.0], [61.3, 111.0], [61.4, 111.0], [61.5, 111.0], [61.6, 111.0], [61.7, 111.0], [61.8, 111.0], [61.9, 111.0], [62.0, 111.0], [62.1, 111.0], [62.2, 111.0], [62.3, 111.0], [62.4, 111.0], [62.5, 111.0], [62.6, 111.0], [62.7, 111.0], [62.8, 111.0], [62.9, 111.0], [63.0, 114.0], [63.1, 114.0], [63.2, 114.0], [63.3, 114.0], [63.4, 114.0], [63.5, 114.0], [63.6, 114.0], [63.7, 114.0], [63.8, 114.0], [63.9, 114.0], [64.0, 118.0], [64.1, 118.0], [64.2, 118.0], [64.3, 118.0], [64.4, 118.0], [64.5, 118.0], [64.6, 118.0], [64.7, 118.0], [64.8, 118.0], [64.9, 118.0], [65.0, 119.0], [65.1, 119.0], [65.2, 119.0], [65.3, 119.0], [65.4, 119.0], [65.5, 119.0], [65.6, 119.0], [65.7, 119.0], [65.8, 119.0], [65.9, 119.0], [66.0, 124.0], [66.1, 124.0], [66.2, 124.0], [66.3, 124.0], [66.4, 124.0], [66.5, 124.0], [66.6, 124.0], [66.7, 124.0], [66.8, 124.0], [66.9, 124.0], [67.0, 125.0], [67.1, 125.0], [67.2, 125.0], [67.3, 125.0], [67.4, 125.0], [67.5, 125.0], [67.6, 125.0], [67.7, 125.0], [67.8, 125.0], [67.9, 125.0], [68.0, 127.0], [68.1, 127.0], [68.2, 127.0], [68.3, 127.0], [68.4, 127.0], [68.5, 127.0], [68.6, 127.0], [68.7, 127.0], [68.8, 127.0], [68.9, 127.0], [69.0, 128.0], [69.1, 128.0], [69.2, 128.0], [69.3, 128.0], [69.4, 128.0], [69.5, 128.0], [69.6, 128.0], [69.7, 128.0], [69.8, 128.0], [69.9, 128.0], [70.0, 129.0], [70.1, 129.0], [70.2, 129.0], [70.3, 129.0], [70.4, 129.0], [70.5, 129.0], [70.6, 129.0], [70.7, 129.0], [70.8, 129.0], [70.9, 129.0], [71.0, 138.0], [71.1, 138.0], [71.2, 138.0], [71.3, 138.0], [71.4, 138.0], [71.5, 138.0], [71.6, 138.0], [71.7, 138.0], [71.8, 138.0], [71.9, 138.0], [72.0, 140.0], [72.1, 140.0], [72.2, 140.0], [72.3, 140.0], [72.4, 140.0], [72.5, 140.0], [72.6, 140.0], [72.7, 140.0], [72.8, 140.0], [72.9, 140.0], [73.0, 146.0], [73.1, 146.0], [73.2, 146.0], [73.3, 146.0], [73.4, 146.0], [73.5, 146.0], [73.6, 146.0], [73.7, 146.0], [73.8, 146.0], [73.9, 146.0], [74.0, 148.0], [74.1, 148.0], [74.2, 148.0], [74.3, 148.0], [74.4, 148.0], [74.5, 148.0], [74.6, 148.0], [74.7, 148.0], [74.8, 148.0], [74.9, 148.0], [75.0, 151.0], [75.1, 151.0], [75.2, 151.0], [75.3, 151.0], [75.4, 151.0], [75.5, 151.0], [75.6, 151.0], [75.7, 151.0], [75.8, 151.0], [75.9, 151.0], [76.0, 153.0], [76.1, 153.0], [76.2, 153.0], [76.3, 153.0], [76.4, 153.0], [76.5, 153.0], [76.6, 153.0], [76.7, 153.0], [76.8, 153.0], [76.9, 153.0], [77.0, 154.0], [77.1, 154.0], [77.2, 154.0], [77.3, 154.0], [77.4, 154.0], [77.5, 154.0], [77.6, 154.0], [77.7, 154.0], [77.8, 154.0], [77.9, 154.0], [78.0, 155.0], [78.1, 155.0], [78.2, 155.0], [78.3, 155.0], [78.4, 155.0], [78.5, 155.0], [78.6, 155.0], [78.7, 155.0], [78.8, 155.0], [78.9, 155.0], [79.0, 164.0], [79.1, 164.0], [79.2, 164.0], [79.3, 164.0], [79.4, 164.0], [79.5, 164.0], [79.6, 164.0], [79.7, 164.0], [79.8, 164.0], [79.9, 164.0], [80.0, 181.0], [80.1, 181.0], [80.2, 181.0], [80.3, 181.0], [80.4, 181.0], [80.5, 181.0], [80.6, 181.0], [80.7, 181.0], [80.8, 181.0], [80.9, 181.0], [81.0, 182.0], [81.1, 182.0], [81.2, 182.0], [81.3, 182.0], [81.4, 182.0], [81.5, 182.0], [81.6, 182.0], [81.7, 182.0], [81.8, 182.0], [81.9, 182.0], [82.0, 185.0], [82.1, 185.0], [82.2, 185.0], [82.3, 185.0], [82.4, 185.0], [82.5, 185.0], [82.6, 185.0], [82.7, 185.0], [82.8, 185.0], [82.9, 185.0], [83.0, 201.0], [83.1, 201.0], [83.2, 201.0], [83.3, 201.0], [83.4, 201.0], [83.5, 201.0], [83.6, 201.0], [83.7, 201.0], [83.8, 201.0], [83.9, 201.0], [84.0, 208.0], [84.1, 208.0], [84.2, 208.0], [84.3, 208.0], [84.4, 208.0], [84.5, 208.0], [84.6, 208.0], [84.7, 208.0], [84.8, 208.0], [84.9, 208.0], [85.0, 212.0], [85.1, 212.0], [85.2, 212.0], [85.3, 212.0], [85.4, 212.0], [85.5, 212.0], [85.6, 212.0], [85.7, 212.0], [85.8, 212.0], [85.9, 212.0], [86.0, 214.0], [86.1, 214.0], [86.2, 214.0], [86.3, 214.0], [86.4, 214.0], [86.5, 214.0], [86.6, 214.0], [86.7, 214.0], [86.8, 214.0], [86.9, 214.0], [87.0, 267.0], [87.1, 267.0], [87.2, 267.0], [87.3, 267.0], [87.4, 267.0], [87.5, 267.0], [87.6, 267.0], [87.7, 267.0], [87.8, 267.0], [87.9, 267.0], [88.0, 288.0], [88.1, 288.0], [88.2, 288.0], [88.3, 288.0], [88.4, 288.0], [88.5, 288.0], [88.6, 288.0], [88.7, 288.0], [88.8, 288.0], [88.9, 288.0], [89.0, 412.0], [89.1, 412.0], [89.2, 412.0], [89.3, 412.0], [89.4, 412.0], [89.5, 412.0], [89.6, 412.0], [89.7, 412.0], [89.8, 412.0], [89.9, 412.0], [90.0, 417.0], [90.1, 417.0], [90.2, 417.0], [90.3, 417.0], [90.4, 417.0], [90.5, 417.0], [90.6, 417.0], [90.7, 417.0], [90.8, 417.0], [90.9, 417.0], [91.0, 428.0], [91.1, 428.0], [91.2, 428.0], [91.3, 428.0], [91.4, 428.0], [91.5, 428.0], [91.6, 428.0], [91.7, 428.0], [91.8, 428.0], [91.9, 428.0], [92.0, 481.0], [92.1, 481.0], [92.2, 481.0], [92.3, 481.0], [92.4, 481.0], [92.5, 481.0], [92.6, 481.0], [92.7, 481.0], [92.8, 481.0], [92.9, 481.0], [93.0, 500.0], [93.1, 500.0], [93.2, 500.0], [93.3, 500.0], [93.4, 500.0], [93.5, 500.0], [93.6, 500.0], [93.7, 500.0], [93.8, 500.0], [93.9, 500.0], [94.0, 501.0], [94.1, 501.0], [94.2, 501.0], [94.3, 501.0], [94.4, 501.0], [94.5, 501.0], [94.6, 501.0], [94.7, 501.0], [94.8, 501.0], [94.9, 501.0], [95.0, 625.0], [95.1, 625.0], [95.2, 625.0], [95.3, 625.0], [95.4, 625.0], [95.5, 625.0], [95.6, 625.0], [95.7, 625.0], [95.8, 625.0], [95.9, 625.0], [96.0, 635.0], [96.1, 635.0], [96.2, 635.0], [96.3, 635.0], [96.4, 635.0], [96.5, 635.0], [96.6, 635.0], [96.7, 635.0], [96.8, 635.0], [96.9, 635.0], [97.0, 818.0], [97.1, 818.0], [97.2, 818.0], [97.3, 818.0], [97.4, 818.0], [97.5, 818.0], [97.6, 818.0], [97.7, 818.0], [97.8, 818.0], [97.9, 818.0], [98.0, 2008.0], [98.1, 2008.0], [98.2, 2008.0], [98.3, 2008.0], [98.4, 2008.0], [98.5, 2008.0], [98.6, 2008.0], [98.7, 2008.0], [98.8, 2008.0], [98.9, 2008.0], [99.0, 2039.0], [99.1, 2039.0], [99.2, 2039.0], [99.3, 2039.0], [99.4, 2039.0], [99.5, 2039.0], [99.6, 2039.0], [99.7, 2039.0], [99.8, 2039.0], [99.9, 2039.0]], "isOverall": false, "label": "1", "isController": false}, {"data": [[0.0, 28.0], [0.1, 28.0], [0.2, 28.0], [0.3, 28.0], [0.4, 28.0], [0.5, 28.0], [0.6, 28.0], [0.7, 28.0], [0.8, 28.0], [0.9, 28.0], [1.0, 28.0], [1.1, 28.0], [1.2, 28.0], [1.3, 28.0], [1.4, 28.0], [1.5, 30.0], [1.6, 30.0], [1.7, 30.0], [1.8, 30.0], [1.9, 30.0], [2.0, 32.0], [2.1, 32.0], [2.2, 32.0], [2.3, 32.0], [2.4, 32.0], [2.5, 32.0], [2.6, 32.0], [2.7, 32.0], [2.8, 32.0], [2.9, 32.0], [3.0, 33.0], [3.1, 33.0], [3.2, 33.0], [3.3, 33.0], [3.4, 33.0], [3.5, 35.0], [3.6, 35.0], [3.7, 35.0], [3.8, 35.0], [3.9, 35.0], [4.0, 35.0], [4.1, 35.0], [4.2, 35.0], [4.3, 35.0], [4.4, 35.0], [4.5, 36.0], [4.6, 36.0], [4.7, 36.0], [4.8, 36.0], [4.9, 36.0], [5.0, 36.0], [5.1, 36.0], [5.2, 36.0], [5.3, 36.0], [5.4, 36.0], [5.5, 36.0], [5.6, 36.0], [5.7, 36.0], [5.8, 36.0], [5.9, 36.0], [6.0, 37.0], [6.1, 37.0], [6.2, 37.0], [6.3, 37.0], [6.4, 37.0], [6.5, 37.0], [6.6, 37.0], [6.7, 37.0], [6.8, 37.0], [6.9, 37.0], [7.0, 37.0], [7.1, 37.0], [7.2, 37.0], [7.3, 37.0], [7.4, 37.0], [7.5, 37.0], [7.6, 37.0], [7.7, 37.0], [7.8, 37.0], [7.9, 37.0], [8.0, 38.0], [8.1, 38.0], [8.2, 38.0], [8.3, 38.0], [8.4, 38.0], [8.5, 38.0], [8.6, 38.0], [8.7, 38.0], [8.8, 38.0], [8.9, 38.0], [9.0, 38.0], [9.1, 38.0], [9.2, 38.0], [9.3, 38.0], [9.4, 38.0], [9.5, 39.0], [9.6, 39.0], [9.7, 39.0], [9.8, 39.0], [9.9, 39.0], [10.0, 39.0], [10.1, 39.0], [10.2, 39.0], [10.3, 39.0], [10.4, 39.0], [10.5, 40.0], [10.6, 40.0], [10.7, 40.0], [10.8, 40.0], [10.9, 40.0], [11.0, 41.0], [11.1, 41.0], [11.2, 41.0], [11.3, 41.0], [11.4, 41.0], [11.5, 41.0], [11.6, 41.0], [11.7, 41.0], [11.8, 41.0], [11.9, 41.0], [12.0, 45.0], [12.1, 45.0], [12.2, 45.0], [12.3, 45.0], [12.4, 45.0], [12.5, 45.0], [12.6, 45.0], [12.7, 45.0], [12.8, 45.0], [12.9, 45.0], [13.0, 45.0], [13.1, 45.0], [13.2, 45.0], [13.3, 45.0], [13.4, 45.0], [13.5, 46.0], [13.6, 46.0], [13.7, 46.0], [13.8, 46.0], [13.9, 46.0], [14.0, 46.0], [14.1, 46.0], [14.2, 46.0], [14.3, 46.0], [14.4, 46.0], [14.5, 47.0], [14.6, 47.0], [14.7, 47.0], [14.8, 47.0], [14.9, 47.0], [15.0, 48.0], [15.1, 48.0], [15.2, 48.0], [15.3, 48.0], [15.4, 48.0], [15.5, 48.0], [15.6, 48.0], [15.7, 48.0], [15.8, 48.0], [15.9, 48.0], [16.0, 48.0], [16.1, 48.0], [16.2, 48.0], [16.3, 48.0], [16.4, 48.0], [16.5, 49.0], [16.6, 49.0], [16.7, 49.0], [16.8, 49.0], [16.9, 49.0], [17.0, 49.0], [17.1, 49.0], [17.2, 49.0], [17.3, 49.0], [17.4, 49.0], [17.5, 50.0], [17.6, 50.0], [17.7, 50.0], [17.8, 50.0], [17.9, 50.0], [18.0, 50.0], [18.1, 50.0], [18.2, 50.0], [18.3, 50.0], [18.4, 50.0], [18.5, 52.0], [18.6, 52.0], [18.7, 52.0], [18.8, 52.0], [18.9, 52.0], [19.0, 53.0], [19.1, 53.0], [19.2, 53.0], [19.3, 53.0], [19.4, 53.0], [19.5, 55.0], [19.6, 55.0], [19.7, 55.0], [19.8, 55.0], [19.9, 55.0], [20.0, 56.0], [20.1, 56.0], [20.2, 56.0], [20.3, 56.0], [20.4, 56.0], [20.5, 56.0], [20.6, 56.0], [20.7, 56.0], [20.8, 56.0], [20.9, 56.0], [21.0, 59.0], [21.1, 59.0], [21.2, 59.0], [21.3, 59.0], [21.4, 59.0], [21.5, 60.0], [21.6, 60.0], [21.7, 60.0], [21.8, 60.0], [21.9, 60.0], [22.0, 60.0], [22.1, 60.0], [22.2, 60.0], [22.3, 60.0], [22.4, 60.0], [22.5, 60.0], [22.6, 60.0], [22.7, 60.0], [22.8, 60.0], [22.9, 60.0], [23.0, 61.0], [23.1, 61.0], [23.2, 61.0], [23.3, 61.0], [23.4, 61.0], [23.5, 61.0], [23.6, 61.0], [23.7, 61.0], [23.8, 61.0], [23.9, 61.0], [24.0, 62.0], [24.1, 62.0], [24.2, 62.0], [24.3, 62.0], [24.4, 62.0], [24.5, 62.0], [24.6, 62.0], [24.7, 62.0], [24.8, 62.0], [24.9, 62.0], [25.0, 62.0], [25.1, 62.0], [25.2, 62.0], [25.3, 62.0], [25.4, 62.0], [25.5, 63.0], [25.6, 63.0], [25.7, 63.0], [25.8, 63.0], [25.9, 63.0], [26.0, 63.0], [26.1, 63.0], [26.2, 63.0], [26.3, 63.0], [26.4, 63.0], [26.5, 64.0], [26.6, 64.0], [26.7, 64.0], [26.8, 64.0], [26.9, 64.0], [27.0, 64.0], [27.1, 64.0], [27.2, 64.0], [27.3, 64.0], [27.4, 64.0], [27.5, 64.0], [27.6, 64.0], [27.7, 64.0], [27.8, 64.0], [27.9, 64.0], [28.0, 64.0], [28.1, 64.0], [28.2, 64.0], [28.3, 64.0], [28.4, 64.0], [28.5, 64.0], [28.6, 64.0], [28.7, 64.0], [28.8, 64.0], [28.9, 64.0], [29.0, 65.0], [29.1, 65.0], [29.2, 65.0], [29.3, 65.0], [29.4, 65.0], [29.5, 66.0], [29.6, 66.0], [29.7, 66.0], [29.8, 66.0], [29.9, 66.0], [30.0, 66.0], [30.1, 66.0], [30.2, 66.0], [30.3, 66.0], [30.4, 66.0], [30.5, 66.0], [30.6, 66.0], [30.7, 66.0], [30.8, 66.0], [30.9, 66.0], [31.0, 67.0], [31.1, 67.0], [31.2, 67.0], [31.3, 67.0], [31.4, 67.0], [31.5, 67.0], [31.6, 67.0], [31.7, 67.0], [31.8, 67.0], [31.9, 67.0], [32.0, 68.0], [32.1, 68.0], [32.2, 68.0], [32.3, 68.0], [32.4, 68.0], [32.5, 69.0], [32.6, 69.0], [32.7, 69.0], [32.8, 69.0], [32.9, 69.0], [33.0, 71.0], [33.1, 71.0], [33.2, 71.0], [33.3, 71.0], [33.4, 71.0], [33.5, 72.0], [33.6, 72.0], [33.7, 72.0], [33.8, 72.0], [33.9, 72.0], [34.0, 72.0], [34.1, 72.0], [34.2, 72.0], [34.3, 72.0], [34.4, 72.0], [34.5, 73.0], [34.6, 73.0], [34.7, 73.0], [34.8, 73.0], [34.9, 73.0], [35.0, 74.0], [35.1, 74.0], [35.2, 74.0], [35.3, 74.0], [35.4, 74.0], [35.5, 75.0], [35.6, 75.0], [35.7, 75.0], [35.8, 75.0], [35.9, 75.0], [36.0, 76.0], [36.1, 76.0], [36.2, 76.0], [36.3, 76.0], [36.4, 76.0], [36.5, 76.0], [36.6, 76.0], [36.7, 76.0], [36.8, 76.0], [36.9, 76.0], [37.0, 77.0], [37.1, 77.0], [37.2, 77.0], [37.3, 77.0], [37.4, 77.0], [37.5, 77.0], [37.6, 77.0], [37.7, 77.0], [37.8, 77.0], [37.9, 77.0], [38.0, 78.0], [38.1, 78.0], [38.2, 78.0], [38.3, 78.0], [38.4, 78.0], [38.5, 78.0], [38.6, 78.0], [38.7, 78.0], [38.8, 78.0], [38.9, 78.0], [39.0, 78.0], [39.1, 78.0], [39.2, 78.0], [39.3, 78.0], [39.4, 78.0], [39.5, 79.0], [39.6, 79.0], [39.7, 79.0], [39.8, 79.0], [39.9, 79.0], [40.0, 79.0], [40.1, 79.0], [40.2, 79.0], [40.3, 79.0], [40.4, 79.0], [40.5, 81.0], [40.6, 81.0], [40.7, 81.0], [40.8, 81.0], [40.9, 81.0], [41.0, 82.0], [41.1, 82.0], [41.2, 82.0], [41.3, 82.0], [41.4, 82.0], [41.5, 83.0], [41.6, 83.0], [41.7, 83.0], [41.8, 83.0], [41.9, 83.0], [42.0, 83.0], [42.1, 83.0], [42.2, 83.0], [42.3, 83.0], [42.4, 83.0], [42.5, 84.0], [42.6, 84.0], [42.7, 84.0], [42.8, 84.0], [42.9, 84.0], [43.0, 84.0], [43.1, 84.0], [43.2, 84.0], [43.3, 84.0], [43.4, 84.0], [43.5, 85.0], [43.6, 85.0], [43.7, 85.0], [43.8, 85.0], [43.9, 85.0], [44.0, 86.0], [44.1, 86.0], [44.2, 86.0], [44.3, 86.0], [44.4, 86.0], [44.5, 86.0], [44.6, 86.0], [44.7, 86.0], [44.8, 86.0], [44.9, 86.0], [45.0, 86.0], [45.1, 86.0], [45.2, 86.0], [45.3, 86.0], [45.4, 86.0], [45.5, 86.0], [45.6, 86.0], [45.7, 86.0], [45.8, 86.0], [45.9, 86.0], [46.0, 87.0], [46.1, 87.0], [46.2, 87.0], [46.3, 87.0], [46.4, 87.0], [46.5, 87.0], [46.6, 87.0], [46.7, 87.0], [46.8, 87.0], [46.9, 87.0], [47.0, 87.0], [47.1, 87.0], [47.2, 87.0], [47.3, 87.0], [47.4, 87.0], [47.5, 89.0], [47.6, 89.0], [47.7, 89.0], [47.8, 89.0], [47.9, 89.0], [48.0, 90.0], [48.1, 90.0], [48.2, 90.0], [48.3, 90.0], [48.4, 90.0], [48.5, 93.0], [48.6, 93.0], [48.7, 93.0], [48.8, 93.0], [48.9, 93.0], [49.0, 93.0], [49.1, 93.0], [49.2, 93.0], [49.3, 93.0], [49.4, 93.0], [49.5, 95.0], [49.6, 95.0], [49.7, 95.0], [49.8, 95.0], [49.9, 95.0], [50.0, 95.0], [50.1, 95.0], [50.2, 95.0], [50.3, 95.0], [50.4, 95.0], [50.5, 96.0], [50.6, 96.0], [50.7, 96.0], [50.8, 96.0], [50.9, 96.0], [51.0, 96.0], [51.1, 96.0], [51.2, 96.0], [51.3, 96.0], [51.4, 96.0], [51.5, 98.0], [51.6, 98.0], [51.7, 98.0], [51.8, 98.0], [51.9, 98.0], [52.0, 100.0], [52.1, 100.0], [52.2, 100.0], [52.3, 100.0], [52.4, 100.0], [52.5, 100.0], [52.6, 100.0], [52.7, 100.0], [52.8, 100.0], [52.9, 100.0], [53.0, 100.0], [53.1, 100.0], [53.2, 100.0], [53.3, 100.0], [53.4, 100.0], [53.5, 100.0], [53.6, 100.0], [53.7, 100.0], [53.8, 100.0], [53.9, 100.0], [54.0, 101.0], [54.1, 101.0], [54.2, 101.0], [54.3, 101.0], [54.4, 101.0], [54.5, 101.0], [54.6, 101.0], [54.7, 101.0], [54.8, 101.0], [54.9, 101.0], [55.0, 103.0], [55.1, 103.0], [55.2, 103.0], [55.3, 103.0], [55.4, 103.0], [55.5, 103.0], [55.6, 103.0], [55.7, 103.0], [55.8, 103.0], [55.9, 103.0], [56.0, 104.0], [56.1, 104.0], [56.2, 104.0], [56.3, 104.0], [56.4, 104.0], [56.5, 104.0], [56.6, 104.0], [56.7, 104.0], [56.8, 104.0], [56.9, 104.0], [57.0, 105.0], [57.1, 105.0], [57.2, 105.0], [57.3, 105.0], [57.4, 105.0], [57.5, 106.0], [57.6, 106.0], [57.7, 106.0], [57.8, 106.0], [57.9, 106.0], [58.0, 106.0], [58.1, 106.0], [58.2, 106.0], [58.3, 106.0], [58.4, 106.0], [58.5, 108.0], [58.6, 108.0], [58.7, 108.0], [58.8, 108.0], [58.9, 108.0], [59.0, 109.0], [59.1, 109.0], [59.2, 109.0], [59.3, 109.0], [59.4, 109.0], [59.5, 110.0], [59.6, 110.0], [59.7, 110.0], [59.8, 110.0], [59.9, 110.0], [60.0, 111.0], [60.1, 111.0], [60.2, 111.0], [60.3, 111.0], [60.4, 111.0], [60.5, 111.0], [60.6, 111.0], [60.7, 111.0], [60.8, 111.0], [60.9, 111.0], [61.0, 113.0], [61.1, 113.0], [61.2, 113.0], [61.3, 113.0], [61.4, 113.0], [61.5, 115.0], [61.6, 115.0], [61.7, 115.0], [61.8, 115.0], [61.9, 115.0], [62.0, 117.0], [62.1, 117.0], [62.2, 117.0], [62.3, 117.0], [62.4, 117.0], [62.5, 119.0], [62.6, 119.0], [62.7, 119.0], [62.8, 119.0], [62.9, 119.0], [63.0, 120.0], [63.1, 120.0], [63.2, 120.0], [63.3, 120.0], [63.4, 120.0], [63.5, 123.0], [63.6, 123.0], [63.7, 123.0], [63.8, 123.0], [63.9, 123.0], [64.0, 123.0], [64.1, 123.0], [64.2, 123.0], [64.3, 123.0], [64.4, 123.0], [64.5, 123.0], [64.6, 123.0], [64.7, 123.0], [64.8, 123.0], [64.9, 123.0], [65.0, 125.0], [65.1, 125.0], [65.2, 125.0], [65.3, 125.0], [65.4, 125.0], [65.5, 125.0], [65.6, 125.0], [65.7, 125.0], [65.8, 125.0], [65.9, 125.0], [66.0, 127.0], [66.1, 127.0], [66.2, 127.0], [66.3, 127.0], [66.4, 127.0], [66.5, 128.0], [66.6, 128.0], [66.7, 128.0], [66.8, 128.0], [66.9, 128.0], [67.0, 130.0], [67.1, 130.0], [67.2, 130.0], [67.3, 130.0], [67.4, 130.0], [67.5, 130.0], [67.6, 130.0], [67.7, 130.0], [67.8, 130.0], [67.9, 130.0], [68.0, 131.0], [68.1, 131.0], [68.2, 131.0], [68.3, 131.0], [68.4, 131.0], [68.5, 135.0], [68.6, 135.0], [68.7, 135.0], [68.8, 135.0], [68.9, 135.0], [69.0, 141.0], [69.1, 141.0], [69.2, 141.0], [69.3, 141.0], [69.4, 141.0], [69.5, 141.0], [69.6, 141.0], [69.7, 141.0], [69.8, 141.0], [69.9, 141.0], [70.0, 145.0], [70.1, 145.0], [70.2, 145.0], [70.3, 145.0], [70.4, 145.0], [70.5, 145.0], [70.6, 145.0], [70.7, 145.0], [70.8, 145.0], [70.9, 145.0], [71.0, 145.0], [71.1, 145.0], [71.2, 145.0], [71.3, 145.0], [71.4, 145.0], [71.5, 151.0], [71.6, 151.0], [71.7, 151.0], [71.8, 151.0], [71.9, 151.0], [72.0, 152.0], [72.1, 152.0], [72.2, 152.0], [72.3, 152.0], [72.4, 152.0], [72.5, 157.0], [72.6, 157.0], [72.7, 157.0], [72.8, 157.0], [72.9, 157.0], [73.0, 159.0], [73.1, 159.0], [73.2, 159.0], [73.3, 159.0], [73.4, 159.0], [73.5, 160.0], [73.6, 160.0], [73.7, 160.0], [73.8, 160.0], [73.9, 160.0], [74.0, 161.0], [74.1, 161.0], [74.2, 161.0], [74.3, 161.0], [74.4, 161.0], [74.5, 163.0], [74.6, 163.0], [74.7, 163.0], [74.8, 163.0], [74.9, 163.0], [75.0, 166.0], [75.1, 166.0], [75.2, 166.0], [75.3, 166.0], [75.4, 166.0], [75.5, 168.0], [75.6, 168.0], [75.7, 168.0], [75.8, 168.0], [75.9, 168.0], [76.0, 169.0], [76.1, 169.0], [76.2, 169.0], [76.3, 169.0], [76.4, 169.0], [76.5, 171.0], [76.6, 171.0], [76.7, 171.0], [76.8, 171.0], [76.9, 171.0], [77.0, 172.0], [77.1, 172.0], [77.2, 172.0], [77.3, 172.0], [77.4, 172.0], [77.5, 173.0], [77.6, 173.0], [77.7, 173.0], [77.8, 173.0], [77.9, 173.0], [78.0, 176.0], [78.1, 176.0], [78.2, 176.0], [78.3, 176.0], [78.4, 176.0], [78.5, 180.0], [78.6, 180.0], [78.7, 180.0], [78.8, 180.0], [78.9, 180.0], [79.0, 180.0], [79.1, 180.0], [79.2, 180.0], [79.3, 180.0], [79.4, 180.0], [79.5, 184.0], [79.6, 184.0], [79.7, 184.0], [79.8, 184.0], [79.9, 184.0], [80.0, 185.0], [80.1, 185.0], [80.2, 185.0], [80.3, 185.0], [80.4, 185.0], [80.5, 186.0], [80.6, 186.0], [80.7, 186.0], [80.8, 186.0], [80.9, 186.0], [81.0, 189.0], [81.1, 189.0], [81.2, 189.0], [81.3, 189.0], [81.4, 189.0], [81.5, 189.0], [81.6, 189.0], [81.7, 189.0], [81.8, 189.0], [81.9, 189.0], [82.0, 192.0], [82.1, 192.0], [82.2, 192.0], [82.3, 192.0], [82.4, 192.0], [82.5, 205.0], [82.6, 205.0], [82.7, 205.0], [82.8, 205.0], [82.9, 205.0], [83.0, 207.0], [83.1, 207.0], [83.2, 207.0], [83.3, 207.0], [83.4, 207.0], [83.5, 208.0], [83.6, 208.0], [83.7, 208.0], [83.8, 208.0], [83.9, 208.0], [84.0, 210.0], [84.1, 210.0], [84.2, 210.0], [84.3, 210.0], [84.4, 210.0], [84.5, 216.0], [84.6, 216.0], [84.7, 216.0], [84.8, 216.0], [84.9, 216.0], [85.0, 221.0], [85.1, 221.0], [85.2, 221.0], [85.3, 221.0], [85.4, 221.0], [85.5, 233.0], [85.6, 233.0], [85.7, 233.0], [85.8, 233.0], [85.9, 233.0], [86.0, 235.0], [86.1, 235.0], [86.2, 235.0], [86.3, 235.0], [86.4, 235.0], [86.5, 241.0], [86.6, 241.0], [86.7, 241.0], [86.8, 241.0], [86.9, 241.0], [87.0, 243.0], [87.1, 243.0], [87.2, 243.0], [87.3, 243.0], [87.4, 243.0], [87.5, 246.0], [87.6, 246.0], [87.7, 246.0], [87.8, 246.0], [87.9, 246.0], [88.0, 247.0], [88.1, 247.0], [88.2, 247.0], [88.3, 247.0], [88.4, 247.0], [88.5, 254.0], [88.6, 254.0], [88.7, 254.0], [88.8, 254.0], [88.9, 254.0], [89.0, 257.0], [89.1, 257.0], [89.2, 257.0], [89.3, 257.0], [89.4, 257.0], [89.5, 258.0], [89.6, 258.0], [89.7, 258.0], [89.8, 258.0], [89.9, 258.0], [90.0, 285.0], [90.1, 285.0], [90.2, 285.0], [90.3, 285.0], [90.4, 285.0], [90.5, 290.0], [90.6, 290.0], [90.7, 290.0], [90.8, 290.0], [90.9, 290.0], [91.0, 292.0], [91.1, 292.0], [91.2, 292.0], [91.3, 292.0], [91.4, 292.0], [91.5, 301.0], [91.6, 301.0], [91.7, 301.0], [91.8, 301.0], [91.9, 301.0], [92.0, 315.0], [92.1, 315.0], [92.2, 315.0], [92.3, 315.0], [92.4, 315.0], [92.5, 345.0], [92.6, 345.0], [92.7, 345.0], [92.8, 345.0], [92.9, 345.0], [93.0, 350.0], [93.1, 350.0], [93.2, 350.0], [93.3, 350.0], [93.4, 350.0], [93.5, 406.0], [93.6, 406.0], [93.7, 406.0], [93.8, 406.0], [93.9, 406.0], [94.0, 419.0], [94.1, 419.0], [94.2, 419.0], [94.3, 419.0], [94.4, 419.0], [94.5, 460.0], [94.6, 460.0], [94.7, 460.0], [94.8, 460.0], [94.9, 460.0], [95.0, 518.0], [95.1, 518.0], [95.2, 518.0], [95.3, 518.0], [95.4, 518.0], [95.5, 521.0], [95.6, 521.0], [95.7, 521.0], [95.8, 521.0], [95.9, 521.0], [96.0, 527.0], [96.1, 527.0], [96.2, 527.0], [96.3, 527.0], [96.4, 527.0], [96.5, 595.0], [96.6, 595.0], [96.7, 595.0], [96.8, 595.0], [96.9, 595.0], [97.0, 641.0], [97.1, 641.0], [97.2, 641.0], [97.3, 641.0], [97.4, 641.0], [97.5, 871.0], [97.6, 871.0], [97.7, 871.0], [97.8, 871.0], [97.9, 871.0], [98.0, 894.0], [98.1, 894.0], [98.2, 894.0], [98.3, 894.0], [98.4, 894.0], [98.5, 909.0], [98.6, 909.0], [98.7, 909.0], [98.8, 909.0], [98.9, 909.0], [99.0, 2295.0], [99.1, 2295.0], [99.2, 2295.0], [99.3, 2295.0], [99.4, 2295.0], [99.5, 2308.0], [99.6, 2308.0], [99.7, 2308.0], [99.8, 2308.0], [99.9, 2308.0]], "isOverall": false, "label": "2", "isController": false}, {"data": [[0.0, 28.0], [0.1, 28.0], [0.2, 28.0], [0.3, 28.0], [0.4, 28.0], [0.5, 31.0], [0.6, 31.0], [0.7, 31.0], [0.8, 31.0], [0.9, 31.0], [1.0, 33.0], [1.1, 33.0], [1.2, 33.0], [1.3, 34.0], [1.4, 34.0], [1.5, 34.0], [1.6, 34.0], [1.7, 34.0], [1.8, 34.0], [1.9, 34.0], [2.0, 35.0], [2.1, 35.0], [2.2, 35.0], [2.3, 36.0], [2.4, 36.0], [2.5, 36.0], [2.6, 36.0], [2.7, 36.0], [2.8, 36.0], [2.9, 36.0], [3.0, 37.0], [3.1, 37.0], [3.2, 37.0], [3.3, 37.0], [3.4, 37.0], [3.5, 37.0], [3.6, 37.0], [3.7, 37.0], [3.8, 37.0], [3.9, 37.0], [4.0, 37.0], [4.1, 37.0], [4.2, 37.0], [4.3, 38.0], [4.4, 38.0], [4.5, 38.0], [4.6, 38.0], [4.7, 38.0], [4.8, 38.0], [4.9, 38.0], [5.0, 38.0], [5.1, 38.0], [5.2, 38.0], [5.3, 38.0], [5.4, 38.0], [5.5, 39.0], [5.6, 39.0], [5.7, 39.0], [5.8, 40.0], [5.9, 40.0], [6.0, 40.0], [6.1, 40.0], [6.2, 40.0], [6.3, 40.0], [6.4, 40.0], [6.5, 40.0], [6.6, 40.0], [6.7, 40.0], [6.8, 42.0], [6.9, 42.0], [7.0, 42.0], [7.1, 42.0], [7.2, 42.0], [7.3, 43.0], [7.4, 43.0], [7.5, 43.0], [7.6, 43.0], [7.7, 43.0], [7.8, 43.0], [7.9, 43.0], [8.0, 44.0], [8.1, 44.0], [8.2, 44.0], [8.3, 44.0], [8.4, 44.0], [8.5, 44.0], [8.6, 44.0], [8.7, 44.0], [8.8, 45.0], [8.9, 45.0], [9.0, 46.0], [9.1, 46.0], [9.2, 46.0], [9.3, 46.0], [9.4, 46.0], [9.5, 46.0], [9.6, 46.0], [9.7, 46.0], [9.8, 47.0], [9.9, 47.0], [10.0, 47.0], [10.1, 47.0], [10.2, 47.0], [10.3, 48.0], [10.4, 48.0], [10.5, 48.0], [10.6, 48.0], [10.7, 48.0], [10.8, 48.0], [10.9, 48.0], [11.0, 48.0], [11.1, 48.0], [11.2, 48.0], [11.3, 49.0], [11.4, 49.0], [11.5, 49.0], [11.6, 49.0], [11.7, 49.0], [11.8, 49.0], [11.9, 49.0], [12.0, 49.0], [12.1, 49.0], [12.2, 49.0], [12.3, 50.0], [12.4, 50.0], [12.5, 50.0], [12.6, 50.0], [12.7, 50.0], [12.8, 50.0], [12.9, 50.0], [13.0, 51.0], [13.1, 51.0], [13.2, 51.0], [13.3, 51.0], [13.4, 51.0], [13.5, 51.0], [13.6, 51.0], [13.7, 51.0], [13.8, 52.0], [13.9, 52.0], [14.0, 53.0], [14.1, 53.0], [14.2, 53.0], [14.3, 53.0], [14.4, 53.0], [14.5, 53.0], [14.6, 53.0], [14.7, 53.0], [14.8, 53.0], [14.9, 53.0], [15.0, 54.0], [15.1, 54.0], [15.2, 54.0], [15.3, 54.0], [15.4, 54.0], [15.5, 54.0], [15.6, 54.0], [15.7, 54.0], [15.8, 54.0], [15.9, 54.0], [16.0, 56.0], [16.1, 56.0], [16.2, 56.0], [16.3, 56.0], [16.4, 56.0], [16.5, 57.0], [16.6, 57.0], [16.7, 57.0], [16.8, 57.0], [16.9, 57.0], [17.0, 58.0], [17.1, 58.0], [17.2, 58.0], [17.3, 58.0], [17.4, 58.0], [17.5, 58.0], [17.6, 58.0], [17.7, 58.0], [17.8, 58.0], [17.9, 58.0], [18.0, 59.0], [18.1, 59.0], [18.2, 59.0], [18.3, 59.0], [18.4, 59.0], [18.5, 60.0], [18.6, 60.0], [18.7, 60.0], [18.8, 60.0], [18.9, 60.0], [19.0, 60.0], [19.1, 60.0], [19.2, 60.0], [19.3, 60.0], [19.4, 60.0], [19.5, 62.0], [19.6, 62.0], [19.7, 62.0], [19.8, 63.0], [19.9, 63.0], [20.0, 63.0], [20.1, 63.0], [20.2, 63.0], [20.3, 64.0], [20.4, 64.0], [20.5, 64.0], [20.6, 64.0], [20.7, 64.0], [20.8, 65.0], [20.9, 65.0], [21.0, 65.0], [21.1, 65.0], [21.2, 65.0], [21.3, 65.0], [21.4, 65.0], [21.5, 65.0], [21.6, 65.0], [21.7, 65.0], [21.8, 65.0], [21.9, 65.0], [22.0, 65.0], [22.1, 65.0], [22.2, 65.0], [22.3, 66.0], [22.4, 66.0], [22.5, 66.0], [22.6, 66.0], [22.7, 66.0], [22.8, 66.0], [22.9, 66.0], [23.0, 67.0], [23.1, 67.0], [23.2, 67.0], [23.3, 67.0], [23.4, 67.0], [23.5, 67.0], [23.6, 67.0], [23.7, 67.0], [23.8, 67.0], [23.9, 67.0], [24.0, 68.0], [24.1, 68.0], [24.2, 68.0], [24.3, 68.0], [24.4, 68.0], [24.5, 68.0], [24.6, 68.0], [24.7, 68.0], [24.8, 68.0], [24.9, 68.0], [25.0, 68.0], [25.1, 68.0], [25.2, 68.0], [25.3, 69.0], [25.4, 69.0], [25.5, 70.0], [25.6, 70.0], [25.7, 70.0], [25.8, 70.0], [25.9, 70.0], [26.0, 70.0], [26.1, 70.0], [26.2, 70.0], [26.3, 70.0], [26.4, 70.0], [26.5, 71.0], [26.6, 71.0], [26.7, 71.0], [26.8, 71.0], [26.9, 71.0], [27.0, 71.0], [27.1, 71.0], [27.2, 71.0], [27.3, 72.0], [27.4, 72.0], [27.5, 73.0], [27.6, 73.0], [27.7, 73.0], [27.8, 74.0], [27.9, 74.0], [28.0, 74.0], [28.1, 74.0], [28.2, 74.0], [28.3, 75.0], [28.4, 75.0], [28.5, 75.0], [28.6, 75.0], [28.7, 75.0], [28.8, 75.0], [28.9, 75.0], [29.0, 76.0], [29.1, 76.0], [29.2, 76.0], [29.3, 76.0], [29.4, 76.0], [29.5, 76.0], [29.6, 76.0], [29.7, 76.0], [29.8, 76.0], [29.9, 76.0], [30.0, 77.0], [30.1, 77.0], [30.2, 77.0], [30.3, 78.0], [30.4, 78.0], [30.5, 78.0], [30.6, 78.0], [30.7, 78.0], [30.8, 78.0], [30.9, 78.0], [31.0, 78.0], [31.1, 78.0], [31.2, 78.0], [31.3, 78.0], [31.4, 78.0], [31.5, 78.0], [31.6, 78.0], [31.7, 78.0], [31.8, 79.0], [31.9, 79.0], [32.0, 79.0], [32.1, 79.0], [32.2, 79.0], [32.3, 81.0], [32.4, 81.0], [32.5, 81.0], [32.6, 81.0], [32.7, 81.0], [32.8, 81.0], [32.9, 81.0], [33.0, 81.0], [33.1, 81.0], [33.2, 81.0], [33.3, 82.0], [33.4, 82.0], [33.5, 83.0], [33.6, 83.0], [33.7, 83.0], [33.8, 83.0], [33.9, 83.0], [34.0, 83.0], [34.1, 83.0], [34.2, 83.0], [34.3, 83.0], [34.4, 83.0], [34.5, 83.0], [34.6, 83.0], [34.7, 83.0], [34.8, 84.0], [34.9, 84.0], [35.0, 84.0], [35.1, 84.0], [35.2, 84.0], [35.3, 84.0], [35.4, 84.0], [35.5, 85.0], [35.6, 85.0], [35.7, 85.0], [35.8, 87.0], [35.9, 87.0], [36.0, 87.0], [36.1, 87.0], [36.2, 87.0], [36.3, 88.0], [36.4, 88.0], [36.5, 88.0], [36.6, 88.0], [36.7, 88.0], [36.8, 88.0], [36.9, 88.0], [37.0, 88.0], [37.1, 88.0], [37.2, 88.0], [37.3, 89.0], [37.4, 89.0], [37.5, 91.0], [37.6, 91.0], [37.7, 91.0], [37.8, 91.0], [37.9, 91.0], [38.0, 91.0], [38.1, 91.0], [38.2, 91.0], [38.3, 92.0], [38.4, 92.0], [38.5, 92.0], [38.6, 92.0], [38.7, 92.0], [38.8, 92.0], [38.9, 92.0], [39.0, 93.0], [39.1, 93.0], [39.2, 93.0], [39.3, 94.0], [39.4, 94.0], [39.5, 94.0], [39.6, 94.0], [39.7, 94.0], [39.8, 95.0], [39.9, 95.0], [40.0, 95.0], [40.1, 95.0], [40.2, 95.0], [40.3, 96.0], [40.4, 96.0], [40.5, 96.0], [40.6, 96.0], [40.7, 96.0], [40.8, 97.0], [40.9, 97.0], [41.0, 98.0], [41.1, 98.0], [41.2, 98.0], [41.3, 98.0], [41.4, 98.0], [41.5, 98.0], [41.6, 98.0], [41.7, 98.0], [41.8, 99.0], [41.9, 99.0], [42.0, 99.0], [42.1, 99.0], [42.2, 99.0], [42.3, 100.0], [42.4, 100.0], [42.5, 100.0], [42.6, 100.0], [42.7, 100.0], [42.8, 101.0], [42.9, 101.0], [43.0, 101.0], [43.1, 101.0], [43.2, 101.0], [43.3, 102.0], [43.4, 102.0], [43.5, 102.0], [43.6, 102.0], [43.7, 102.0], [43.8, 102.0], [43.9, 102.0], [44.0, 103.0], [44.1, 103.0], [44.2, 103.0], [44.3, 103.0], [44.4, 103.0], [44.5, 103.0], [44.6, 103.0], [44.7, 103.0], [44.8, 103.0], [44.9, 103.0], [45.0, 105.0], [45.1, 105.0], [45.2, 105.0], [45.3, 105.0], [45.4, 105.0], [45.5, 105.0], [45.6, 105.0], [45.7, 105.0], [45.8, 105.0], [45.9, 105.0], [46.0, 106.0], [46.1, 106.0], [46.2, 106.0], [46.3, 107.0], [46.4, 107.0], [46.5, 107.0], [46.6, 107.0], [46.7, 107.0], [46.8, 107.0], [46.9, 107.0], [47.0, 108.0], [47.1, 108.0], [47.2, 108.0], [47.3, 108.0], [47.4, 108.0], [47.5, 108.0], [47.6, 108.0], [47.7, 108.0], [47.8, 108.0], [47.9, 108.0], [48.0, 108.0], [48.1, 108.0], [48.2, 108.0], [48.3, 109.0], [48.4, 109.0], [48.5, 109.0], [48.6, 109.0], [48.7, 109.0], [48.8, 109.0], [48.9, 109.0], [49.0, 110.0], [49.1, 110.0], [49.2, 110.0], [49.3, 110.0], [49.4, 110.0], [49.5, 110.0], [49.6, 110.0], [49.7, 110.0], [49.8, 112.0], [49.9, 112.0], [50.0, 112.0], [50.1, 112.0], [50.2, 112.0], [50.3, 112.0], [50.4, 112.0], [50.5, 112.0], [50.6, 112.0], [50.7, 112.0], [50.8, 113.0], [50.9, 113.0], [51.0, 116.0], [51.1, 116.0], [51.2, 116.0], [51.3, 116.0], [51.4, 116.0], [51.5, 117.0], [51.6, 117.0], [51.7, 117.0], [51.8, 117.0], [51.9, 117.0], [52.0, 117.0], [52.1, 117.0], [52.2, 117.0], [52.3, 118.0], [52.4, 118.0], [52.5, 118.0], [52.6, 118.0], [52.7, 118.0], [52.8, 118.0], [52.9, 118.0], [53.0, 119.0], [53.1, 119.0], [53.2, 119.0], [53.3, 119.0], [53.4, 119.0], [53.5, 119.0], [53.6, 119.0], [53.7, 119.0], [53.8, 120.0], [53.9, 120.0], [54.0, 120.0], [54.1, 120.0], [54.2, 120.0], [54.3, 121.0], [54.4, 121.0], [54.5, 122.0], [54.6, 122.0], [54.7, 122.0], [54.8, 122.0], [54.9, 122.0], [55.0, 122.0], [55.1, 122.0], [55.2, 122.0], [55.3, 122.0], [55.4, 122.0], [55.5, 122.0], [55.6, 122.0], [55.7, 122.0], [55.8, 124.0], [55.9, 124.0], [56.0, 124.0], [56.1, 124.0], [56.2, 124.0], [56.3, 125.0], [56.4, 125.0], [56.5, 125.0], [56.6, 125.0], [56.7, 125.0], [56.8, 126.0], [56.9, 126.0], [57.0, 127.0], [57.1, 127.0], [57.2, 127.0], [57.3, 127.0], [57.4, 127.0], [57.5, 128.0], [57.6, 128.0], [57.7, 128.0], [57.8, 128.0], [57.9, 128.0], [58.0, 128.0], [58.1, 128.0], [58.2, 128.0], [58.3, 128.0], [58.4, 128.0], [58.5, 129.0], [58.6, 129.0], [58.7, 129.0], [58.8, 129.0], [58.9, 129.0], [59.0, 131.0], [59.1, 131.0], [59.2, 131.0], [59.3, 131.0], [59.4, 131.0], [59.5, 132.0], [59.6, 132.0], [59.7, 132.0], [59.8, 133.0], [59.9, 133.0], [60.0, 134.0], [60.1, 134.0], [60.2, 134.0], [60.3, 135.0], [60.4, 135.0], [60.5, 137.0], [60.6, 137.0], [60.7, 137.0], [60.8, 137.0], [60.9, 137.0], [61.0, 138.0], [61.1, 138.0], [61.2, 138.0], [61.3, 138.0], [61.4, 138.0], [61.5, 139.0], [61.6, 139.0], [61.7, 139.0], [61.8, 139.0], [61.9, 139.0], [62.0, 139.0], [62.1, 139.0], [62.2, 139.0], [62.3, 140.0], [62.4, 140.0], [62.5, 140.0], [62.6, 140.0], [62.7, 140.0], [62.8, 140.0], [62.9, 140.0], [63.0, 142.0], [63.1, 142.0], [63.2, 142.0], [63.3, 145.0], [63.4, 145.0], [63.5, 145.0], [63.6, 145.0], [63.7, 145.0], [63.8, 146.0], [63.9, 146.0], [64.0, 146.0], [64.1, 146.0], [64.2, 146.0], [64.3, 146.0], [64.4, 146.0], [64.5, 146.0], [64.6, 146.0], [64.7, 146.0], [64.8, 149.0], [64.9, 149.0], [65.0, 149.0], [65.1, 149.0], [65.2, 149.0], [65.3, 149.0], [65.4, 149.0], [65.5, 151.0], [65.6, 151.0], [65.7, 151.0], [65.8, 153.0], [65.9, 153.0], [66.0, 155.0], [66.1, 155.0], [66.2, 155.0], [66.3, 156.0], [66.4, 156.0], [66.5, 156.0], [66.6, 156.0], [66.7, 156.0], [66.8, 158.0], [66.9, 158.0], [67.0, 160.0], [67.1, 160.0], [67.2, 160.0], [67.3, 160.0], [67.4, 160.0], [67.5, 161.0], [67.6, 161.0], [67.7, 161.0], [67.8, 165.0], [67.9, 165.0], [68.0, 166.0], [68.1, 166.0], [68.2, 166.0], [68.3, 166.0], [68.4, 166.0], [68.5, 168.0], [68.6, 168.0], [68.7, 168.0], [68.8, 171.0], [68.9, 171.0], [69.0, 173.0], [69.1, 173.0], [69.2, 173.0], [69.3, 174.0], [69.4, 174.0], [69.5, 175.0], [69.6, 175.0], [69.7, 175.0], [69.8, 178.0], [69.9, 178.0], [70.0, 179.0], [70.1, 179.0], [70.2, 179.0], [70.3, 179.0], [70.4, 179.0], [70.5, 179.0], [70.6, 179.0], [70.7, 179.0], [70.8, 180.0], [70.9, 180.0], [71.0, 181.0], [71.1, 181.0], [71.2, 181.0], [71.3, 181.0], [71.4, 181.0], [71.5, 182.0], [71.6, 182.0], [71.7, 182.0], [71.8, 182.0], [71.9, 182.0], [72.0, 184.0], [72.1, 184.0], [72.2, 184.0], [72.3, 187.0], [72.4, 187.0], [72.5, 189.0], [72.6, 189.0], [72.7, 189.0], [72.8, 189.0], [72.9, 189.0], [73.0, 189.0], [73.1, 189.0], [73.2, 189.0], [73.3, 190.0], [73.4, 190.0], [73.5, 191.0], [73.6, 191.0], [73.7, 191.0], [73.8, 193.0], [73.9, 193.0], [74.0, 197.0], [74.1, 197.0], [74.2, 197.0], [74.3, 200.0], [74.4, 200.0], [74.5, 205.0], [74.6, 205.0], [74.7, 205.0], [74.8, 207.0], [74.9, 207.0], [75.0, 208.0], [75.1, 208.0], [75.2, 208.0], [75.3, 210.0], [75.4, 210.0], [75.5, 213.0], [75.6, 213.0], [75.7, 213.0], [75.8, 214.0], [75.9, 214.0], [76.0, 215.0], [76.1, 215.0], [76.2, 215.0], [76.3, 219.0], [76.4, 219.0], [76.5, 221.0], [76.6, 221.0], [76.7, 221.0], [76.8, 221.0], [76.9, 221.0], [77.0, 224.0], [77.1, 224.0], [77.2, 224.0], [77.3, 229.0], [77.4, 229.0], [77.5, 230.0], [77.6, 230.0], [77.7, 230.0], [77.8, 234.0], [77.9, 234.0], [78.0, 235.0], [78.1, 235.0], [78.2, 235.0], [78.3, 237.0], [78.4, 237.0], [78.5, 238.0], [78.6, 238.0], [78.7, 238.0], [78.8, 252.0], [78.9, 252.0], [79.0, 254.0], [79.1, 254.0], [79.2, 254.0], [79.3, 254.0], [79.4, 254.0], [79.5, 255.0], [79.6, 255.0], [79.7, 255.0], [79.8, 258.0], [79.9, 258.0], [80.0, 259.0], [80.1, 259.0], [80.2, 259.0], [80.3, 259.0], [80.4, 259.0], [80.5, 261.0], [80.6, 261.0], [80.7, 261.0], [80.8, 261.0], [80.9, 261.0], [81.0, 264.0], [81.1, 264.0], [81.2, 264.0], [81.3, 266.0], [81.4, 266.0], [81.5, 266.0], [81.6, 266.0], [81.7, 266.0], [81.8, 271.0], [81.9, 271.0], [82.0, 272.0], [82.1, 272.0], [82.2, 272.0], [82.3, 279.0], [82.4, 279.0], [82.5, 280.0], [82.6, 280.0], [82.7, 280.0], [82.8, 280.0], [82.9, 280.0], [83.0, 280.0], [83.1, 280.0], [83.2, 280.0], [83.3, 286.0], [83.4, 286.0], [83.5, 289.0], [83.6, 289.0], [83.7, 289.0], [83.8, 290.0], [83.9, 290.0], [84.0, 294.0], [84.1, 294.0], [84.2, 294.0], [84.3, 309.0], [84.4, 309.0], [84.5, 310.0], [84.6, 310.0], [84.7, 310.0], [84.8, 314.0], [84.9, 314.0], [85.0, 319.0], [85.1, 319.0], [85.2, 319.0], [85.3, 326.0], [85.4, 326.0], [85.5, 328.0], [85.6, 328.0], [85.7, 328.0], [85.8, 333.0], [85.9, 333.0], [86.0, 342.0], [86.1, 342.0], [86.2, 342.0], [86.3, 342.0], [86.4, 342.0], [86.5, 346.0], [86.6, 346.0], [86.7, 346.0], [86.8, 348.0], [86.9, 348.0], [87.0, 349.0], [87.1, 349.0], [87.2, 349.0], [87.3, 352.0], [87.4, 352.0], [87.5, 353.0], [87.6, 353.0], [87.7, 353.0], [87.8, 357.0], [87.9, 357.0], [88.0, 364.0], [88.1, 364.0], [88.2, 364.0], [88.3, 377.0], [88.4, 377.0], [88.5, 381.0], [88.6, 381.0], [88.7, 381.0], [88.8, 398.0], [88.9, 398.0], [89.0, 400.0], [89.1, 400.0], [89.2, 400.0], [89.3, 404.0], [89.4, 404.0], [89.5, 416.0], [89.6, 416.0], [89.7, 416.0], [89.8, 427.0], [89.9, 427.0], [90.0, 447.0], [90.1, 447.0], [90.2, 447.0], [90.3, 450.0], [90.4, 450.0], [90.5, 450.0], [90.6, 450.0], [90.7, 450.0], [90.8, 451.0], [90.9, 451.0], [91.0, 454.0], [91.1, 454.0], [91.2, 454.0], [91.3, 478.0], [91.4, 478.0], [91.5, 497.0], [91.6, 497.0], [91.7, 497.0], [91.8, 502.0], [91.9, 502.0], [92.0, 509.0], [92.1, 509.0], [92.2, 509.0], [92.3, 528.0], [92.4, 528.0], [92.5, 537.0], [92.6, 537.0], [92.7, 537.0], [92.8, 541.0], [92.9, 541.0], [93.0, 541.0], [93.1, 541.0], [93.2, 541.0], [93.3, 542.0], [93.4, 542.0], [93.5, 560.0], [93.6, 560.0], [93.7, 560.0], [93.8, 568.0], [93.9, 568.0], [94.0, 639.0], [94.1, 639.0], [94.2, 639.0], [94.3, 640.0], [94.4, 640.0], [94.5, 660.0], [94.6, 660.0], [94.7, 660.0], [94.8, 700.0], [94.9, 700.0], [95.0, 726.0], [95.1, 726.0], [95.2, 726.0], [95.3, 774.0], [95.4, 774.0], [95.5, 781.0], [95.6, 781.0], [95.7, 781.0], [95.8, 867.0], [95.9, 867.0], [96.0, 868.0], [96.1, 868.0], [96.2, 868.0], [96.3, 874.0], [96.4, 874.0], [96.5, 903.0], [96.6, 903.0], [96.7, 903.0], [96.8, 915.0], [96.9, 915.0], [97.0, 957.0], [97.1, 957.0], [97.2, 957.0], [97.3, 968.0], [97.4, 968.0], [97.5, 1000.0], [97.6, 1000.0], [97.7, 1000.0], [97.8, 1082.0], [97.9, 1082.0], [98.0, 1104.0], [98.1, 1104.0], [98.2, 1104.0], [98.3, 1234.0], [98.4, 1234.0], [98.5, 1339.0], [98.6, 1339.0], [98.7, 1339.0], [98.8, 2401.0], [98.9, 2401.0], [99.0, 2461.0], [99.1, 2461.0], [99.2, 2461.0], [99.3, 2548.0], [99.4, 2548.0], [99.5, 2621.0], [99.6, 2621.0], [99.7, 2621.0], [99.8, 2783.0], [99.9, 2783.0]], "isOverall": false, "label": "4", "isController": false}, {"data": [[0.0, 34.0], [0.1, 35.0], [0.2, 36.0], [0.3, 37.0], [0.4, 39.0], [0.5, 43.0], [0.6, 43.0], [0.7, 44.0], [0.8, 45.0], [0.9, 45.0], [1.0, 47.0], [1.1, 48.0], [1.2, 49.0], [1.3, 49.0], [1.4, 52.0], [1.5, 54.0], [1.6, 55.0], [1.7, 57.0], [1.8, 58.0], [1.9, 60.0], [2.0, 60.0], [2.1, 62.0], [2.2, 65.0], [2.3, 65.0], [2.4, 66.0], [2.5, 67.0], [2.6, 67.0], [2.7, 70.0], [2.8, 71.0], [2.9, 72.0], [3.0, 74.0], [3.1, 75.0], [3.2, 75.0], [3.3, 75.0], [3.4, 77.0], [3.5, 78.0], [3.6, 79.0], [3.7, 79.0], [3.8, 79.0], [3.9, 80.0], [4.0, 80.0], [4.1, 80.0], [4.2, 81.0], [4.3, 82.0], [4.4, 82.0], [4.5, 83.0], [4.6, 83.0], [4.7, 83.0], [4.8, 84.0], [4.9, 84.0], [5.0, 84.0], [5.1, 84.0], [5.2, 85.0], [5.3, 85.0], [5.4, 86.0], [5.5, 86.0], [5.6, 86.0], [5.7, 87.0], [5.8, 87.0], [5.9, 89.0], [6.0, 90.0], [6.1, 90.0], [6.2, 91.0], [6.3, 91.0], [6.4, 92.0], [6.5, 92.0], [6.6, 92.0], [6.7, 93.0], [6.8, 93.0], [6.9, 94.0], [7.0, 95.0], [7.1, 95.0], [7.2, 96.0], [7.3, 97.0], [7.4, 97.0], [7.5, 97.0], [7.6, 97.0], [7.7, 100.0], [7.8, 101.0], [7.9, 102.0], [8.0, 102.0], [8.1, 102.0], [8.2, 104.0], [8.3, 104.0], [8.4, 104.0], [8.5, 105.0], [8.6, 105.0], [8.7, 105.0], [8.8, 106.0], [8.9, 106.0], [9.0, 107.0], [9.1, 107.0], [9.2, 107.0], [9.3, 107.0], [9.4, 108.0], [9.5, 108.0], [9.6, 108.0], [9.7, 109.0], [9.8, 109.0], [9.9, 110.0], [10.0, 111.0], [10.1, 111.0], [10.2, 112.0], [10.3, 112.0], [10.4, 113.0], [10.5, 113.0], [10.6, 113.0], [10.7, 114.0], [10.8, 115.0], [10.9, 116.0], [11.0, 117.0], [11.1, 117.0], [11.2, 117.0], [11.3, 118.0], [11.4, 118.0], [11.5, 118.0], [11.6, 118.0], [11.7, 118.0], [11.8, 118.0], [11.9, 120.0], [12.0, 120.0], [12.1, 120.0], [12.2, 120.0], [12.3, 120.0], [12.4, 121.0], [12.5, 122.0], [12.6, 123.0], [12.7, 123.0], [12.8, 123.0], [12.9, 124.0], [13.0, 124.0], [13.1, 125.0], [13.2, 126.0], [13.3, 126.0], [13.4, 128.0], [13.5, 128.0], [13.6, 128.0], [13.7, 129.0], [13.8, 130.0], [13.9, 130.0], [14.0, 131.0], [14.1, 131.0], [14.2, 132.0], [14.3, 132.0], [14.4, 133.0], [14.5, 133.0], [14.6, 133.0], [14.7, 134.0], [14.8, 135.0], [14.9, 135.0], [15.0, 136.0], [15.1, 136.0], [15.2, 138.0], [15.3, 138.0], [15.4, 138.0], [15.5, 139.0], [15.6, 139.0], [15.7, 140.0], [15.8, 140.0], [15.9, 140.0], [16.0, 141.0], [16.1, 141.0], [16.2, 141.0], [16.3, 141.0], [16.4, 142.0], [16.5, 142.0], [16.6, 142.0], [16.7, 142.0], [16.8, 142.0], [16.9, 143.0], [17.0, 143.0], [17.1, 144.0], [17.2, 144.0], [17.3, 146.0], [17.4, 147.0], [17.5, 147.0], [17.6, 148.0], [17.7, 148.0], [17.8, 148.0], [17.9, 149.0], [18.0, 150.0], [18.1, 150.0], [18.2, 152.0], [18.3, 154.0], [18.4, 154.0], [18.5, 155.0], [18.6, 155.0], [18.7, 157.0], [18.8, 157.0], [18.9, 158.0], [19.0, 158.0], [19.1, 159.0], [19.2, 159.0], [19.3, 160.0], [19.4, 160.0], [19.5, 162.0], [19.6, 162.0], [19.7, 162.0], [19.8, 162.0], [19.9, 162.0], [20.0, 163.0], [20.1, 163.0], [20.2, 164.0], [20.3, 164.0], [20.4, 164.0], [20.5, 166.0], [20.6, 166.0], [20.7, 167.0], [20.8, 167.0], [20.9, 167.0], [21.0, 169.0], [21.1, 169.0], [21.2, 170.0], [21.3, 171.0], [21.4, 172.0], [21.5, 173.0], [21.6, 173.0], [21.7, 174.0], [21.8, 174.0], [21.9, 174.0], [22.0, 176.0], [22.1, 176.0], [22.2, 179.0], [22.3, 179.0], [22.4, 180.0], [22.5, 181.0], [22.6, 181.0], [22.7, 181.0], [22.8, 182.0], [22.9, 183.0], [23.0, 184.0], [23.1, 185.0], [23.2, 187.0], [23.3, 187.0], [23.4, 188.0], [23.5, 188.0], [23.6, 190.0], [23.7, 190.0], [23.8, 192.0], [23.9, 193.0], [24.0, 195.0], [24.1, 195.0], [24.2, 196.0], [24.3, 196.0], [24.4, 197.0], [24.5, 198.0], [24.6, 198.0], [24.7, 199.0], [24.8, 200.0], [24.9, 201.0], [25.0, 201.0], [25.1, 202.0], [25.2, 203.0], [25.3, 204.0], [25.4, 204.0], [25.5, 205.0], [25.6, 206.0], [25.7, 207.0], [25.8, 207.0], [25.9, 207.0], [26.0, 208.0], [26.1, 208.0], [26.2, 209.0], [26.3, 210.0], [26.4, 210.0], [26.5, 212.0], [26.6, 212.0], [26.7, 213.0], [26.8, 214.0], [26.9, 214.0], [27.0, 215.0], [27.1, 215.0], [27.2, 215.0], [27.3, 215.0], [27.4, 217.0], [27.5, 217.0], [27.6, 217.0], [27.7, 218.0], [27.8, 219.0], [27.9, 219.0], [28.0, 219.0], [28.1, 219.0], [28.2, 220.0], [28.3, 221.0], [28.4, 221.0], [28.5, 222.0], [28.6, 222.0], [28.7, 223.0], [28.8, 224.0], [28.9, 224.0], [29.0, 226.0], [29.1, 227.0], [29.2, 228.0], [29.3, 228.0], [29.4, 229.0], [29.5, 230.0], [29.6, 230.0], [29.7, 230.0], [29.8, 230.0], [29.9, 231.0], [30.0, 231.0], [30.1, 231.0], [30.2, 232.0], [30.3, 232.0], [30.4, 233.0], [30.5, 235.0], [30.6, 235.0], [30.7, 235.0], [30.8, 235.0], [30.9, 236.0], [31.0, 237.0], [31.1, 237.0], [31.2, 237.0], [31.3, 238.0], [31.4, 240.0], [31.5, 241.0], [31.6, 241.0], [31.7, 241.0], [31.8, 241.0], [31.9, 244.0], [32.0, 244.0], [32.1, 244.0], [32.2, 246.0], [32.3, 247.0], [32.4, 248.0], [32.5, 251.0], [32.6, 251.0], [32.7, 251.0], [32.8, 252.0], [32.9, 252.0], [33.0, 254.0], [33.1, 254.0], [33.2, 255.0], [33.3, 255.0], [33.4, 255.0], [33.5, 256.0], [33.6, 256.0], [33.7, 256.0], [33.8, 257.0], [33.9, 258.0], [34.0, 259.0], [34.1, 260.0], [34.2, 262.0], [34.3, 262.0], [34.4, 264.0], [34.5, 266.0], [34.6, 268.0], [34.7, 268.0], [34.8, 269.0], [34.9, 269.0], [35.0, 271.0], [35.1, 271.0], [35.2, 272.0], [35.3, 272.0], [35.4, 273.0], [35.5, 273.0], [35.6, 274.0], [35.7, 275.0], [35.8, 275.0], [35.9, 276.0], [36.0, 277.0], [36.1, 277.0], [36.2, 277.0], [36.3, 277.0], [36.4, 278.0], [36.5, 278.0], [36.6, 278.0], [36.7, 279.0], [36.8, 279.0], [36.9, 280.0], [37.0, 280.0], [37.1, 280.0], [37.2, 281.0], [37.3, 281.0], [37.4, 282.0], [37.5, 283.0], [37.6, 284.0], [37.7, 285.0], [37.8, 285.0], [37.9, 285.0], [38.0, 286.0], [38.1, 286.0], [38.2, 287.0], [38.3, 288.0], [38.4, 290.0], [38.5, 291.0], [38.6, 291.0], [38.7, 291.0], [38.8, 292.0], [38.9, 293.0], [39.0, 294.0], [39.1, 295.0], [39.2, 295.0], [39.3, 296.0], [39.4, 296.0], [39.5, 298.0], [39.6, 300.0], [39.7, 300.0], [39.8, 301.0], [39.9, 301.0], [40.0, 302.0], [40.1, 302.0], [40.2, 302.0], [40.3, 302.0], [40.4, 303.0], [40.5, 306.0], [40.6, 308.0], [40.7, 308.0], [40.8, 309.0], [40.9, 312.0], [41.0, 313.0], [41.1, 313.0], [41.2, 315.0], [41.3, 315.0], [41.4, 316.0], [41.5, 318.0], [41.6, 319.0], [41.7, 320.0], [41.8, 321.0], [41.9, 322.0], [42.0, 323.0], [42.1, 323.0], [42.2, 325.0], [42.3, 325.0], [42.4, 326.0], [42.5, 328.0], [42.6, 331.0], [42.7, 331.0], [42.8, 331.0], [42.9, 332.0], [43.0, 333.0], [43.1, 333.0], [43.2, 335.0], [43.3, 335.0], [43.4, 335.0], [43.5, 336.0], [43.6, 337.0], [43.7, 337.0], [43.8, 338.0], [43.9, 338.0], [44.0, 338.0], [44.1, 340.0], [44.2, 340.0], [44.3, 341.0], [44.4, 343.0], [44.5, 344.0], [44.6, 345.0], [44.7, 345.0], [44.8, 346.0], [44.9, 347.0], [45.0, 347.0], [45.1, 348.0], [45.2, 348.0], [45.3, 349.0], [45.4, 349.0], [45.5, 350.0], [45.6, 350.0], [45.7, 351.0], [45.8, 352.0], [45.9, 352.0], [46.0, 353.0], [46.1, 354.0], [46.2, 354.0], [46.3, 355.0], [46.4, 355.0], [46.5, 356.0], [46.6, 356.0], [46.7, 358.0], [46.8, 358.0], [46.9, 359.0], [47.0, 360.0], [47.1, 360.0], [47.2, 362.0], [47.3, 362.0], [47.4, 363.0], [47.5, 363.0], [47.6, 363.0], [47.7, 365.0], [47.8, 366.0], [47.9, 367.0], [48.0, 368.0], [48.1, 369.0], [48.2, 369.0], [48.3, 370.0], [48.4, 370.0], [48.5, 371.0], [48.6, 371.0], [48.7, 373.0], [48.8, 373.0], [48.9, 374.0], [49.0, 375.0], [49.1, 376.0], [49.2, 378.0], [49.3, 378.0], [49.4, 378.0], [49.5, 379.0], [49.6, 379.0], [49.7, 381.0], [49.8, 381.0], [49.9, 382.0], [50.0, 382.0], [50.1, 383.0], [50.2, 383.0], [50.3, 384.0], [50.4, 387.0], [50.5, 388.0], [50.6, 389.0], [50.7, 390.0], [50.8, 391.0], [50.9, 392.0], [51.0, 394.0], [51.1, 394.0], [51.2, 395.0], [51.3, 395.0], [51.4, 397.0], [51.5, 397.0], [51.6, 397.0], [51.7, 397.0], [51.8, 397.0], [51.9, 400.0], [52.0, 400.0], [52.1, 400.0], [52.2, 402.0], [52.3, 403.0], [52.4, 404.0], [52.5, 404.0], [52.6, 404.0], [52.7, 409.0], [52.8, 409.0], [52.9, 409.0], [53.0, 412.0], [53.1, 413.0], [53.2, 414.0], [53.3, 414.0], [53.4, 414.0], [53.5, 416.0], [53.6, 417.0], [53.7, 417.0], [53.8, 417.0], [53.9, 419.0], [54.0, 421.0], [54.1, 422.0], [54.2, 423.0], [54.3, 424.0], [54.4, 425.0], [54.5, 425.0], [54.6, 425.0], [54.7, 426.0], [54.8, 428.0], [54.9, 429.0], [55.0, 431.0], [55.1, 432.0], [55.2, 433.0], [55.3, 435.0], [55.4, 436.0], [55.5, 437.0], [55.6, 439.0], [55.7, 439.0], [55.8, 439.0], [55.9, 440.0], [56.0, 441.0], [56.1, 441.0], [56.2, 442.0], [56.3, 442.0], [56.4, 442.0], [56.5, 442.0], [56.6, 443.0], [56.7, 443.0], [56.8, 445.0], [56.9, 445.0], [57.0, 445.0], [57.1, 446.0], [57.2, 447.0], [57.3, 447.0], [57.4, 449.0], [57.5, 449.0], [57.6, 450.0], [57.7, 451.0], [57.8, 451.0], [57.9, 453.0], [58.0, 454.0], [58.1, 454.0], [58.2, 454.0], [58.3, 455.0], [58.4, 455.0], [58.5, 456.0], [58.6, 457.0], [58.7, 460.0], [58.8, 461.0], [58.9, 464.0], [59.0, 466.0], [59.1, 466.0], [59.2, 470.0], [59.3, 470.0], [59.4, 471.0], [59.5, 473.0], [59.6, 473.0], [59.7, 474.0], [59.8, 474.0], [59.9, 476.0], [60.0, 477.0], [60.1, 477.0], [60.2, 478.0], [60.3, 479.0], [60.4, 481.0], [60.5, 484.0], [60.6, 485.0], [60.7, 487.0], [60.8, 488.0], [60.9, 488.0], [61.0, 494.0], [61.1, 496.0], [61.2, 497.0], [61.3, 497.0], [61.4, 500.0], [61.5, 502.0], [61.6, 503.0], [61.7, 504.0], [61.8, 505.0], [61.9, 506.0], [62.0, 507.0], [62.1, 509.0], [62.2, 513.0], [62.3, 513.0], [62.4, 516.0], [62.5, 517.0], [62.6, 519.0], [62.7, 519.0], [62.8, 520.0], [62.9, 521.0], [63.0, 522.0], [63.1, 522.0], [63.2, 523.0], [63.3, 523.0], [63.4, 524.0], [63.5, 527.0], [63.6, 527.0], [63.7, 530.0], [63.8, 532.0], [63.9, 533.0], [64.0, 534.0], [64.1, 535.0], [64.2, 541.0], [64.3, 541.0], [64.4, 543.0], [64.5, 544.0], [64.6, 544.0], [64.7, 545.0], [64.8, 546.0], [64.9, 549.0], [65.0, 549.0], [65.1, 549.0], [65.2, 550.0], [65.3, 551.0], [65.4, 555.0], [65.5, 557.0], [65.6, 557.0], [65.7, 563.0], [65.8, 563.0], [65.9, 566.0], [66.0, 567.0], [66.1, 568.0], [66.2, 572.0], [66.3, 572.0], [66.4, 576.0], [66.5, 578.0], [66.6, 578.0], [66.7, 585.0], [66.8, 585.0], [66.9, 587.0], [67.0, 588.0], [67.1, 589.0], [67.2, 590.0], [67.3, 591.0], [67.4, 593.0], [67.5, 593.0], [67.6, 593.0], [67.7, 596.0], [67.8, 597.0], [67.9, 601.0], [68.0, 604.0], [68.1, 605.0], [68.2, 606.0], [68.3, 607.0], [68.4, 608.0], [68.5, 609.0], [68.6, 610.0], [68.7, 611.0], [68.8, 611.0], [68.9, 614.0], [69.0, 619.0], [69.1, 621.0], [69.2, 624.0], [69.3, 624.0], [69.4, 625.0], [69.5, 627.0], [69.6, 627.0], [69.7, 630.0], [69.8, 631.0], [69.9, 635.0], [70.0, 636.0], [70.1, 637.0], [70.2, 642.0], [70.3, 642.0], [70.4, 647.0], [70.5, 650.0], [70.6, 651.0], [70.7, 652.0], [70.8, 652.0], [70.9, 654.0], [71.0, 658.0], [71.1, 658.0], [71.2, 659.0], [71.3, 659.0], [71.4, 661.0], [71.5, 665.0], [71.6, 667.0], [71.7, 668.0], [71.8, 669.0], [71.9, 670.0], [72.0, 673.0], [72.1, 675.0], [72.2, 678.0], [72.3, 679.0], [72.4, 686.0], [72.5, 686.0], [72.6, 687.0], [72.7, 688.0], [72.8, 691.0], [72.9, 692.0], [73.0, 695.0], [73.1, 696.0], [73.2, 698.0], [73.3, 699.0], [73.4, 703.0], [73.5, 704.0], [73.6, 704.0], [73.7, 710.0], [73.8, 713.0], [73.9, 721.0], [74.0, 727.0], [74.1, 730.0], [74.2, 731.0], [74.3, 732.0], [74.4, 733.0], [74.5, 736.0], [74.6, 739.0], [74.7, 740.0], [74.8, 741.0], [74.9, 744.0], [75.0, 747.0], [75.1, 747.0], [75.2, 752.0], [75.3, 754.0], [75.4, 754.0], [75.5, 758.0], [75.6, 759.0], [75.7, 761.0], [75.8, 762.0], [75.9, 767.0], [76.0, 768.0], [76.1, 771.0], [76.2, 776.0], [76.3, 776.0], [76.4, 779.0], [76.5, 782.0], [76.6, 784.0], [76.7, 790.0], [76.8, 790.0], [76.9, 791.0], [77.0, 797.0], [77.1, 798.0], [77.2, 798.0], [77.3, 799.0], [77.4, 801.0], [77.5, 804.0], [77.6, 807.0], [77.7, 810.0], [77.8, 811.0], [77.9, 812.0], [78.0, 816.0], [78.1, 817.0], [78.2, 820.0], [78.3, 821.0], [78.4, 823.0], [78.5, 825.0], [78.6, 825.0], [78.7, 829.0], [78.8, 831.0], [78.9, 832.0], [79.0, 840.0], [79.1, 841.0], [79.2, 843.0], [79.3, 844.0], [79.4, 850.0], [79.5, 850.0], [79.6, 850.0], [79.7, 853.0], [79.8, 855.0], [79.9, 856.0], [80.0, 860.0], [80.1, 864.0], [80.2, 866.0], [80.3, 867.0], [80.4, 872.0], [80.5, 875.0], [80.6, 875.0], [80.7, 878.0], [80.8, 882.0], [80.9, 888.0], [81.0, 893.0], [81.1, 898.0], [81.2, 906.0], [81.3, 907.0], [81.4, 916.0], [81.5, 917.0], [81.6, 917.0], [81.7, 922.0], [81.8, 923.0], [81.9, 925.0], [82.0, 940.0], [82.1, 948.0], [82.2, 954.0], [82.3, 956.0], [82.4, 969.0], [82.5, 975.0], [82.6, 976.0], [82.7, 987.0], [82.8, 990.0], [82.9, 994.0], [83.0, 1008.0], [83.1, 1010.0], [83.2, 1010.0], [83.3, 1011.0], [83.4, 1012.0], [83.5, 1018.0], [83.6, 1020.0], [83.7, 1027.0], [83.8, 1029.0], [83.9, 1036.0], [84.0, 1039.0], [84.1, 1045.0], [84.2, 1047.0], [84.3, 1050.0], [84.4, 1057.0], [84.5, 1059.0], [84.6, 1061.0], [84.7, 1064.0], [84.8, 1066.0], [84.9, 1072.0], [85.0, 1086.0], [85.1, 1089.0], [85.2, 1091.0], [85.3, 1093.0], [85.4, 1097.0], [85.5, 1103.0], [85.6, 1106.0], [85.7, 1107.0], [85.8, 1110.0], [85.9, 1115.0], [86.0, 1120.0], [86.1, 1120.0], [86.2, 1143.0], [86.3, 1146.0], [86.4, 1150.0], [86.5, 1176.0], [86.6, 1178.0], [86.7, 1189.0], [86.8, 1189.0], [86.9, 1197.0], [87.0, 1206.0], [87.1, 1213.0], [87.2, 1215.0], [87.3, 1217.0], [87.4, 1228.0], [87.5, 1237.0], [87.6, 1240.0], [87.7, 1246.0], [87.8, 1247.0], [87.9, 1252.0], [88.0, 1255.0], [88.1, 1259.0], [88.2, 1265.0], [88.3, 1267.0], [88.4, 1271.0], [88.5, 1284.0], [88.6, 1284.0], [88.7, 1300.0], [88.8, 1307.0], [88.9, 1331.0], [89.0, 1334.0], [89.1, 1336.0], [89.2, 1354.0], [89.3, 1372.0], [89.4, 1376.0], [89.5, 1385.0], [89.6, 1388.0], [89.7, 1395.0], [89.8, 1396.0], [89.9, 1411.0], [90.0, 1454.0], [90.1, 1458.0], [90.2, 1463.0], [90.3, 1468.0], [90.4, 1479.0], [90.5, 1488.0], [90.6, 1493.0], [90.7, 1517.0], [90.8, 1520.0], [90.9, 1549.0], [91.0, 1570.0], [91.1, 1576.0], [91.2, 1600.0], [91.3, 1629.0], [91.4, 1634.0], [91.5, 1638.0], [91.6, 1666.0], [91.7, 1686.0], [91.8, 1688.0], [91.9, 1701.0], [92.0, 1714.0], [92.1, 1727.0], [92.2, 1745.0], [92.3, 1750.0], [92.4, 1760.0], [92.5, 1767.0], [92.6, 1769.0], [92.7, 1775.0], [92.8, 1801.0], [92.9, 1803.0], [93.0, 1815.0], [93.1, 1815.0], [93.2, 1831.0], [93.3, 1836.0], [93.4, 1873.0], [93.5, 1885.0], [93.6, 1888.0], [93.7, 1957.0], [93.8, 1965.0], [93.9, 1996.0], [94.0, 2018.0], [94.1, 2018.0], [94.2, 2053.0], [94.3, 2074.0], [94.4, 2095.0], [94.5, 2137.0], [94.6, 2155.0], [94.7, 2196.0], [94.8, 2222.0], [94.9, 2264.0], [95.0, 2277.0], [95.1, 2294.0], [95.2, 2344.0], [95.3, 2349.0], [95.4, 2395.0], [95.5, 2438.0], [95.6, 2461.0], [95.7, 2487.0], [95.8, 2546.0], [95.9, 2636.0], [96.0, 2673.0], [96.1, 2721.0], [96.2, 2868.0], [96.3, 2874.0], [96.4, 2928.0], [96.5, 2964.0], [96.6, 2967.0], [96.7, 2987.0], [96.8, 3004.0], [96.9, 3088.0], [97.0, 3121.0], [97.1, 3141.0], [97.2, 3155.0], [97.3, 3163.0], [97.4, 3277.0], [97.5, 3408.0], [97.6, 3409.0], [97.7, 3580.0], [97.8, 3678.0], [97.9, 3748.0], [98.0, 3793.0], [98.1, 3990.0], [98.2, 4068.0], [98.3, 4369.0], [98.4, 4474.0], [98.5, 4864.0], [98.6, 5187.0], [98.7, 5255.0], [98.8, 5265.0], [98.9, 5567.0], [99.0, 5643.0], [99.1, 5670.0], [99.2, 5819.0], [99.3, 5879.0], [99.4, 6541.0], [99.5, 6835.0], [99.6, 6906.0], [99.7, 8581.0], [99.8, 10473.0], [99.9, 15152.0]], "isOverall": false, "label": "16", "isController": false}, {"data": [[0.0, 33.0], [0.1, 33.0], [0.2, 33.0], [0.3, 33.0], [0.4, 34.0], [0.5, 35.0], [0.6, 35.0], [0.7, 35.0], [0.8, 36.0], [0.9, 36.0], [1.0, 36.0], [1.1, 36.0], [1.2, 36.0], [1.3, 36.0], [1.4, 37.0], [1.5, 37.0], [1.6, 37.0], [1.7, 38.0], [1.8, 38.0], [1.9, 38.0], [2.0, 38.0], [2.1, 38.0], [2.2, 38.0], [2.3, 39.0], [2.4, 39.0], [2.5, 40.0], [2.6, 40.0], [2.7, 40.0], [2.8, 41.0], [2.9, 41.0], [3.0, 41.0], [3.1, 41.0], [3.2, 41.0], [3.3, 42.0], [3.4, 42.0], [3.5, 42.0], [3.6, 42.0], [3.7, 43.0], [3.8, 43.0], [3.9, 44.0], [4.0, 44.0], [4.1, 44.0], [4.2, 45.0], [4.3, 46.0], [4.4, 47.0], [4.5, 48.0], [4.6, 48.0], [4.7, 48.0], [4.8, 49.0], [4.9, 50.0], [5.0, 50.0], [5.1, 50.0], [5.2, 50.0], [5.3, 51.0], [5.4, 51.0], [5.5, 51.0], [5.6, 51.0], [5.7, 51.0], [5.8, 52.0], [5.9, 52.0], [6.0, 52.0], [6.1, 52.0], [6.2, 52.0], [6.3, 52.0], [6.4, 53.0], [6.5, 54.0], [6.6, 54.0], [6.7, 54.0], [6.8, 55.0], [6.9, 55.0], [7.0, 56.0], [7.1, 56.0], [7.2, 57.0], [7.3, 57.0], [7.4, 57.0], [7.5, 58.0], [7.6, 58.0], [7.7, 58.0], [7.8, 58.0], [7.9, 59.0], [8.0, 59.0], [8.1, 59.0], [8.2, 59.0], [8.3, 60.0], [8.4, 60.0], [8.5, 61.0], [8.6, 61.0], [8.7, 61.0], [8.8, 61.0], [8.9, 61.0], [9.0, 62.0], [9.1, 62.0], [9.2, 62.0], [9.3, 63.0], [9.4, 63.0], [9.5, 64.0], [9.6, 64.0], [9.7, 64.0], [9.8, 64.0], [9.9, 64.0], [10.0, 64.0], [10.1, 64.0], [10.2, 64.0], [10.3, 65.0], [10.4, 66.0], [10.5, 66.0], [10.6, 66.0], [10.7, 66.0], [10.8, 67.0], [10.9, 67.0], [11.0, 67.0], [11.1, 67.0], [11.2, 68.0], [11.3, 68.0], [11.4, 68.0], [11.5, 69.0], [11.6, 69.0], [11.7, 69.0], [11.8, 69.0], [11.9, 70.0], [12.0, 70.0], [12.1, 70.0], [12.2, 70.0], [12.3, 71.0], [12.4, 71.0], [12.5, 72.0], [12.6, 72.0], [12.7, 72.0], [12.8, 73.0], [12.9, 73.0], [13.0, 74.0], [13.1, 74.0], [13.2, 74.0], [13.3, 74.0], [13.4, 74.0], [13.5, 74.0], [13.6, 74.0], [13.7, 75.0], [13.8, 75.0], [13.9, 75.0], [14.0, 75.0], [14.1, 75.0], [14.2, 75.0], [14.3, 75.0], [14.4, 76.0], [14.5, 76.0], [14.6, 76.0], [14.7, 77.0], [14.8, 77.0], [14.9, 77.0], [15.0, 78.0], [15.1, 78.0], [15.2, 78.0], [15.3, 79.0], [15.4, 79.0], [15.5, 79.0], [15.6, 79.0], [15.7, 79.0], [15.8, 79.0], [15.9, 81.0], [16.0, 82.0], [16.1, 82.0], [16.2, 82.0], [16.3, 82.0], [16.4, 82.0], [16.5, 83.0], [16.6, 83.0], [16.7, 83.0], [16.8, 83.0], [16.9, 84.0], [17.0, 84.0], [17.1, 84.0], [17.2, 84.0], [17.3, 84.0], [17.4, 85.0], [17.5, 85.0], [17.6, 85.0], [17.7, 86.0], [17.8, 86.0], [17.9, 86.0], [18.0, 86.0], [18.1, 86.0], [18.2, 86.0], [18.3, 86.0], [18.4, 87.0], [18.5, 87.0], [18.6, 87.0], [18.7, 87.0], [18.8, 88.0], [18.9, 88.0], [19.0, 89.0], [19.1, 89.0], [19.2, 89.0], [19.3, 89.0], [19.4, 90.0], [19.5, 91.0], [19.6, 91.0], [19.7, 91.0], [19.8, 91.0], [19.9, 91.0], [20.0, 92.0], [20.1, 92.0], [20.2, 92.0], [20.3, 93.0], [20.4, 93.0], [20.5, 93.0], [20.6, 93.0], [20.7, 93.0], [20.8, 94.0], [20.9, 97.0], [21.0, 97.0], [21.1, 97.0], [21.2, 97.0], [21.3, 97.0], [21.4, 97.0], [21.5, 98.0], [21.6, 98.0], [21.7, 99.0], [21.8, 99.0], [21.9, 99.0], [22.0, 100.0], [22.1, 100.0], [22.2, 100.0], [22.3, 100.0], [22.4, 100.0], [22.5, 101.0], [22.6, 101.0], [22.7, 101.0], [22.8, 101.0], [22.9, 101.0], [23.0, 102.0], [23.1, 102.0], [23.2, 102.0], [23.3, 102.0], [23.4, 102.0], [23.5, 102.0], [23.6, 102.0], [23.7, 102.0], [23.8, 102.0], [23.9, 102.0], [24.0, 103.0], [24.1, 103.0], [24.2, 104.0], [24.3, 104.0], [24.4, 105.0], [24.5, 105.0], [24.6, 105.0], [24.7, 106.0], [24.8, 106.0], [24.9, 107.0], [25.0, 107.0], [25.1, 107.0], [25.2, 107.0], [25.3, 107.0], [25.4, 108.0], [25.5, 108.0], [25.6, 108.0], [25.7, 109.0], [25.8, 109.0], [25.9, 109.0], [26.0, 110.0], [26.1, 110.0], [26.2, 110.0], [26.3, 111.0], [26.4, 111.0], [26.5, 111.0], [26.6, 111.0], [26.7, 111.0], [26.8, 111.0], [26.9, 111.0], [27.0, 113.0], [27.1, 113.0], [27.2, 113.0], [27.3, 113.0], [27.4, 113.0], [27.5, 113.0], [27.6, 113.0], [27.7, 114.0], [27.8, 114.0], [27.9, 114.0], [28.0, 115.0], [28.1, 115.0], [28.2, 115.0], [28.3, 116.0], [28.4, 117.0], [28.5, 117.0], [28.6, 117.0], [28.7, 117.0], [28.8, 117.0], [28.9, 117.0], [29.0, 117.0], [29.1, 117.0], [29.2, 118.0], [29.3, 118.0], [29.4, 118.0], [29.5, 118.0], [29.6, 118.0], [29.7, 119.0], [29.8, 119.0], [29.9, 120.0], [30.0, 120.0], [30.1, 120.0], [30.2, 120.0], [30.3, 121.0], [30.4, 121.0], [30.5, 122.0], [30.6, 122.0], [30.7, 123.0], [30.8, 123.0], [30.9, 124.0], [31.0, 124.0], [31.1, 124.0], [31.2, 124.0], [31.3, 125.0], [31.4, 125.0], [31.5, 127.0], [31.6, 127.0], [31.7, 127.0], [31.8, 127.0], [31.9, 128.0], [32.0, 129.0], [32.1, 129.0], [32.2, 129.0], [32.3, 130.0], [32.4, 131.0], [32.5, 131.0], [32.6, 131.0], [32.7, 131.0], [32.8, 132.0], [32.9, 133.0], [33.0, 133.0], [33.1, 133.0], [33.2, 134.0], [33.3, 134.0], [33.4, 134.0], [33.5, 134.0], [33.6, 134.0], [33.7, 136.0], [33.8, 136.0], [33.9, 137.0], [34.0, 137.0], [34.1, 137.0], [34.2, 137.0], [34.3, 137.0], [34.4, 137.0], [34.5, 139.0], [34.6, 139.0], [34.7, 140.0], [34.8, 140.0], [34.9, 140.0], [35.0, 140.0], [35.1, 140.0], [35.2, 140.0], [35.3, 141.0], [35.4, 141.0], [35.5, 141.0], [35.6, 141.0], [35.7, 141.0], [35.8, 142.0], [35.9, 143.0], [36.0, 143.0], [36.1, 143.0], [36.2, 143.0], [36.3, 144.0], [36.4, 144.0], [36.5, 145.0], [36.6, 145.0], [36.7, 146.0], [36.8, 146.0], [36.9, 146.0], [37.0, 147.0], [37.1, 147.0], [37.2, 147.0], [37.3, 147.0], [37.4, 148.0], [37.5, 148.0], [37.6, 148.0], [37.7, 149.0], [37.8, 149.0], [37.9, 150.0], [38.0, 150.0], [38.1, 150.0], [38.2, 150.0], [38.3, 150.0], [38.4, 152.0], [38.5, 152.0], [38.6, 152.0], [38.7, 152.0], [38.8, 153.0], [38.9, 154.0], [39.0, 155.0], [39.1, 155.0], [39.2, 155.0], [39.3, 155.0], [39.4, 155.0], [39.5, 155.0], [39.6, 155.0], [39.7, 155.0], [39.8, 155.0], [39.9, 156.0], [40.0, 156.0], [40.1, 156.0], [40.2, 157.0], [40.3, 157.0], [40.4, 157.0], [40.5, 158.0], [40.6, 158.0], [40.7, 158.0], [40.8, 158.0], [40.9, 159.0], [41.0, 161.0], [41.1, 161.0], [41.2, 162.0], [41.3, 162.0], [41.4, 162.0], [41.5, 163.0], [41.6, 163.0], [41.7, 163.0], [41.8, 163.0], [41.9, 164.0], [42.0, 164.0], [42.1, 164.0], [42.2, 165.0], [42.3, 167.0], [42.4, 167.0], [42.5, 167.0], [42.6, 167.0], [42.7, 168.0], [42.8, 168.0], [42.9, 169.0], [43.0, 170.0], [43.1, 170.0], [43.2, 170.0], [43.3, 170.0], [43.4, 171.0], [43.5, 171.0], [43.6, 171.0], [43.7, 171.0], [43.8, 171.0], [43.9, 171.0], [44.0, 171.0], [44.1, 171.0], [44.2, 172.0], [44.3, 172.0], [44.4, 172.0], [44.5, 173.0], [44.6, 173.0], [44.7, 174.0], [44.8, 174.0], [44.9, 174.0], [45.0, 175.0], [45.1, 175.0], [45.2, 177.0], [45.3, 178.0], [45.4, 178.0], [45.5, 178.0], [45.6, 178.0], [45.7, 178.0], [45.8, 179.0], [45.9, 179.0], [46.0, 180.0], [46.1, 180.0], [46.2, 180.0], [46.3, 181.0], [46.4, 181.0], [46.5, 182.0], [46.6, 182.0], [46.7, 183.0], [46.8, 183.0], [46.9, 184.0], [47.0, 185.0], [47.1, 185.0], [47.2, 186.0], [47.3, 186.0], [47.4, 187.0], [47.5, 187.0], [47.6, 187.0], [47.7, 188.0], [47.8, 188.0], [47.9, 188.0], [48.0, 189.0], [48.1, 189.0], [48.2, 190.0], [48.3, 190.0], [48.4, 191.0], [48.5, 193.0], [48.6, 193.0], [48.7, 193.0], [48.8, 194.0], [48.9, 194.0], [49.0, 195.0], [49.1, 195.0], [49.2, 195.0], [49.3, 196.0], [49.4, 196.0], [49.5, 197.0], [49.6, 197.0], [49.7, 197.0], [49.8, 199.0], [49.9, 199.0], [50.0, 200.0], [50.1, 200.0], [50.2, 200.0], [50.3, 202.0], [50.4, 202.0], [50.5, 203.0], [50.6, 203.0], [50.7, 204.0], [50.8, 205.0], [50.9, 206.0], [51.0, 206.0], [51.1, 206.0], [51.2, 208.0], [51.3, 208.0], [51.4, 210.0], [51.5, 210.0], [51.6, 210.0], [51.7, 211.0], [51.8, 211.0], [51.9, 211.0], [52.0, 213.0], [52.1, 213.0], [52.2, 214.0], [52.3, 215.0], [52.4, 215.0], [52.5, 215.0], [52.6, 215.0], [52.7, 216.0], [52.8, 216.0], [52.9, 216.0], [53.0, 216.0], [53.1, 216.0], [53.2, 217.0], [53.3, 217.0], [53.4, 218.0], [53.5, 218.0], [53.6, 218.0], [53.7, 218.0], [53.8, 219.0], [53.9, 219.0], [54.0, 220.0], [54.1, 220.0], [54.2, 220.0], [54.3, 220.0], [54.4, 220.0], [54.5, 220.0], [54.6, 220.0], [54.7, 221.0], [54.8, 222.0], [54.9, 222.0], [55.0, 222.0], [55.1, 222.0], [55.2, 223.0], [55.3, 223.0], [55.4, 224.0], [55.5, 224.0], [55.6, 224.0], [55.7, 224.0], [55.8, 225.0], [55.9, 225.0], [56.0, 225.0], [56.1, 225.0], [56.2, 226.0], [56.3, 227.0], [56.4, 228.0], [56.5, 229.0], [56.6, 229.0], [56.7, 230.0], [56.8, 230.0], [56.9, 231.0], [57.0, 231.0], [57.1, 231.0], [57.2, 231.0], [57.3, 232.0], [57.4, 232.0], [57.5, 233.0], [57.6, 233.0], [57.7, 234.0], [57.8, 234.0], [57.9, 234.0], [58.0, 235.0], [58.1, 235.0], [58.2, 235.0], [58.3, 235.0], [58.4, 236.0], [58.5, 237.0], [58.6, 237.0], [58.7, 240.0], [58.8, 240.0], [58.9, 241.0], [59.0, 241.0], [59.1, 241.0], [59.2, 242.0], [59.3, 243.0], [59.4, 245.0], [59.5, 248.0], [59.6, 248.0], [59.7, 249.0], [59.8, 250.0], [59.9, 252.0], [60.0, 253.0], [60.1, 253.0], [60.2, 254.0], [60.3, 254.0], [60.4, 255.0], [60.5, 256.0], [60.6, 256.0], [60.7, 257.0], [60.8, 260.0], [60.9, 260.0], [61.0, 261.0], [61.1, 261.0], [61.2, 262.0], [61.3, 262.0], [61.4, 263.0], [61.5, 264.0], [61.6, 264.0], [61.7, 264.0], [61.8, 265.0], [61.9, 266.0], [62.0, 267.0], [62.1, 267.0], [62.2, 268.0], [62.3, 268.0], [62.4, 269.0], [62.5, 269.0], [62.6, 269.0], [62.7, 270.0], [62.8, 271.0], [62.9, 272.0], [63.0, 272.0], [63.1, 272.0], [63.2, 273.0], [63.3, 273.0], [63.4, 275.0], [63.5, 276.0], [63.6, 276.0], [63.7, 277.0], [63.8, 278.0], [63.9, 278.0], [64.0, 279.0], [64.1, 279.0], [64.2, 279.0], [64.3, 280.0], [64.4, 281.0], [64.5, 281.0], [64.6, 281.0], [64.7, 281.0], [64.8, 282.0], [64.9, 282.0], [65.0, 283.0], [65.1, 283.0], [65.2, 283.0], [65.3, 284.0], [65.4, 286.0], [65.5, 287.0], [65.6, 287.0], [65.7, 288.0], [65.8, 289.0], [65.9, 290.0], [66.0, 291.0], [66.1, 291.0], [66.2, 293.0], [66.3, 295.0], [66.4, 296.0], [66.5, 296.0], [66.6, 296.0], [66.7, 296.0], [66.8, 299.0], [66.9, 300.0], [67.0, 300.0], [67.1, 300.0], [67.2, 302.0], [67.3, 302.0], [67.4, 305.0], [67.5, 305.0], [67.6, 305.0], [67.7, 306.0], [67.8, 306.0], [67.9, 306.0], [68.0, 307.0], [68.1, 307.0], [68.2, 307.0], [68.3, 309.0], [68.4, 311.0], [68.5, 313.0], [68.6, 313.0], [68.7, 316.0], [68.8, 319.0], [68.9, 320.0], [69.0, 321.0], [69.1, 321.0], [69.2, 322.0], [69.3, 327.0], [69.4, 329.0], [69.5, 329.0], [69.6, 329.0], [69.7, 331.0], [69.8, 333.0], [69.9, 336.0], [70.0, 336.0], [70.1, 336.0], [70.2, 338.0], [70.3, 339.0], [70.4, 340.0], [70.5, 349.0], [70.6, 349.0], [70.7, 349.0], [70.8, 352.0], [70.9, 352.0], [71.0, 354.0], [71.1, 354.0], [71.2, 354.0], [71.3, 355.0], [71.4, 356.0], [71.5, 359.0], [71.6, 359.0], [71.7, 364.0], [71.8, 365.0], [71.9, 365.0], [72.0, 365.0], [72.1, 365.0], [72.2, 368.0], [72.3, 368.0], [72.4, 370.0], [72.5, 373.0], [72.6, 373.0], [72.7, 375.0], [72.8, 376.0], [72.9, 377.0], [73.0, 377.0], [73.1, 377.0], [73.2, 379.0], [73.3, 381.0], [73.4, 383.0], [73.5, 385.0], [73.6, 385.0], [73.7, 385.0], [73.8, 386.0], [73.9, 392.0], [74.0, 393.0], [74.1, 393.0], [74.2, 394.0], [74.3, 394.0], [74.4, 394.0], [74.5, 398.0], [74.6, 398.0], [74.7, 401.0], [74.8, 402.0], [74.9, 406.0], [75.0, 409.0], [75.1, 409.0], [75.2, 410.0], [75.3, 413.0], [75.4, 414.0], [75.5, 417.0], [75.6, 417.0], [75.7, 417.0], [75.8, 419.0], [75.9, 420.0], [76.0, 423.0], [76.1, 423.0], [76.2, 423.0], [76.3, 424.0], [76.4, 427.0], [76.5, 429.0], [76.6, 429.0], [76.7, 429.0], [76.8, 430.0], [76.9, 430.0], [77.0, 432.0], [77.1, 432.0], [77.2, 433.0], [77.3, 434.0], [77.4, 435.0], [77.5, 436.0], [77.6, 436.0], [77.7, 438.0], [77.8, 446.0], [77.9, 449.0], [78.0, 449.0], [78.1, 449.0], [78.2, 450.0], [78.3, 450.0], [78.4, 453.0], [78.5, 460.0], [78.6, 460.0], [78.7, 462.0], [78.8, 464.0], [78.9, 468.0], [79.0, 469.0], [79.1, 469.0], [79.2, 470.0], [79.3, 472.0], [79.4, 474.0], [79.5, 475.0], [79.6, 475.0], [79.7, 480.0], [79.8, 482.0], [79.9, 483.0], [80.0, 484.0], [80.1, 484.0], [80.2, 486.0], [80.3, 488.0], [80.4, 488.0], [80.5, 491.0], [80.6, 491.0], [80.7, 492.0], [80.8, 497.0], [80.9, 497.0], [81.0, 499.0], [81.1, 499.0], [81.2, 499.0], [81.3, 500.0], [81.4, 502.0], [81.5, 510.0], [81.6, 510.0], [81.7, 512.0], [81.8, 512.0], [81.9, 519.0], [82.0, 520.0], [82.1, 520.0], [82.2, 520.0], [82.3, 523.0], [82.4, 526.0], [82.5, 527.0], [82.6, 527.0], [82.7, 531.0], [82.8, 533.0], [82.9, 534.0], [83.0, 540.0], [83.1, 540.0], [83.2, 540.0], [83.3, 540.0], [83.4, 541.0], [83.5, 542.0], [83.6, 542.0], [83.7, 542.0], [83.8, 546.0], [83.9, 548.0], [84.0, 549.0], [84.1, 549.0], [84.2, 550.0], [84.3, 553.0], [84.4, 554.0], [84.5, 559.0], [84.6, 559.0], [84.7, 560.0], [84.8, 561.0], [84.9, 561.0], [85.0, 567.0], [85.1, 567.0], [85.2, 572.0], [85.3, 572.0], [85.4, 583.0], [85.5, 585.0], [85.6, 585.0], [85.7, 586.0], [85.8, 590.0], [85.9, 594.0], [86.0, 594.0], [86.1, 594.0], [86.2, 597.0], [86.3, 600.0], [86.4, 601.0], [86.5, 603.0], [86.6, 603.0], [86.7, 604.0], [86.8, 611.0], [86.9, 612.0], [87.0, 616.0], [87.1, 616.0], [87.2, 617.0], [87.3, 627.0], [87.4, 627.0], [87.5, 628.0], [87.6, 628.0], [87.7, 634.0], [87.8, 636.0], [87.9, 639.0], [88.0, 641.0], [88.1, 641.0], [88.2, 661.0], [88.3, 662.0], [88.4, 668.0], [88.5, 673.0], [88.6, 673.0], [88.7, 683.0], [88.8, 701.0], [88.9, 728.0], [89.0, 738.0], [89.1, 738.0], [89.2, 753.0], [89.3, 755.0], [89.4, 757.0], [89.5, 765.0], [89.6, 765.0], [89.7, 771.0], [89.8, 773.0], [89.9, 777.0], [90.0, 781.0], [90.1, 781.0], [90.2, 791.0], [90.3, 802.0], [90.4, 804.0], [90.5, 804.0], [90.6, 804.0], [90.7, 810.0], [90.8, 845.0], [90.9, 871.0], [91.0, 873.0], [91.1, 873.0], [91.2, 875.0], [91.3, 880.0], [91.4, 906.0], [91.5, 909.0], [91.6, 909.0], [91.7, 921.0], [91.8, 936.0], [91.9, 937.0], [92.0, 939.0], [92.1, 939.0], [92.2, 957.0], [92.3, 962.0], [92.4, 963.0], [92.5, 970.0], [92.6, 970.0], [92.7, 983.0], [92.8, 984.0], [92.9, 1019.0], [93.0, 1020.0], [93.1, 1020.0], [93.2, 1025.0], [93.3, 1027.0], [93.4, 1029.0], [93.5, 1038.0], [93.6, 1038.0], [93.7, 1058.0], [93.8, 1068.0], [93.9, 1077.0], [94.0, 1080.0], [94.1, 1080.0], [94.2, 1086.0], [94.3, 1100.0], [94.4, 1104.0], [94.5, 1122.0], [94.6, 1122.0], [94.7, 1130.0], [94.8, 1148.0], [94.9, 1154.0], [95.0, 1165.0], [95.1, 1165.0], [95.2, 1178.0], [95.3, 1200.0], [95.4, 1237.0], [95.5, 1244.0], [95.6, 1244.0], [95.7, 1248.0], [95.8, 1256.0], [95.9, 1262.0], [96.0, 1264.0], [96.1, 1264.0], [96.2, 1273.0], [96.3, 1278.0], [96.4, 1362.0], [96.5, 1386.0], [96.6, 1386.0], [96.7, 1389.0], [96.8, 1394.0], [96.9, 1396.0], [97.0, 1400.0], [97.1, 1400.0], [97.2, 1409.0], [97.3, 1452.0], [97.4, 1519.0], [97.5, 1557.0], [97.6, 1557.0], [97.7, 1602.0], [97.8, 1629.0], [97.9, 1735.0], [98.0, 1798.0], [98.1, 1798.0], [98.2, 1911.0], [98.3, 1926.0], [98.4, 2020.0], [98.5, 2044.0], [98.6, 2044.0], [98.7, 2069.0], [98.8, 2398.0], [98.9, 2759.0], [99.0, 2884.0], [99.1, 2884.0], [99.2, 3385.0], [99.3, 3396.0], [99.4, 3638.0], [99.5, 3752.0], [99.6, 3752.0], [99.7, 3823.0], [99.8, 3927.0], [99.9, 4134.0]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 274.0, "series": [{"data": [[0.0, 54.0], [600.0, 2.0], [100.0, 29.0], [400.0, 4.0], [200.0, 6.0], [800.0, 1.0], [500.0, 2.0], [2000.0, 2.0]], "isOverall": false, "label": "1", "isController": false}, {"data": [[0.0, 104.0], [2200.0, 1.0], [2300.0, 1.0], [300.0, 4.0], [600.0, 1.0], [100.0, 61.0], [200.0, 18.0], [800.0, 2.0], [400.0, 3.0], [900.0, 1.0], [500.0, 4.0]], "isOverall": false, "label": "2", "isController": false}, {"data": [[0.0, 169.0], [2400.0, 2.0], [600.0, 3.0], [2500.0, 1.0], [2600.0, 1.0], [2700.0, 1.0], [700.0, 4.0], [200.0, 40.0], [800.0, 3.0], [900.0, 4.0], [1000.0, 2.0], [1100.0, 1.0], [300.0, 19.0], [1200.0, 1.0], [1300.0, 1.0], [100.0, 128.0], [400.0, 11.0], [500.0, 9.0]], "isOverall": false, "label": "4", "isController": false}, {"data": [[0.0, 122.0], [600.0, 87.0], [700.0, 64.0], [800.0, 61.0], [900.0, 30.0], [1000.0, 39.0], [1100.0, 25.0], [1200.0, 26.0], [1300.0, 20.0], [1400.0, 12.0], [1500.0, 9.0], [1600.0, 11.0], [1700.0, 14.0], [1800.0, 14.0], [1900.0, 5.0], [2000.0, 9.0], [2100.0, 4.0], [2200.0, 6.0], [2300.0, 5.0], [2400.0, 5.0], [2500.0, 1.0], [2600.0, 4.0], [2700.0, 1.0], [2800.0, 3.0], [2900.0, 7.0], [3000.0, 3.0], [3100.0, 6.0], [3300.0, 1.0], [3200.0, 2.0], [3400.0, 2.0], [3500.0, 2.0], [3600.0, 2.0], [3700.0, 3.0], [3900.0, 1.0], [4000.0, 2.0], [4300.0, 1.0], [4400.0, 2.0], [4800.0, 1.0], [4700.0, 1.0], [5100.0, 2.0], [5200.0, 2.0], [5300.0, 1.0], [5500.0, 1.0], [5600.0, 3.0], [5700.0, 1.0], [5800.0, 2.0], [6000.0, 1.0], [6500.0, 1.0], [6800.0, 2.0], [6900.0, 1.0], [8100.0, 1.0], [8500.0, 1.0], [10500.0, 1.0], [10400.0, 1.0], [15100.0, 1.0], [15900.0, 1.0], [100.0, 274.0], [200.0, 237.0], [300.0, 196.0], [400.0, 153.0], [500.0, 104.0]], "isOverall": false, "label": "16", "isController": false}, {"data": [[0.0, 176.0], [600.0, 20.0], [700.0, 12.0], [800.0, 9.0], [900.0, 12.0], [1000.0, 11.0], [1100.0, 8.0], [1200.0, 9.0], [1300.0, 5.0], [1400.0, 3.0], [1500.0, 2.0], [100.0, 224.0], [1600.0, 2.0], [1700.0, 2.0], [1900.0, 2.0], [2000.0, 3.0], [2300.0, 1.0], [2800.0, 1.0], [2700.0, 1.0], [200.0, 135.0], [3300.0, 2.0], [3600.0, 1.0], [3700.0, 1.0], [3800.0, 1.0], [3900.0, 1.0], [4100.0, 1.0], [300.0, 62.0], [400.0, 53.0], [500.0, 40.0]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 15900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 180.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2285.0, "series": [{"data": [[0.0, 2285.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 635.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 180.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.70759197E12, "maxY": 16.0, "series": [{"data": [[1.70759198E12, 1.0], [1.70759199E12, 1.0], [1.70759197E12, 1.0]], "isOverall": false, "label": "1", "isController": false}, {"data": [[1.70759199E12, 1.9402985074626868], [1.707592E12, 1.9910714285714286], [1.70759201E12, 1.0]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.70759202E12, 3.909574468085107], [1.70759203E12, 2.487499999999999], [1.70759201E12, 3.825757575757576]], "isOverall": false, "label": "4", "isController": false}, {"data": [[1.70759214E12, 8.759358288770049], [1.70759215E12, 1.9545454545454546], [1.70759212E12, 16.0], [1.70759213E12, 15.30188679245283], [1.7075921E12, 16.0], [1.70759211E12, 16.0], [1.70759208E12, 16.0], [1.70759209E12, 16.0], [1.70759207E12, 14.418367346938775]], "isOverall": false, "label": "16", "isController": false}, {"data": [[1.70759206E12, 7.738532110091745], [1.70759207E12, 3.3855421686747], [1.70759204E12, 8.0], [1.70759205E12, 8.0], [1.70759203E12, 7.3209876543209855]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.70759215E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 96.93333333333332, "minX": 1.0, "maxY": 1792.7, "series": [{"data": [[1.0, 174.99999999999994]], "isOverall": false, "label": "1", "isController": false}, {"data": [[1.0, 174.99999999999994]], "isOverall": false, "label": "1-Aggregated", "isController": false}, {"data": [[1.0, 106.26923076923077], [2.0, 167.00574712643686]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.87, 159.10999999999996]], "isOverall": false, "label": "2-Aggregated", "isController": false}, {"data": [[1.0, 96.93333333333332], [2.0, 140.71428571428572], [4.0, 221.62758620689658], [3.0, 208.62162162162156]], "isOverall": false, "label": "4", "isController": false}, {"data": [[3.5975000000000006, 210.29749999999993]], "isOverall": false, "label": "4-Aggregated", "isController": false}, {"data": [[2.0, 149.1086956521739], [8.0, 730.0], [9.0, 149.25], [10.0, 298.90000000000003], [11.0, 471.0], [12.0, 573.809523809524], [3.0, 175.5], [13.0, 813.0491803278688], [14.0, 638.4285714285714], [15.0, 496.9310344827586], [4.0, 273.9302325581396], [16.0, 744.2324455205813], [1.0, 1154.5], [5.0, 1792.7], [6.0, 263.8], [7.0, 481.8181818181817]], "isOverall": false, "label": "16", "isController": false}, {"data": [[14.578125, 692.0381249999996]], "isOverall": false, "label": "16-Aggregated", "isController": false}, {"data": [[2.0, 115.36363636363637], [4.0, 213.8], [8.0, 373.6702954898916], [1.0, 112.77777777777777], [5.0, 262.35714285714283], [3.0, 269.8400000000001], [6.0, 450.18749999999994], [7.0, 297.9999999999999]], "isOverall": false, "label": "8", "isController": false}, {"data": [[7.381250000000006, 352.2012499999997]], "isOverall": false, "label": "8-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 16.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 205.3, "minX": 1.70759197E12, "maxY": 1.29755033E7, "series": [{"data": [[1.70759198E12, 3838359.7], [1.70759215E12, 3238284.6], [1.70759213E12, 1.09911558E7], [1.70759211E12, 1.07601366E7], [1.70759209E12, 1.04536604E7], [1.70759207E12, 8211748.5], [1.70759205E12, 1.12252583E7], [1.70759203E12, 7214796.4], [1.70759201E12, 7093275.2], [1.70759214E12, 1.29755033E7], [1.70759199E12, 4670888.5], [1.70759212E12, 1.11559744E7], [1.70759197E12, 522009.7], [1.7075921E12, 1.18928681E7], [1.70759208E12, 1.22882468E7], [1.70759206E12, 1.19570552E7], [1.70759204E12, 1.22937568E7], [1.70759202E12, 1.06754072E7], [1.707592E12, 6706598.8]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.70759198E12, 1660.3], [1.70759215E12, 1001.4], [1.70759213E12, 4823.1], [1.70759211E12, 4777.7], [1.70759209E12, 4846.1], [1.70759207E12, 4117.8], [1.70759205E12, 4436.2], [1.70759203E12, 3663.0], [1.70759201E12, 3481.2], [1.70759214E12, 4255.1], [1.70759199E12, 1934.5], [1.70759212E12, 4618.9], [1.70759197E12, 205.3], [1.7075921E12, 5118.9], [1.70759208E12, 4733.1], [1.70759206E12, 4959.8], [1.70759204E12, 5073.9], [1.70759202E12, 4277.3], [1.707592E12, 2547.7]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.70759215E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 102.66666666666667, "minX": 1.70759197E12, "maxY": 801.6826923076924, "series": [{"data": [[1.70759198E12, 145.986301369863], [1.70759199E12, 282.5], [1.70759197E12, 195.33333333333334]], "isOverall": false, "label": "1", "isController": false}, {"data": [[1.70759199E12, 135.26865671641792], [1.707592E12, 183.9553571428571], [1.70759201E12, 102.66666666666667]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.70759202E12, 224.8776595744681], [1.70759203E12, 189.35], [1.70759201E12, 202.2272727272727]], "isOverall": false, "label": "4", "isController": false}, {"data": [[1.70759214E12, 588.4278074866314], [1.70759215E12, 197.27272727272725], [1.70759212E12, 797.7142857142851], [1.70759213E12, 665.400943396227], [1.7075921E12, 740.3155555555555], [1.70759211E12, 729.9904761904762], [1.70759208E12, 801.6826923076924], [1.70759209E12, 715.0328638497655], [1.70759207E12, 475.7448979591838]], "isOverall": false, "label": "16", "isController": false}, {"data": [[1.70759206E12, 376.78440366972484], [1.70759207E12, 218.28915662650604], [1.70759204E12, 370.8206278026906], [1.70759205E12, 399.5435897435896], [1.70759203E12, 258.0246913580246]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.70759215E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 41.142857142857146, "minX": 1.70759197E12, "maxY": 201.26222222222242, "series": [{"data": [[1.70759198E12, 69.54794520547946], [1.70759199E12, 149.3888888888889], [1.70759197E12, 113.22222222222223]], "isOverall": false, "label": "1", "isController": false}, {"data": [[1.70759199E12, 62.44776119402986], [1.707592E12, 87.33928571428574], [1.70759201E12, 41.142857142857146]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.70759202E12, 93.14361702127661], [1.70759203E12, 82.63749999999997], [1.70759201E12, 83.87878787878786]], "isOverall": false, "label": "4", "isController": false}, {"data": [[1.70759214E12, 151.02139037433156], [1.70759215E12, 91.02272727272728], [1.70759212E12, 175.8571428571429], [1.70759213E12, 166.5424528301888], [1.7075921E12, 201.26222222222242], [1.70759211E12, 167.7333333333333], [1.70759208E12, 194.875], [1.70759209E12, 170.8967136150234], [1.70759207E12, 133.31632653061223]], "isOverall": false, "label": "16", "isController": false}, {"data": [[1.70759206E12, 119.05045871559633], [1.70759207E12, 92.87951807228914], [1.70759204E12, 122.60538116591924], [1.70759205E12, 129.19487179487186], [1.70759203E12, 86.17283950617285]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.70759215E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 16.952380952380953, "minX": 1.70759197E12, "maxY": 66.86666666666662, "series": [{"data": [[1.70759198E12, 17.643835616438356], [1.70759199E12, 17.05555555555555], [1.70759197E12, 19.88888888888889]], "isOverall": false, "label": "1", "isController": false}, {"data": [[1.70759199E12, 18.179104477611947], [1.707592E12, 17.526785714285715], [1.70759201E12, 16.952380952380953]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.70759202E12, 20.143617021276587], [1.70759203E12, 17.962499999999995], [1.70759201E12, 19.734848484848477]], "isOverall": false, "label": "4", "isController": false}, {"data": [[1.70759214E12, 24.042780748663105], [1.70759215E12, 17.20454545454545], [1.70759212E12, 28.896551724137936], [1.70759213E12, 39.297169811320764], [1.7075921E12, 66.86666666666662], [1.70759211E12, 28.542857142857162], [1.70759208E12, 34.73076923076921], [1.70759209E12, 35.16901408450705], [1.70759207E12, 31.3469387755102]], "isOverall": false, "label": "16", "isController": false}, {"data": [[1.70759206E12, 23.972477064220186], [1.70759207E12, 20.253012048192765], [1.70759204E12, 25.565022421524663], [1.70759205E12, 26.435897435897438], [1.70759203E12, 23.518518518518523]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.70759215E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 28.0, "minX": 1.70759197E12, "maxY": 15989.0, "series": [{"data": [[1.70759198E12, 2039.0], [1.70759215E12, 2196.0], [1.70759213E12, 6805.0], [1.70759211E12, 10583.0], [1.70759209E12, 8109.0], [1.70759207E12, 3678.0], [1.70759205E12, 4134.0], [1.70759203E12, 2621.0], [1.70759201E12, 2461.0], [1.70759214E12, 15989.0], [1.70759199E12, 2008.0], [1.70759212E12, 15152.0], [1.70759197E12, 635.0], [1.7075921E12, 5879.0], [1.70759208E12, 6086.0], [1.70759206E12, 3752.0], [1.70759204E12, 3823.0], [1.70759202E12, 2783.0], [1.707592E12, 2308.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.70759198E12, 32.0], [1.70759215E12, 36.0], [1.70759213E12, 54.0], [1.70759211E12, 80.0], [1.70759209E12, 66.0], [1.70759207E12, 33.0], [1.70759205E12, 36.0], [1.70759203E12, 28.0], [1.70759201E12, 28.0], [1.70759214E12, 34.0], [1.70759199E12, 28.0], [1.70759212E12, 81.0], [1.70759197E12, 50.0], [1.7075921E12, 48.0], [1.70759208E12, 79.0], [1.70759206E12, 36.0], [1.70759204E12, 33.0], [1.70759202E12, 33.0], [1.707592E12, 28.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.70759198E12, 213.20000000000002], [1.70759215E12, 460.0], [1.70759213E12, 1469.9000000000003], [1.70759211E12, 1375.6], [1.70759209E12, 1363.1999999999998], [1.70759207E12, 894.8000000000006], [1.70759205E12, 830.8000000000004], [1.70759203E12, 508.4000000000001], [1.70759201E12, 391.19999999999993], [1.70759214E12, 1063.2000000000003], [1.70759199E12, 360.2000000000006], [1.70759212E12, 1586.1999999999998], [1.70759197E12, 635.0], [1.7075921E12, 1740.2000000000003], [1.70759208E12, 1816.6], [1.70759206E12, 875.5], [1.70759204E12, 885.5999999999992], [1.70759202E12, 450.1], [1.707592E12, 348.5]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.70759198E12, 2039.0], [1.70759215E12, 2196.0], [1.70759213E12, 6312.070000000008], [1.70759211E12, 9891.539999999928], [1.70759209E12, 5626.879999999996], [1.70759207E12, 2628.4000000000087], [1.70759205E12, 3935.2799999999984], [1.70759203E12, 1860.2599999999943], [1.70759201E12, 1728.2200000000107], [1.70759214E12, 7995.960000000041], [1.70759199E12, 2008.0], [1.70759212E12, 8511.160000000014], [1.70759197E12, 635.0], [1.7075921E12, 5440.460000000007], [1.70759208E12, 5813.78], [1.70759206E12, 3393.91], [1.70759204E12, 3457.039999999993], [1.70759202E12, 2573.8499999999967], [1.707592E12, 2306.31]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.70759198E12, 90.0], [1.70759215E12, 108.5], [1.70759213E12, 364.0], [1.70759211E12, 425.0], [1.70759209E12, 409.0], [1.70759207E12, 190.0], [1.70759205E12, 231.0], [1.70759203E12, 119.0], [1.70759201E12, 108.0], [1.70759214E12, 268.0], [1.70759199E12, 96.0], [1.70759212E12, 432.0], [1.70759197E12, 84.0], [1.7075921E12, 446.0], [1.70759208E12, 450.0], [1.70759206E12, 215.5], [1.70759204E12, 211.0], [1.70759202E12, 119.0], [1.707592E12, 94.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.70759198E12, 413.5], [1.70759215E12, 623.0], [1.70759213E12, 2490.7499999999995], [1.70759211E12, 2295.949999999997], [1.70759209E12, 3120.999999999999], [1.70759207E12, 1148.0], [1.70759205E12, 1391.1999999999998], [1.70759203E12, 769.4000000000003], [1.70759201E12, 549.0999999999996], [1.70759214E12, 2509.7999999999984], [1.70759199E12, 592.9000000000003], [1.70759212E12, 2374.7999999999984], [1.70759197E12, 635.0], [1.7075921E12, 2210.299999999998], [1.70759208E12, 3028.799999999999], [1.70759206E12, 1262.1], [1.70759204E12, 1152.799999999999], [1.70759202E12, 832.1499999999984], [1.707592E12, 550.7999999999996]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.70759215E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 74.0, "minX": 1.0, "maxY": 500.5, "series": [{"data": [[32.0, 256.5], [33.0, 152.0], [3.0, 397.0], [4.0, 439.5], [5.0, 74.0], [6.0, 96.0], [7.0, 110.0], [8.0, 104.5], [10.0, 121.0], [11.0, 125.0], [12.0, 108.5], [13.0, 89.5], [14.0, 340.5], [15.0, 193.0], [1.0, 500.5], [16.0, 183.5], [17.0, 287.0], [18.0, 123.0], [19.0, 375.0], [20.0, 344.0], [21.0, 363.0], [22.0, 338.0], [23.0, 360.0], [24.0, 393.0], [25.0, 272.0], [26.0, 285.5], [27.0, 325.0], [28.0, 139.0], [29.0, 252.0], [30.0, 223.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 33.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 43.0, "minX": 1.0, "maxY": 310.0, "series": [{"data": [[32.0, 95.0], [33.0, 61.0], [3.0, 165.0], [4.0, 182.0], [5.0, 43.0], [6.0, 44.5], [7.0, 44.0], [8.0, 43.5], [10.0, 46.5], [11.0, 53.0], [12.0, 49.0], [13.0, 43.5], [14.0, 117.5], [15.0, 74.0], [1.0, 310.0], [16.0, 84.5], [17.0, 106.0], [18.0, 50.0], [19.0, 124.0], [20.0, 122.0], [21.0, 122.0], [22.0, 121.0], [23.0, 127.0], [24.0, 123.0], [25.0, 93.0], [26.0, 105.5], [27.0, 117.0], [28.0, 56.5], [29.0, 89.0], [30.0, 85.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 33.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.70759197E12, "maxY": 22.5, "series": [{"data": [[1.70759198E12, 7.3], [1.70759215E12, 4.2], [1.70759213E12, 20.9], [1.70759211E12, 21.0], [1.70759209E12, 21.3], [1.70759207E12, 19.1], [1.70759205E12, 19.5], [1.70759203E12, 16.6], [1.70759201E12, 15.6], [1.70759214E12, 17.6], [1.70759199E12, 8.6], [1.70759212E12, 20.3], [1.70759197E12, 1.0], [1.7075921E12, 22.5], [1.70759208E12, 20.8], [1.70759206E12, 21.6], [1.70759204E12, 22.3], [1.70759202E12, 18.7], [1.707592E12, 11.1]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.70759215E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.9, "minX": 1.70759197E12, "maxY": 22.5, "series": [{"data": [[1.70759198E12, 7.3], [1.70759215E12, 4.4], [1.70759213E12, 21.2], [1.70759211E12, 21.0], [1.70759209E12, 21.3], [1.70759207E12, 18.1], [1.70759205E12, 19.5], [1.70759203E12, 16.1], [1.70759201E12, 15.3], [1.70759214E12, 18.7], [1.70759199E12, 8.5], [1.70759212E12, 20.3], [1.70759197E12, 0.9], [1.7075921E12, 22.5], [1.70759208E12, 20.8], [1.70759206E12, 21.8], [1.70759204E12, 22.3], [1.70759202E12, 18.8], [1.707592E12, 11.2]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.70759215E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.9, "minX": 1.70759197E12, "maxY": 22.5, "series": [{"data": [[1.70759214E12, 18.7], [1.70759215E12, 4.4], [1.70759212E12, 20.3], [1.70759213E12, 21.2], [1.7075921E12, 22.5], [1.70759211E12, 21.0], [1.70759208E12, 20.8], [1.70759209E12, 21.3], [1.70759207E12, 9.8]], "isOverall": false, "label": "16-success", "isController": false}, {"data": [[1.70759198E12, 7.3], [1.70759199E12, 1.8], [1.70759197E12, 0.9]], "isOverall": false, "label": "1-success", "isController": false}, {"data": [[1.70759202E12, 18.8], [1.70759203E12, 8.0], [1.70759201E12, 13.2]], "isOverall": false, "label": "4-success", "isController": false}, {"data": [[1.70759206E12, 21.8], [1.70759207E12, 8.3], [1.70759204E12, 22.3], [1.70759205E12, 19.5], [1.70759203E12, 8.1]], "isOverall": false, "label": "8-success", "isController": false}, {"data": [[1.70759199E12, 6.7], [1.707592E12, 11.2], [1.70759201E12, 2.1]], "isOverall": false, "label": "2-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.70759215E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.9, "minX": 1.70759197E12, "maxY": 22.5, "series": [{"data": [[1.70759198E12, 7.3], [1.70759215E12, 4.4], [1.70759213E12, 21.2], [1.70759211E12, 21.0], [1.70759209E12, 21.3], [1.70759207E12, 18.1], [1.70759205E12, 19.5], [1.70759203E12, 16.1], [1.70759201E12, 15.3], [1.70759214E12, 18.7], [1.70759199E12, 8.5], [1.70759212E12, 20.3], [1.70759197E12, 0.9], [1.7075921E12, 22.5], [1.70759208E12, 20.8], [1.70759206E12, 21.8], [1.70759204E12, 22.3], [1.70759202E12, 18.8], [1.707592E12, 11.2]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.70759215E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

