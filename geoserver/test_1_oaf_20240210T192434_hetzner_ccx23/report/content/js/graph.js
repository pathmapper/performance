/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 28.0, "minX": 0.0, "maxY": 10443.0, "series": [{"data": [[0.0, 29.0], [0.1, 29.0], [0.2, 29.0], [0.3, 29.0], [0.4, 29.0], [0.5, 29.0], [0.6, 29.0], [0.7, 29.0], [0.8, 29.0], [0.9, 29.0], [1.0, 30.0], [1.1, 30.0], [1.2, 30.0], [1.3, 30.0], [1.4, 30.0], [1.5, 30.0], [1.6, 30.0], [1.7, 30.0], [1.8, 30.0], [1.9, 30.0], [2.0, 31.0], [2.1, 31.0], [2.2, 31.0], [2.3, 31.0], [2.4, 31.0], [2.5, 31.0], [2.6, 31.0], [2.7, 31.0], [2.8, 31.0], [2.9, 31.0], [3.0, 34.0], [3.1, 34.0], [3.2, 34.0], [3.3, 34.0], [3.4, 34.0], [3.5, 34.0], [3.6, 34.0], [3.7, 34.0], [3.8, 34.0], [3.9, 34.0], [4.0, 35.0], [4.1, 35.0], [4.2, 35.0], [4.3, 35.0], [4.4, 35.0], [4.5, 35.0], [4.6, 35.0], [4.7, 35.0], [4.8, 35.0], [4.9, 35.0], [5.0, 36.0], [5.1, 36.0], [5.2, 36.0], [5.3, 36.0], [5.4, 36.0], [5.5, 36.0], [5.6, 36.0], [5.7, 36.0], [5.8, 36.0], [5.9, 36.0], [6.0, 37.0], [6.1, 37.0], [6.2, 37.0], [6.3, 37.0], [6.4, 37.0], [6.5, 37.0], [6.6, 37.0], [6.7, 37.0], [6.8, 37.0], [6.9, 37.0], [7.0, 37.0], [7.1, 37.0], [7.2, 37.0], [7.3, 37.0], [7.4, 37.0], [7.5, 37.0], [7.6, 37.0], [7.7, 37.0], [7.8, 37.0], [7.9, 37.0], [8.0, 38.0], [8.1, 38.0], [8.2, 38.0], [8.3, 38.0], [8.4, 38.0], [8.5, 38.0], [8.6, 38.0], [8.7, 38.0], [8.8, 38.0], [8.9, 38.0], [9.0, 38.0], [9.1, 38.0], [9.2, 38.0], [9.3, 38.0], [9.4, 38.0], [9.5, 38.0], [9.6, 38.0], [9.7, 38.0], [9.8, 38.0], [9.9, 38.0], [10.0, 39.0], [10.1, 39.0], [10.2, 39.0], [10.3, 39.0], [10.4, 39.0], [10.5, 39.0], [10.6, 39.0], [10.7, 39.0], [10.8, 39.0], [10.9, 39.0], [11.0, 39.0], [11.1, 39.0], [11.2, 39.0], [11.3, 39.0], [11.4, 39.0], [11.5, 39.0], [11.6, 39.0], [11.7, 39.0], [11.8, 39.0], [11.9, 39.0], [12.0, 41.0], [12.1, 41.0], [12.2, 41.0], [12.3, 41.0], [12.4, 41.0], [12.5, 41.0], [12.6, 41.0], [12.7, 41.0], [12.8, 41.0], [12.9, 41.0], [13.0, 42.0], [13.1, 42.0], [13.2, 42.0], [13.3, 42.0], [13.4, 42.0], [13.5, 42.0], [13.6, 42.0], [13.7, 42.0], [13.8, 42.0], [13.9, 42.0], [14.0, 43.0], [14.1, 43.0], [14.2, 43.0], [14.3, 43.0], [14.4, 43.0], [14.5, 43.0], [14.6, 43.0], [14.7, 43.0], [14.8, 43.0], [14.9, 43.0], [15.0, 45.0], [15.1, 45.0], [15.2, 45.0], [15.3, 45.0], [15.4, 45.0], [15.5, 45.0], [15.6, 45.0], [15.7, 45.0], [15.8, 45.0], [15.9, 45.0], [16.0, 45.0], [16.1, 45.0], [16.2, 45.0], [16.3, 45.0], [16.4, 45.0], [16.5, 45.0], [16.6, 45.0], [16.7, 45.0], [16.8, 45.0], [16.9, 45.0], [17.0, 46.0], [17.1, 46.0], [17.2, 46.0], [17.3, 46.0], [17.4, 46.0], [17.5, 46.0], [17.6, 46.0], [17.7, 46.0], [17.8, 46.0], [17.9, 46.0], [18.0, 47.0], [18.1, 47.0], [18.2, 47.0], [18.3, 47.0], [18.4, 47.0], [18.5, 47.0], [18.6, 47.0], [18.7, 47.0], [18.8, 47.0], [18.9, 47.0], [19.0, 49.0], [19.1, 49.0], [19.2, 49.0], [19.3, 49.0], [19.4, 49.0], [19.5, 49.0], [19.6, 49.0], [19.7, 49.0], [19.8, 49.0], [19.9, 49.0], [20.0, 50.0], [20.1, 50.0], [20.2, 50.0], [20.3, 50.0], [20.4, 50.0], [20.5, 50.0], [20.6, 50.0], [20.7, 50.0], [20.8, 50.0], [20.9, 50.0], [21.0, 51.0], [21.1, 51.0], [21.2, 51.0], [21.3, 51.0], [21.4, 51.0], [21.5, 51.0], [21.6, 51.0], [21.7, 51.0], [21.8, 51.0], [21.9, 51.0], [22.0, 53.0], [22.1, 53.0], [22.2, 53.0], [22.3, 53.0], [22.4, 53.0], [22.5, 53.0], [22.6, 53.0], [22.7, 53.0], [22.8, 53.0], [22.9, 53.0], [23.0, 53.0], [23.1, 53.0], [23.2, 53.0], [23.3, 53.0], [23.4, 53.0], [23.5, 53.0], [23.6, 53.0], [23.7, 53.0], [23.8, 53.0], [23.9, 53.0], [24.0, 55.0], [24.1, 55.0], [24.2, 55.0], [24.3, 55.0], [24.4, 55.0], [24.5, 55.0], [24.6, 55.0], [24.7, 55.0], [24.8, 55.0], [24.9, 55.0], [25.0, 55.0], [25.1, 55.0], [25.2, 55.0], [25.3, 55.0], [25.4, 55.0], [25.5, 55.0], [25.6, 55.0], [25.7, 55.0], [25.8, 55.0], [25.9, 55.0], [26.0, 61.0], [26.1, 61.0], [26.2, 61.0], [26.3, 61.0], [26.4, 61.0], [26.5, 61.0], [26.6, 61.0], [26.7, 61.0], [26.8, 61.0], [26.9, 61.0], [27.0, 61.0], [27.1, 61.0], [27.2, 61.0], [27.3, 61.0], [27.4, 61.0], [27.5, 61.0], [27.6, 61.0], [27.7, 61.0], [27.8, 61.0], [27.9, 61.0], [28.0, 62.0], [28.1, 62.0], [28.2, 62.0], [28.3, 62.0], [28.4, 62.0], [28.5, 62.0], [28.6, 62.0], [28.7, 62.0], [28.8, 62.0], [28.9, 62.0], [29.0, 63.0], [29.1, 63.0], [29.2, 63.0], [29.3, 63.0], [29.4, 63.0], [29.5, 63.0], [29.6, 63.0], [29.7, 63.0], [29.8, 63.0], [29.9, 63.0], [30.0, 63.0], [30.1, 63.0], [30.2, 63.0], [30.3, 63.0], [30.4, 63.0], [30.5, 63.0], [30.6, 63.0], [30.7, 63.0], [30.8, 63.0], [30.9, 63.0], [31.0, 64.0], [31.1, 64.0], [31.2, 64.0], [31.3, 64.0], [31.4, 64.0], [31.5, 64.0], [31.6, 64.0], [31.7, 64.0], [31.8, 64.0], [31.9, 64.0], [32.0, 66.0], [32.1, 66.0], [32.2, 66.0], [32.3, 66.0], [32.4, 66.0], [32.5, 66.0], [32.6, 66.0], [32.7, 66.0], [32.8, 66.0], [32.9, 66.0], [33.0, 67.0], [33.1, 67.0], [33.2, 67.0], [33.3, 67.0], [33.4, 67.0], [33.5, 67.0], [33.6, 67.0], [33.7, 67.0], [33.8, 67.0], [33.9, 67.0], [34.0, 67.0], [34.1, 67.0], [34.2, 67.0], [34.3, 67.0], [34.4, 67.0], [34.5, 67.0], [34.6, 67.0], [34.7, 67.0], [34.8, 67.0], [34.9, 67.0], [35.0, 69.0], [35.1, 69.0], [35.2, 69.0], [35.3, 69.0], [35.4, 69.0], [35.5, 69.0], [35.6, 69.0], [35.7, 69.0], [35.8, 69.0], [35.9, 69.0], [36.0, 72.0], [36.1, 72.0], [36.2, 72.0], [36.3, 72.0], [36.4, 72.0], [36.5, 72.0], [36.6, 72.0], [36.7, 72.0], [36.8, 72.0], [36.9, 72.0], [37.0, 73.0], [37.1, 73.0], [37.2, 73.0], [37.3, 73.0], [37.4, 73.0], [37.5, 73.0], [37.6, 73.0], [37.7, 73.0], [37.8, 73.0], [37.9, 73.0], [38.0, 73.0], [38.1, 73.0], [38.2, 73.0], [38.3, 73.0], [38.4, 73.0], [38.5, 73.0], [38.6, 73.0], [38.7, 73.0], [38.8, 73.0], [38.9, 73.0], [39.0, 75.0], [39.1, 75.0], [39.2, 75.0], [39.3, 75.0], [39.4, 75.0], [39.5, 75.0], [39.6, 75.0], [39.7, 75.0], [39.8, 75.0], [39.9, 75.0], [40.0, 76.0], [40.1, 76.0], [40.2, 76.0], [40.3, 76.0], [40.4, 76.0], [40.5, 76.0], [40.6, 76.0], [40.7, 76.0], [40.8, 76.0], [40.9, 76.0], [41.0, 77.0], [41.1, 77.0], [41.2, 77.0], [41.3, 77.0], [41.4, 77.0], [41.5, 77.0], [41.6, 77.0], [41.7, 77.0], [41.8, 77.0], [41.9, 77.0], [42.0, 77.0], [42.1, 77.0], [42.2, 77.0], [42.3, 77.0], [42.4, 77.0], [42.5, 77.0], [42.6, 77.0], [42.7, 77.0], [42.8, 77.0], [42.9, 77.0], [43.0, 77.0], [43.1, 77.0], [43.2, 77.0], [43.3, 77.0], [43.4, 77.0], [43.5, 77.0], [43.6, 77.0], [43.7, 77.0], [43.8, 77.0], [43.9, 77.0], [44.0, 77.0], [44.1, 77.0], [44.2, 77.0], [44.3, 77.0], [44.4, 77.0], [44.5, 77.0], [44.6, 77.0], [44.7, 77.0], [44.8, 77.0], [44.9, 77.0], [45.0, 79.0], [45.1, 79.0], [45.2, 79.0], [45.3, 79.0], [45.4, 79.0], [45.5, 79.0], [45.6, 79.0], [45.7, 79.0], [45.8, 79.0], [45.9, 79.0], [46.0, 80.0], [46.1, 80.0], [46.2, 80.0], [46.3, 80.0], [46.4, 80.0], [46.5, 80.0], [46.6, 80.0], [46.7, 80.0], [46.8, 80.0], [46.9, 80.0], [47.0, 81.0], [47.1, 81.0], [47.2, 81.0], [47.3, 81.0], [47.4, 81.0], [47.5, 81.0], [47.6, 81.0], [47.7, 81.0], [47.8, 81.0], [47.9, 81.0], [48.0, 83.0], [48.1, 83.0], [48.2, 83.0], [48.3, 83.0], [48.4, 83.0], [48.5, 83.0], [48.6, 83.0], [48.7, 83.0], [48.8, 83.0], [48.9, 83.0], [49.0, 85.0], [49.1, 85.0], [49.2, 85.0], [49.3, 85.0], [49.4, 85.0], [49.5, 85.0], [49.6, 85.0], [49.7, 85.0], [49.8, 85.0], [49.9, 85.0], [50.0, 86.0], [50.1, 86.0], [50.2, 86.0], [50.3, 86.0], [50.4, 86.0], [50.5, 86.0], [50.6, 86.0], [50.7, 86.0], [50.8, 86.0], [50.9, 86.0], [51.0, 86.0], [51.1, 86.0], [51.2, 86.0], [51.3, 86.0], [51.4, 86.0], [51.5, 86.0], [51.6, 86.0], [51.7, 86.0], [51.8, 86.0], [51.9, 86.0], [52.0, 87.0], [52.1, 87.0], [52.2, 87.0], [52.3, 87.0], [52.4, 87.0], [52.5, 87.0], [52.6, 87.0], [52.7, 87.0], [52.8, 87.0], [52.9, 87.0], [53.0, 88.0], [53.1, 88.0], [53.2, 88.0], [53.3, 88.0], [53.4, 88.0], [53.5, 88.0], [53.6, 88.0], [53.7, 88.0], [53.8, 88.0], [53.9, 88.0], [54.0, 89.0], [54.1, 89.0], [54.2, 89.0], [54.3, 89.0], [54.4, 89.0], [54.5, 89.0], [54.6, 89.0], [54.7, 89.0], [54.8, 89.0], [54.9, 89.0], [55.0, 96.0], [55.1, 96.0], [55.2, 96.0], [55.3, 96.0], [55.4, 96.0], [55.5, 96.0], [55.6, 96.0], [55.7, 96.0], [55.8, 96.0], [55.9, 96.0], [56.0, 99.0], [56.1, 99.0], [56.2, 99.0], [56.3, 99.0], [56.4, 99.0], [56.5, 99.0], [56.6, 99.0], [56.7, 99.0], [56.8, 99.0], [56.9, 99.0], [57.0, 101.0], [57.1, 101.0], [57.2, 101.0], [57.3, 101.0], [57.4, 101.0], [57.5, 101.0], [57.6, 101.0], [57.7, 101.0], [57.8, 101.0], [57.9, 101.0], [58.0, 103.0], [58.1, 103.0], [58.2, 103.0], [58.3, 103.0], [58.4, 103.0], [58.5, 103.0], [58.6, 103.0], [58.7, 103.0], [58.8, 103.0], [58.9, 103.0], [59.0, 103.0], [59.1, 103.0], [59.2, 103.0], [59.3, 103.0], [59.4, 103.0], [59.5, 103.0], [59.6, 103.0], [59.7, 103.0], [59.8, 103.0], [59.9, 103.0], [60.0, 103.0], [60.1, 103.0], [60.2, 103.0], [60.3, 103.0], [60.4, 103.0], [60.5, 103.0], [60.6, 103.0], [60.7, 103.0], [60.8, 103.0], [60.9, 103.0], [61.0, 104.0], [61.1, 104.0], [61.2, 104.0], [61.3, 104.0], [61.4, 104.0], [61.5, 104.0], [61.6, 104.0], [61.7, 104.0], [61.8, 104.0], [61.9, 104.0], [62.0, 105.0], [62.1, 105.0], [62.2, 105.0], [62.3, 105.0], [62.4, 105.0], [62.5, 105.0], [62.6, 105.0], [62.7, 105.0], [62.8, 105.0], [62.9, 105.0], [63.0, 113.0], [63.1, 113.0], [63.2, 113.0], [63.3, 113.0], [63.4, 113.0], [63.5, 113.0], [63.6, 113.0], [63.7, 113.0], [63.8, 113.0], [63.9, 113.0], [64.0, 117.0], [64.1, 117.0], [64.2, 117.0], [64.3, 117.0], [64.4, 117.0], [64.5, 117.0], [64.6, 117.0], [64.7, 117.0], [64.8, 117.0], [64.9, 117.0], [65.0, 119.0], [65.1, 119.0], [65.2, 119.0], [65.3, 119.0], [65.4, 119.0], [65.5, 119.0], [65.6, 119.0], [65.7, 119.0], [65.8, 119.0], [65.9, 119.0], [66.0, 121.0], [66.1, 121.0], [66.2, 121.0], [66.3, 121.0], [66.4, 121.0], [66.5, 121.0], [66.6, 121.0], [66.7, 121.0], [66.8, 121.0], [66.9, 121.0], [67.0, 123.0], [67.1, 123.0], [67.2, 123.0], [67.3, 123.0], [67.4, 123.0], [67.5, 123.0], [67.6, 123.0], [67.7, 123.0], [67.8, 123.0], [67.9, 123.0], [68.0, 124.0], [68.1, 124.0], [68.2, 124.0], [68.3, 124.0], [68.4, 124.0], [68.5, 124.0], [68.6, 124.0], [68.7, 124.0], [68.8, 124.0], [68.9, 124.0], [69.0, 126.0], [69.1, 126.0], [69.2, 126.0], [69.3, 126.0], [69.4, 126.0], [69.5, 126.0], [69.6, 126.0], [69.7, 126.0], [69.8, 126.0], [69.9, 126.0], [70.0, 127.0], [70.1, 127.0], [70.2, 127.0], [70.3, 127.0], [70.4, 127.0], [70.5, 127.0], [70.6, 127.0], [70.7, 127.0], [70.8, 127.0], [70.9, 127.0], [71.0, 132.0], [71.1, 132.0], [71.2, 132.0], [71.3, 132.0], [71.4, 132.0], [71.5, 132.0], [71.6, 132.0], [71.7, 132.0], [71.8, 132.0], [71.9, 132.0], [72.0, 133.0], [72.1, 133.0], [72.2, 133.0], [72.3, 133.0], [72.4, 133.0], [72.5, 133.0], [72.6, 133.0], [72.7, 133.0], [72.8, 133.0], [72.9, 133.0], [73.0, 134.0], [73.1, 134.0], [73.2, 134.0], [73.3, 134.0], [73.4, 134.0], [73.5, 134.0], [73.6, 134.0], [73.7, 134.0], [73.8, 134.0], [73.9, 134.0], [74.0, 135.0], [74.1, 135.0], [74.2, 135.0], [74.3, 135.0], [74.4, 135.0], [74.5, 135.0], [74.6, 135.0], [74.7, 135.0], [74.8, 135.0], [74.9, 135.0], [75.0, 141.0], [75.1, 141.0], [75.2, 141.0], [75.3, 141.0], [75.4, 141.0], [75.5, 141.0], [75.6, 141.0], [75.7, 141.0], [75.8, 141.0], [75.9, 141.0], [76.0, 144.0], [76.1, 144.0], [76.2, 144.0], [76.3, 144.0], [76.4, 144.0], [76.5, 144.0], [76.6, 144.0], [76.7, 144.0], [76.8, 144.0], [76.9, 144.0], [77.0, 144.0], [77.1, 144.0], [77.2, 144.0], [77.3, 144.0], [77.4, 144.0], [77.5, 144.0], [77.6, 144.0], [77.7, 144.0], [77.8, 144.0], [77.9, 144.0], [78.0, 147.0], [78.1, 147.0], [78.2, 147.0], [78.3, 147.0], [78.4, 147.0], [78.5, 147.0], [78.6, 147.0], [78.7, 147.0], [78.8, 147.0], [78.9, 147.0], [79.0, 148.0], [79.1, 148.0], [79.2, 148.0], [79.3, 148.0], [79.4, 148.0], [79.5, 148.0], [79.6, 148.0], [79.7, 148.0], [79.8, 148.0], [79.9, 148.0], [80.0, 152.0], [80.1, 152.0], [80.2, 152.0], [80.3, 152.0], [80.4, 152.0], [80.5, 152.0], [80.6, 152.0], [80.7, 152.0], [80.8, 152.0], [80.9, 152.0], [81.0, 172.0], [81.1, 172.0], [81.2, 172.0], [81.3, 172.0], [81.4, 172.0], [81.5, 172.0], [81.6, 172.0], [81.7, 172.0], [81.8, 172.0], [81.9, 172.0], [82.0, 172.0], [82.1, 172.0], [82.2, 172.0], [82.3, 172.0], [82.4, 172.0], [82.5, 172.0], [82.6, 172.0], [82.7, 172.0], [82.8, 172.0], [82.9, 172.0], [83.0, 181.0], [83.1, 181.0], [83.2, 181.0], [83.3, 181.0], [83.4, 181.0], [83.5, 181.0], [83.6, 181.0], [83.7, 181.0], [83.8, 181.0], [83.9, 181.0], [84.0, 181.0], [84.1, 181.0], [84.2, 181.0], [84.3, 181.0], [84.4, 181.0], [84.5, 181.0], [84.6, 181.0], [84.7, 181.0], [84.8, 181.0], [84.9, 181.0], [85.0, 204.0], [85.1, 204.0], [85.2, 204.0], [85.3, 204.0], [85.4, 204.0], [85.5, 204.0], [85.6, 204.0], [85.7, 204.0], [85.8, 204.0], [85.9, 204.0], [86.0, 238.0], [86.1, 238.0], [86.2, 238.0], [86.3, 238.0], [86.4, 238.0], [86.5, 238.0], [86.6, 238.0], [86.7, 238.0], [86.8, 238.0], [86.9, 238.0], [87.0, 258.0], [87.1, 258.0], [87.2, 258.0], [87.3, 258.0], [87.4, 258.0], [87.5, 258.0], [87.6, 258.0], [87.7, 258.0], [87.8, 258.0], [87.9, 258.0], [88.0, 291.0], [88.1, 291.0], [88.2, 291.0], [88.3, 291.0], [88.4, 291.0], [88.5, 291.0], [88.6, 291.0], [88.7, 291.0], [88.8, 291.0], [88.9, 291.0], [89.0, 413.0], [89.1, 413.0], [89.2, 413.0], [89.3, 413.0], [89.4, 413.0], [89.5, 413.0], [89.6, 413.0], [89.7, 413.0], [89.8, 413.0], [89.9, 413.0], [90.0, 419.0], [90.1, 419.0], [90.2, 419.0], [90.3, 419.0], [90.4, 419.0], [90.5, 419.0], [90.6, 419.0], [90.7, 419.0], [90.8, 419.0], [90.9, 419.0], [91.0, 462.0], [91.1, 462.0], [91.2, 462.0], [91.3, 462.0], [91.4, 462.0], [91.5, 462.0], [91.6, 462.0], [91.7, 462.0], [91.8, 462.0], [91.9, 462.0], [92.0, 462.0], [92.1, 462.0], [92.2, 462.0], [92.3, 462.0], [92.4, 462.0], [92.5, 462.0], [92.6, 462.0], [92.7, 462.0], [92.8, 462.0], [92.9, 462.0], [93.0, 488.0], [93.1, 488.0], [93.2, 488.0], [93.3, 488.0], [93.4, 488.0], [93.5, 488.0], [93.6, 488.0], [93.7, 488.0], [93.8, 488.0], [93.9, 488.0], [94.0, 494.0], [94.1, 494.0], [94.2, 494.0], [94.3, 494.0], [94.4, 494.0], [94.5, 494.0], [94.6, 494.0], [94.7, 494.0], [94.8, 494.0], [94.9, 494.0], [95.0, 621.0], [95.1, 621.0], [95.2, 621.0], [95.3, 621.0], [95.4, 621.0], [95.5, 621.0], [95.6, 621.0], [95.7, 621.0], [95.8, 621.0], [95.9, 621.0], [96.0, 626.0], [96.1, 626.0], [96.2, 626.0], [96.3, 626.0], [96.4, 626.0], [96.5, 626.0], [96.6, 626.0], [96.7, 626.0], [96.8, 626.0], [96.9, 626.0], [97.0, 864.0], [97.1, 864.0], [97.2, 864.0], [97.3, 864.0], [97.4, 864.0], [97.5, 864.0], [97.6, 864.0], [97.7, 864.0], [97.8, 864.0], [97.9, 864.0], [98.0, 1981.0], [98.1, 1981.0], [98.2, 1981.0], [98.3, 1981.0], [98.4, 1981.0], [98.5, 1981.0], [98.6, 1981.0], [98.7, 1981.0], [98.8, 1981.0], [98.9, 1981.0], [99.0, 2041.0], [99.1, 2041.0], [99.2, 2041.0], [99.3, 2041.0], [99.4, 2041.0], [99.5, 2041.0], [99.6, 2041.0], [99.7, 2041.0], [99.8, 2041.0], [99.9, 2041.0]], "isOverall": false, "label": "1", "isController": false}, {"data": [[0.0, 29.0], [0.1, 29.0], [0.2, 29.0], [0.3, 29.0], [0.4, 29.0], [0.5, 30.0], [0.6, 30.0], [0.7, 30.0], [0.8, 30.0], [0.9, 30.0], [1.0, 32.0], [1.1, 32.0], [1.2, 32.0], [1.3, 32.0], [1.4, 32.0], [1.5, 32.0], [1.6, 32.0], [1.7, 32.0], [1.8, 32.0], [1.9, 32.0], [2.0, 33.0], [2.1, 33.0], [2.2, 33.0], [2.3, 33.0], [2.4, 33.0], [2.5, 33.0], [2.6, 33.0], [2.7, 33.0], [2.8, 33.0], [2.9, 33.0], [3.0, 34.0], [3.1, 34.0], [3.2, 34.0], [3.3, 34.0], [3.4, 34.0], [3.5, 34.0], [3.6, 34.0], [3.7, 34.0], [3.8, 34.0], [3.9, 34.0], [4.0, 35.0], [4.1, 35.0], [4.2, 35.0], [4.3, 35.0], [4.4, 35.0], [4.5, 35.0], [4.6, 35.0], [4.7, 35.0], [4.8, 35.0], [4.9, 35.0], [5.0, 35.0], [5.1, 35.0], [5.2, 35.0], [5.3, 35.0], [5.4, 35.0], [5.5, 35.0], [5.6, 35.0], [5.7, 35.0], [5.8, 35.0], [5.9, 35.0], [6.0, 37.0], [6.1, 37.0], [6.2, 37.0], [6.3, 37.0], [6.4, 37.0], [6.5, 37.0], [6.6, 37.0], [6.7, 37.0], [6.8, 37.0], [6.9, 37.0], [7.0, 39.0], [7.1, 39.0], [7.2, 39.0], [7.3, 39.0], [7.4, 39.0], [7.5, 40.0], [7.6, 40.0], [7.7, 40.0], [7.8, 40.0], [7.9, 40.0], [8.0, 40.0], [8.1, 40.0], [8.2, 40.0], [8.3, 40.0], [8.4, 40.0], [8.5, 40.0], [8.6, 40.0], [8.7, 40.0], [8.8, 40.0], [8.9, 40.0], [9.0, 41.0], [9.1, 41.0], [9.2, 41.0], [9.3, 41.0], [9.4, 41.0], [9.5, 41.0], [9.6, 41.0], [9.7, 41.0], [9.8, 41.0], [9.9, 41.0], [10.0, 43.0], [10.1, 43.0], [10.2, 43.0], [10.3, 43.0], [10.4, 43.0], [10.5, 43.0], [10.6, 43.0], [10.7, 43.0], [10.8, 43.0], [10.9, 43.0], [11.0, 44.0], [11.1, 44.0], [11.2, 44.0], [11.3, 44.0], [11.4, 44.0], [11.5, 44.0], [11.6, 44.0], [11.7, 44.0], [11.8, 44.0], [11.9, 44.0], [12.0, 45.0], [12.1, 45.0], [12.2, 45.0], [12.3, 45.0], [12.4, 45.0], [12.5, 46.0], [12.6, 46.0], [12.7, 46.0], [12.8, 46.0], [12.9, 46.0], [13.0, 46.0], [13.1, 46.0], [13.2, 46.0], [13.3, 46.0], [13.4, 46.0], [13.5, 47.0], [13.6, 47.0], [13.7, 47.0], [13.8, 47.0], [13.9, 47.0], [14.0, 47.0], [14.1, 47.0], [14.2, 47.0], [14.3, 47.0], [14.4, 47.0], [14.5, 48.0], [14.6, 48.0], [14.7, 48.0], [14.8, 48.0], [14.9, 48.0], [15.0, 48.0], [15.1, 48.0], [15.2, 48.0], [15.3, 48.0], [15.4, 48.0], [15.5, 52.0], [15.6, 52.0], [15.7, 52.0], [15.8, 52.0], [15.9, 52.0], [16.0, 53.0], [16.1, 53.0], [16.2, 53.0], [16.3, 53.0], [16.4, 53.0], [16.5, 53.0], [16.6, 53.0], [16.7, 53.0], [16.8, 53.0], [16.9, 53.0], [17.0, 53.0], [17.1, 53.0], [17.2, 53.0], [17.3, 53.0], [17.4, 53.0], [17.5, 53.0], [17.6, 53.0], [17.7, 53.0], [17.8, 53.0], [17.9, 53.0], [18.0, 53.0], [18.1, 53.0], [18.2, 53.0], [18.3, 53.0], [18.4, 53.0], [18.5, 54.0], [18.6, 54.0], [18.7, 54.0], [18.8, 54.0], [18.9, 54.0], [19.0, 54.0], [19.1, 54.0], [19.2, 54.0], [19.3, 54.0], [19.4, 54.0], [19.5, 55.0], [19.6, 55.0], [19.7, 55.0], [19.8, 55.0], [19.9, 55.0], [20.0, 55.0], [20.1, 55.0], [20.2, 55.0], [20.3, 55.0], [20.4, 55.0], [20.5, 57.0], [20.6, 57.0], [20.7, 57.0], [20.8, 57.0], [20.9, 57.0], [21.0, 57.0], [21.1, 57.0], [21.2, 57.0], [21.3, 57.0], [21.4, 57.0], [21.5, 57.0], [21.6, 57.0], [21.7, 57.0], [21.8, 57.0], [21.9, 57.0], [22.0, 59.0], [22.1, 59.0], [22.2, 59.0], [22.3, 59.0], [22.4, 59.0], [22.5, 59.0], [22.6, 59.0], [22.7, 59.0], [22.8, 59.0], [22.9, 59.0], [23.0, 60.0], [23.1, 60.0], [23.2, 60.0], [23.3, 60.0], [23.4, 60.0], [23.5, 61.0], [23.6, 61.0], [23.7, 61.0], [23.8, 61.0], [23.9, 61.0], [24.0, 61.0], [24.1, 61.0], [24.2, 61.0], [24.3, 61.0], [24.4, 61.0], [24.5, 61.0], [24.6, 61.0], [24.7, 61.0], [24.8, 61.0], [24.9, 61.0], [25.0, 62.0], [25.1, 62.0], [25.2, 62.0], [25.3, 62.0], [25.4, 62.0], [25.5, 62.0], [25.6, 62.0], [25.7, 62.0], [25.8, 62.0], [25.9, 62.0], [26.0, 62.0], [26.1, 62.0], [26.2, 62.0], [26.3, 62.0], [26.4, 62.0], [26.5, 63.0], [26.6, 63.0], [26.7, 63.0], [26.8, 63.0], [26.9, 63.0], [27.0, 63.0], [27.1, 63.0], [27.2, 63.0], [27.3, 63.0], [27.4, 63.0], [27.5, 64.0], [27.6, 64.0], [27.7, 64.0], [27.8, 64.0], [27.9, 64.0], [28.0, 65.0], [28.1, 65.0], [28.2, 65.0], [28.3, 65.0], [28.4, 65.0], [28.5, 66.0], [28.6, 66.0], [28.7, 66.0], [28.8, 66.0], [28.9, 66.0], [29.0, 66.0], [29.1, 66.0], [29.2, 66.0], [29.3, 66.0], [29.4, 66.0], [29.5, 66.0], [29.6, 66.0], [29.7, 66.0], [29.8, 66.0], [29.9, 66.0], [30.0, 66.0], [30.1, 66.0], [30.2, 66.0], [30.3, 66.0], [30.4, 66.0], [30.5, 66.0], [30.6, 66.0], [30.7, 66.0], [30.8, 66.0], [30.9, 66.0], [31.0, 67.0], [31.1, 67.0], [31.2, 67.0], [31.3, 67.0], [31.4, 67.0], [31.5, 68.0], [31.6, 68.0], [31.7, 68.0], [31.8, 68.0], [31.9, 68.0], [32.0, 69.0], [32.1, 69.0], [32.2, 69.0], [32.3, 69.0], [32.4, 69.0], [32.5, 69.0], [32.6, 69.0], [32.7, 69.0], [32.8, 69.0], [32.9, 69.0], [33.0, 69.0], [33.1, 69.0], [33.2, 69.0], [33.3, 69.0], [33.4, 69.0], [33.5, 70.0], [33.6, 70.0], [33.7, 70.0], [33.8, 70.0], [33.9, 70.0], [34.0, 70.0], [34.1, 70.0], [34.2, 70.0], [34.3, 70.0], [34.4, 70.0], [34.5, 73.0], [34.6, 73.0], [34.7, 73.0], [34.8, 73.0], [34.9, 73.0], [35.0, 74.0], [35.1, 74.0], [35.2, 74.0], [35.3, 74.0], [35.4, 74.0], [35.5, 75.0], [35.6, 75.0], [35.7, 75.0], [35.8, 75.0], [35.9, 75.0], [36.0, 75.0], [36.1, 75.0], [36.2, 75.0], [36.3, 75.0], [36.4, 75.0], [36.5, 76.0], [36.6, 76.0], [36.7, 76.0], [36.8, 76.0], [36.9, 76.0], [37.0, 76.0], [37.1, 76.0], [37.2, 76.0], [37.3, 76.0], [37.4, 76.0], [37.5, 77.0], [37.6, 77.0], [37.7, 77.0], [37.8, 77.0], [37.9, 77.0], [38.0, 77.0], [38.1, 77.0], [38.2, 77.0], [38.3, 77.0], [38.4, 77.0], [38.5, 77.0], [38.6, 77.0], [38.7, 77.0], [38.8, 77.0], [38.9, 77.0], [39.0, 78.0], [39.1, 78.0], [39.2, 78.0], [39.3, 78.0], [39.4, 78.0], [39.5, 78.0], [39.6, 78.0], [39.7, 78.0], [39.8, 78.0], [39.9, 78.0], [40.0, 79.0], [40.1, 79.0], [40.2, 79.0], [40.3, 79.0], [40.4, 79.0], [40.5, 79.0], [40.6, 79.0], [40.7, 79.0], [40.8, 79.0], [40.9, 79.0], [41.0, 79.0], [41.1, 79.0], [41.2, 79.0], [41.3, 79.0], [41.4, 79.0], [41.5, 79.0], [41.6, 79.0], [41.7, 79.0], [41.8, 79.0], [41.9, 79.0], [42.0, 80.0], [42.1, 80.0], [42.2, 80.0], [42.3, 80.0], [42.4, 80.0], [42.5, 80.0], [42.6, 80.0], [42.7, 80.0], [42.8, 80.0], [42.9, 80.0], [43.0, 81.0], [43.1, 81.0], [43.2, 81.0], [43.3, 81.0], [43.4, 81.0], [43.5, 81.0], [43.6, 81.0], [43.7, 81.0], [43.8, 81.0], [43.9, 81.0], [44.0, 82.0], [44.1, 82.0], [44.2, 82.0], [44.3, 82.0], [44.4, 82.0], [44.5, 82.0], [44.6, 82.0], [44.7, 82.0], [44.8, 82.0], [44.9, 82.0], [45.0, 82.0], [45.1, 82.0], [45.2, 82.0], [45.3, 82.0], [45.4, 82.0], [45.5, 84.0], [45.6, 84.0], [45.7, 84.0], [45.8, 84.0], [45.9, 84.0], [46.0, 85.0], [46.1, 85.0], [46.2, 85.0], [46.3, 85.0], [46.4, 85.0], [46.5, 86.0], [46.6, 86.0], [46.7, 86.0], [46.8, 86.0], [46.9, 86.0], [47.0, 87.0], [47.1, 87.0], [47.2, 87.0], [47.3, 87.0], [47.4, 87.0], [47.5, 88.0], [47.6, 88.0], [47.7, 88.0], [47.8, 88.0], [47.9, 88.0], [48.0, 89.0], [48.1, 89.0], [48.2, 89.0], [48.3, 89.0], [48.4, 89.0], [48.5, 89.0], [48.6, 89.0], [48.7, 89.0], [48.8, 89.0], [48.9, 89.0], [49.0, 89.0], [49.1, 89.0], [49.2, 89.0], [49.3, 89.0], [49.4, 89.0], [49.5, 89.0], [49.6, 89.0], [49.7, 89.0], [49.8, 89.0], [49.9, 89.0], [50.0, 90.0], [50.1, 90.0], [50.2, 90.0], [50.3, 90.0], [50.4, 90.0], [50.5, 92.0], [50.6, 92.0], [50.7, 92.0], [50.8, 92.0], [50.9, 92.0], [51.0, 92.0], [51.1, 92.0], [51.2, 92.0], [51.3, 92.0], [51.4, 92.0], [51.5, 92.0], [51.6, 92.0], [51.7, 92.0], [51.8, 92.0], [51.9, 92.0], [52.0, 92.0], [52.1, 92.0], [52.2, 92.0], [52.3, 92.0], [52.4, 92.0], [52.5, 95.0], [52.6, 95.0], [52.7, 95.0], [52.8, 95.0], [52.9, 95.0], [53.0, 96.0], [53.1, 96.0], [53.2, 96.0], [53.3, 96.0], [53.4, 96.0], [53.5, 96.0], [53.6, 96.0], [53.7, 96.0], [53.8, 96.0], [53.9, 96.0], [54.0, 97.0], [54.1, 97.0], [54.2, 97.0], [54.3, 97.0], [54.4, 97.0], [54.5, 98.0], [54.6, 98.0], [54.7, 98.0], [54.8, 98.0], [54.9, 98.0], [55.0, 99.0], [55.1, 99.0], [55.2, 99.0], [55.3, 99.0], [55.4, 99.0], [55.5, 99.0], [55.6, 99.0], [55.7, 99.0], [55.8, 99.0], [55.9, 99.0], [56.0, 100.0], [56.1, 100.0], [56.2, 100.0], [56.3, 100.0], [56.4, 100.0], [56.5, 100.0], [56.6, 100.0], [56.7, 100.0], [56.8, 100.0], [56.9, 100.0], [57.0, 100.0], [57.1, 100.0], [57.2, 100.0], [57.3, 100.0], [57.4, 100.0], [57.5, 100.0], [57.6, 100.0], [57.7, 100.0], [57.8, 100.0], [57.9, 100.0], [58.0, 101.0], [58.1, 101.0], [58.2, 101.0], [58.3, 101.0], [58.4, 101.0], [58.5, 101.0], [58.6, 101.0], [58.7, 101.0], [58.8, 101.0], [58.9, 101.0], [59.0, 101.0], [59.1, 101.0], [59.2, 101.0], [59.3, 101.0], [59.4, 101.0], [59.5, 103.0], [59.6, 103.0], [59.7, 103.0], [59.8, 103.0], [59.9, 103.0], [60.0, 104.0], [60.1, 104.0], [60.2, 104.0], [60.3, 104.0], [60.4, 104.0], [60.5, 104.0], [60.6, 104.0], [60.7, 104.0], [60.8, 104.0], [60.9, 104.0], [61.0, 104.0], [61.1, 104.0], [61.2, 104.0], [61.3, 104.0], [61.4, 104.0], [61.5, 104.0], [61.6, 104.0], [61.7, 104.0], [61.8, 104.0], [61.9, 104.0], [62.0, 107.0], [62.1, 107.0], [62.2, 107.0], [62.3, 107.0], [62.4, 107.0], [62.5, 110.0], [62.6, 110.0], [62.7, 110.0], [62.8, 110.0], [62.9, 110.0], [63.0, 111.0], [63.1, 111.0], [63.2, 111.0], [63.3, 111.0], [63.4, 111.0], [63.5, 111.0], [63.6, 111.0], [63.7, 111.0], [63.8, 111.0], [63.9, 111.0], [64.0, 114.0], [64.1, 114.0], [64.2, 114.0], [64.3, 114.0], [64.4, 114.0], [64.5, 114.0], [64.6, 114.0], [64.7, 114.0], [64.8, 114.0], [64.9, 114.0], [65.0, 114.0], [65.1, 114.0], [65.2, 114.0], [65.3, 114.0], [65.4, 114.0], [65.5, 116.0], [65.6, 116.0], [65.7, 116.0], [65.8, 116.0], [65.9, 116.0], [66.0, 116.0], [66.1, 116.0], [66.2, 116.0], [66.3, 116.0], [66.4, 116.0], [66.5, 117.0], [66.6, 117.0], [66.7, 117.0], [66.8, 117.0], [66.9, 117.0], [67.0, 121.0], [67.1, 121.0], [67.2, 121.0], [67.3, 121.0], [67.4, 121.0], [67.5, 122.0], [67.6, 122.0], [67.7, 122.0], [67.8, 122.0], [67.9, 122.0], [68.0, 123.0], [68.1, 123.0], [68.2, 123.0], [68.3, 123.0], [68.4, 123.0], [68.5, 125.0], [68.6, 125.0], [68.7, 125.0], [68.8, 125.0], [68.9, 125.0], [69.0, 125.0], [69.1, 125.0], [69.2, 125.0], [69.3, 125.0], [69.4, 125.0], [69.5, 133.0], [69.6, 133.0], [69.7, 133.0], [69.8, 133.0], [69.9, 133.0], [70.0, 134.0], [70.1, 134.0], [70.2, 134.0], [70.3, 134.0], [70.4, 134.0], [70.5, 136.0], [70.6, 136.0], [70.7, 136.0], [70.8, 136.0], [70.9, 136.0], [71.0, 138.0], [71.1, 138.0], [71.2, 138.0], [71.3, 138.0], [71.4, 138.0], [71.5, 139.0], [71.6, 139.0], [71.7, 139.0], [71.8, 139.0], [71.9, 139.0], [72.0, 140.0], [72.1, 140.0], [72.2, 140.0], [72.3, 140.0], [72.4, 140.0], [72.5, 143.0], [72.6, 143.0], [72.7, 143.0], [72.8, 143.0], [72.9, 143.0], [73.0, 143.0], [73.1, 143.0], [73.2, 143.0], [73.3, 143.0], [73.4, 143.0], [73.5, 148.0], [73.6, 148.0], [73.7, 148.0], [73.8, 148.0], [73.9, 148.0], [74.0, 150.0], [74.1, 150.0], [74.2, 150.0], [74.3, 150.0], [74.4, 150.0], [74.5, 153.0], [74.6, 153.0], [74.7, 153.0], [74.8, 153.0], [74.9, 153.0], [75.0, 154.0], [75.1, 154.0], [75.2, 154.0], [75.3, 154.0], [75.4, 154.0], [75.5, 155.0], [75.6, 155.0], [75.7, 155.0], [75.8, 155.0], [75.9, 155.0], [76.0, 157.0], [76.1, 157.0], [76.2, 157.0], [76.3, 157.0], [76.4, 157.0], [76.5, 158.0], [76.6, 158.0], [76.7, 158.0], [76.8, 158.0], [76.9, 158.0], [77.0, 161.0], [77.1, 161.0], [77.2, 161.0], [77.3, 161.0], [77.4, 161.0], [77.5, 164.0], [77.6, 164.0], [77.7, 164.0], [77.8, 164.0], [77.9, 164.0], [78.0, 166.0], [78.1, 166.0], [78.2, 166.0], [78.3, 166.0], [78.4, 166.0], [78.5, 166.0], [78.6, 166.0], [78.7, 166.0], [78.8, 166.0], [78.9, 166.0], [79.0, 169.0], [79.1, 169.0], [79.2, 169.0], [79.3, 169.0], [79.4, 169.0], [79.5, 182.0], [79.6, 182.0], [79.7, 182.0], [79.8, 182.0], [79.9, 182.0], [80.0, 188.0], [80.1, 188.0], [80.2, 188.0], [80.3, 188.0], [80.4, 188.0], [80.5, 193.0], [80.6, 193.0], [80.7, 193.0], [80.8, 193.0], [80.9, 193.0], [81.0, 194.0], [81.1, 194.0], [81.2, 194.0], [81.3, 194.0], [81.4, 194.0], [81.5, 194.0], [81.6, 194.0], [81.7, 194.0], [81.8, 194.0], [81.9, 194.0], [82.0, 195.0], [82.1, 195.0], [82.2, 195.0], [82.3, 195.0], [82.4, 195.0], [82.5, 197.0], [82.6, 197.0], [82.7, 197.0], [82.8, 197.0], [82.9, 197.0], [83.0, 198.0], [83.1, 198.0], [83.2, 198.0], [83.3, 198.0], [83.4, 198.0], [83.5, 199.0], [83.6, 199.0], [83.7, 199.0], [83.8, 199.0], [83.9, 199.0], [84.0, 202.0], [84.1, 202.0], [84.2, 202.0], [84.3, 202.0], [84.4, 202.0], [84.5, 203.0], [84.6, 203.0], [84.7, 203.0], [84.8, 203.0], [84.9, 203.0], [85.0, 207.0], [85.1, 207.0], [85.2, 207.0], [85.3, 207.0], [85.4, 207.0], [85.5, 207.0], [85.6, 207.0], [85.7, 207.0], [85.8, 207.0], [85.9, 207.0], [86.0, 215.0], [86.1, 215.0], [86.2, 215.0], [86.3, 215.0], [86.4, 215.0], [86.5, 217.0], [86.6, 217.0], [86.7, 217.0], [86.8, 217.0], [86.9, 217.0], [87.0, 237.0], [87.1, 237.0], [87.2, 237.0], [87.3, 237.0], [87.4, 237.0], [87.5, 242.0], [87.6, 242.0], [87.7, 242.0], [87.8, 242.0], [87.9, 242.0], [88.0, 248.0], [88.1, 248.0], [88.2, 248.0], [88.3, 248.0], [88.4, 248.0], [88.5, 261.0], [88.6, 261.0], [88.7, 261.0], [88.8, 261.0], [88.9, 261.0], [89.0, 264.0], [89.1, 264.0], [89.2, 264.0], [89.3, 264.0], [89.4, 264.0], [89.5, 271.0], [89.6, 271.0], [89.7, 271.0], [89.8, 271.0], [89.9, 271.0], [90.0, 283.0], [90.1, 283.0], [90.2, 283.0], [90.3, 283.0], [90.4, 283.0], [90.5, 285.0], [90.6, 285.0], [90.7, 285.0], [90.8, 285.0], [90.9, 285.0], [91.0, 310.0], [91.1, 310.0], [91.2, 310.0], [91.3, 310.0], [91.4, 310.0], [91.5, 311.0], [91.6, 311.0], [91.7, 311.0], [91.8, 311.0], [91.9, 311.0], [92.0, 315.0], [92.1, 315.0], [92.2, 315.0], [92.3, 315.0], [92.4, 315.0], [92.5, 342.0], [92.6, 342.0], [92.7, 342.0], [92.8, 342.0], [92.9, 342.0], [93.0, 364.0], [93.1, 364.0], [93.2, 364.0], [93.3, 364.0], [93.4, 364.0], [93.5, 421.0], [93.6, 421.0], [93.7, 421.0], [93.8, 421.0], [93.9, 421.0], [94.0, 448.0], [94.1, 448.0], [94.2, 448.0], [94.3, 448.0], [94.4, 448.0], [94.5, 474.0], [94.6, 474.0], [94.7, 474.0], [94.8, 474.0], [94.9, 474.0], [95.0, 494.0], [95.1, 494.0], [95.2, 494.0], [95.3, 494.0], [95.4, 494.0], [95.5, 548.0], [95.6, 548.0], [95.7, 548.0], [95.8, 548.0], [95.9, 548.0], [96.0, 552.0], [96.1, 552.0], [96.2, 552.0], [96.3, 552.0], [96.4, 552.0], [96.5, 664.0], [96.6, 664.0], [96.7, 664.0], [96.8, 664.0], [96.9, 664.0], [97.0, 674.0], [97.1, 674.0], [97.2, 674.0], [97.3, 674.0], [97.4, 674.0], [97.5, 880.0], [97.6, 880.0], [97.7, 880.0], [97.8, 880.0], [97.9, 880.0], [98.0, 919.0], [98.1, 919.0], [98.2, 919.0], [98.3, 919.0], [98.4, 919.0], [98.5, 1236.0], [98.6, 1236.0], [98.7, 1236.0], [98.8, 1236.0], [98.9, 1236.0], [99.0, 2132.0], [99.1, 2132.0], [99.2, 2132.0], [99.3, 2132.0], [99.4, 2132.0], [99.5, 2200.0], [99.6, 2200.0], [99.7, 2200.0], [99.8, 2200.0], [99.9, 2200.0]], "isOverall": false, "label": "2", "isController": false}, {"data": [[0.0, 28.0], [0.1, 28.0], [0.2, 28.0], [0.3, 28.0], [0.4, 28.0], [0.5, 30.0], [0.6, 30.0], [0.7, 30.0], [0.8, 30.0], [0.9, 30.0], [1.0, 30.0], [1.1, 30.0], [1.2, 30.0], [1.3, 32.0], [1.4, 32.0], [1.5, 33.0], [1.6, 33.0], [1.7, 33.0], [1.8, 33.0], [1.9, 33.0], [2.0, 34.0], [2.1, 34.0], [2.2, 34.0], [2.3, 34.0], [2.4, 34.0], [2.5, 36.0], [2.6, 36.0], [2.7, 36.0], [2.8, 36.0], [2.9, 36.0], [3.0, 37.0], [3.1, 37.0], [3.2, 37.0], [3.3, 37.0], [3.4, 37.0], [3.5, 37.0], [3.6, 37.0], [3.7, 37.0], [3.8, 37.0], [3.9, 37.0], [4.0, 38.0], [4.1, 38.0], [4.2, 38.0], [4.3, 38.0], [4.4, 38.0], [4.5, 39.0], [4.6, 39.0], [4.7, 39.0], [4.8, 39.0], [4.9, 39.0], [5.0, 39.0], [5.1, 39.0], [5.2, 39.0], [5.3, 40.0], [5.4, 40.0], [5.5, 40.0], [5.6, 40.0], [5.7, 40.0], [5.8, 41.0], [5.9, 41.0], [6.0, 41.0], [6.1, 41.0], [6.2, 41.0], [6.3, 42.0], [6.4, 42.0], [6.5, 42.0], [6.6, 42.0], [6.7, 42.0], [6.8, 42.0], [6.9, 42.0], [7.0, 43.0], [7.1, 43.0], [7.2, 43.0], [7.3, 43.0], [7.4, 43.0], [7.5, 44.0], [7.6, 44.0], [7.7, 44.0], [7.8, 44.0], [7.9, 44.0], [8.0, 45.0], [8.1, 45.0], [8.2, 45.0], [8.3, 46.0], [8.4, 46.0], [8.5, 46.0], [8.6, 46.0], [8.7, 46.0], [8.8, 48.0], [8.9, 48.0], [9.0, 48.0], [9.1, 48.0], [9.2, 48.0], [9.3, 49.0], [9.4, 49.0], [9.5, 49.0], [9.6, 49.0], [9.7, 49.0], [9.8, 49.0], [9.9, 49.0], [10.0, 50.0], [10.1, 50.0], [10.2, 50.0], [10.3, 50.0], [10.4, 50.0], [10.5, 50.0], [10.6, 50.0], [10.7, 50.0], [10.8, 50.0], [10.9, 50.0], [11.0, 51.0], [11.1, 51.0], [11.2, 51.0], [11.3, 52.0], [11.4, 52.0], [11.5, 52.0], [11.6, 52.0], [11.7, 52.0], [11.8, 52.0], [11.9, 52.0], [12.0, 53.0], [12.1, 53.0], [12.2, 53.0], [12.3, 53.0], [12.4, 53.0], [12.5, 54.0], [12.6, 54.0], [12.7, 54.0], [12.8, 54.0], [12.9, 54.0], [13.0, 54.0], [13.1, 54.0], [13.2, 54.0], [13.3, 54.0], [13.4, 54.0], [13.5, 55.0], [13.6, 55.0], [13.7, 55.0], [13.8, 55.0], [13.9, 55.0], [14.0, 55.0], [14.1, 55.0], [14.2, 55.0], [14.3, 56.0], [14.4, 56.0], [14.5, 56.0], [14.6, 56.0], [14.7, 56.0], [14.8, 56.0], [14.9, 56.0], [15.0, 58.0], [15.1, 58.0], [15.2, 58.0], [15.3, 58.0], [15.4, 58.0], [15.5, 59.0], [15.6, 59.0], [15.7, 59.0], [15.8, 59.0], [15.9, 59.0], [16.0, 60.0], [16.1, 60.0], [16.2, 60.0], [16.3, 61.0], [16.4, 61.0], [16.5, 61.0], [16.6, 61.0], [16.7, 61.0], [16.8, 61.0], [16.9, 61.0], [17.0, 61.0], [17.1, 61.0], [17.2, 61.0], [17.3, 61.0], [17.4, 61.0], [17.5, 61.0], [17.6, 61.0], [17.7, 61.0], [17.8, 61.0], [17.9, 61.0], [18.0, 61.0], [18.1, 61.0], [18.2, 61.0], [18.3, 62.0], [18.4, 62.0], [18.5, 62.0], [18.6, 62.0], [18.7, 62.0], [18.8, 62.0], [18.9, 62.0], [19.0, 63.0], [19.1, 63.0], [19.2, 63.0], [19.3, 63.0], [19.4, 63.0], [19.5, 63.0], [19.6, 63.0], [19.7, 63.0], [19.8, 63.0], [19.9, 63.0], [20.0, 63.0], [20.1, 63.0], [20.2, 63.0], [20.3, 64.0], [20.4, 64.0], [20.5, 64.0], [20.6, 64.0], [20.7, 64.0], [20.8, 65.0], [20.9, 65.0], [21.0, 66.0], [21.1, 66.0], [21.2, 66.0], [21.3, 66.0], [21.4, 66.0], [21.5, 66.0], [21.6, 66.0], [21.7, 66.0], [21.8, 67.0], [21.9, 67.0], [22.0, 67.0], [22.1, 67.0], [22.2, 67.0], [22.3, 68.0], [22.4, 68.0], [22.5, 68.0], [22.6, 68.0], [22.7, 68.0], [22.8, 69.0], [22.9, 69.0], [23.0, 69.0], [23.1, 69.0], [23.2, 69.0], [23.3, 69.0], [23.4, 69.0], [23.5, 70.0], [23.6, 70.0], [23.7, 70.0], [23.8, 70.0], [23.9, 70.0], [24.0, 70.0], [24.1, 70.0], [24.2, 70.0], [24.3, 71.0], [24.4, 71.0], [24.5, 71.0], [24.6, 71.0], [24.7, 71.0], [24.8, 72.0], [24.9, 72.0], [25.0, 73.0], [25.1, 73.0], [25.2, 73.0], [25.3, 74.0], [25.4, 74.0], [25.5, 74.0], [25.6, 74.0], [25.7, 74.0], [25.8, 74.0], [25.9, 74.0], [26.0, 75.0], [26.1, 75.0], [26.2, 75.0], [26.3, 75.0], [26.4, 75.0], [26.5, 78.0], [26.6, 78.0], [26.7, 78.0], [26.8, 79.0], [26.9, 79.0], [27.0, 79.0], [27.1, 79.0], [27.2, 79.0], [27.3, 79.0], [27.4, 79.0], [27.5, 80.0], [27.6, 80.0], [27.7, 80.0], [27.8, 80.0], [27.9, 80.0], [28.0, 81.0], [28.1, 81.0], [28.2, 81.0], [28.3, 81.0], [28.4, 81.0], [28.5, 82.0], [28.6, 82.0], [28.7, 82.0], [28.8, 83.0], [28.9, 83.0], [29.0, 83.0], [29.1, 83.0], [29.2, 83.0], [29.3, 83.0], [29.4, 83.0], [29.5, 84.0], [29.6, 84.0], [29.7, 84.0], [29.8, 84.0], [29.9, 84.0], [30.0, 85.0], [30.1, 85.0], [30.2, 85.0], [30.3, 85.0], [30.4, 85.0], [30.5, 85.0], [30.6, 85.0], [30.7, 85.0], [30.8, 85.0], [30.9, 85.0], [31.0, 86.0], [31.1, 86.0], [31.2, 86.0], [31.3, 86.0], [31.4, 86.0], [31.5, 86.0], [31.6, 86.0], [31.7, 86.0], [31.8, 86.0], [31.9, 86.0], [32.0, 86.0], [32.1, 86.0], [32.2, 86.0], [32.3, 88.0], [32.4, 88.0], [32.5, 88.0], [32.6, 88.0], [32.7, 88.0], [32.8, 88.0], [32.9, 88.0], [33.0, 88.0], [33.1, 88.0], [33.2, 88.0], [33.3, 89.0], [33.4, 89.0], [33.5, 89.0], [33.6, 89.0], [33.7, 89.0], [33.8, 89.0], [33.9, 89.0], [34.0, 90.0], [34.1, 90.0], [34.2, 90.0], [34.3, 90.0], [34.4, 90.0], [34.5, 91.0], [34.6, 91.0], [34.7, 91.0], [34.8, 91.0], [34.9, 91.0], [35.0, 91.0], [35.1, 91.0], [35.2, 91.0], [35.3, 92.0], [35.4, 92.0], [35.5, 92.0], [35.6, 92.0], [35.7, 92.0], [35.8, 92.0], [35.9, 92.0], [36.0, 92.0], [36.1, 92.0], [36.2, 92.0], [36.3, 93.0], [36.4, 93.0], [36.5, 93.0], [36.6, 93.0], [36.7, 93.0], [36.8, 93.0], [36.9, 93.0], [37.0, 93.0], [37.1, 93.0], [37.2, 93.0], [37.3, 94.0], [37.4, 94.0], [37.5, 94.0], [37.6, 94.0], [37.7, 94.0], [37.8, 96.0], [37.9, 96.0], [38.0, 96.0], [38.1, 96.0], [38.2, 96.0], [38.3, 97.0], [38.4, 97.0], [38.5, 98.0], [38.6, 98.0], [38.7, 98.0], [38.8, 99.0], [38.9, 99.0], [39.0, 99.0], [39.1, 99.0], [39.2, 99.0], [39.3, 99.0], [39.4, 99.0], [39.5, 100.0], [39.6, 100.0], [39.7, 100.0], [39.8, 100.0], [39.9, 100.0], [40.0, 100.0], [40.1, 100.0], [40.2, 100.0], [40.3, 100.0], [40.4, 100.0], [40.5, 101.0], [40.6, 101.0], [40.7, 101.0], [40.8, 103.0], [40.9, 103.0], [41.0, 103.0], [41.1, 103.0], [41.2, 103.0], [41.3, 104.0], [41.4, 104.0], [41.5, 105.0], [41.6, 105.0], [41.7, 105.0], [41.8, 105.0], [41.9, 105.0], [42.0, 105.0], [42.1, 105.0], [42.2, 105.0], [42.3, 106.0], [42.4, 106.0], [42.5, 106.0], [42.6, 106.0], [42.7, 106.0], [42.8, 106.0], [42.9, 106.0], [43.0, 106.0], [43.1, 106.0], [43.2, 106.0], [43.3, 106.0], [43.4, 106.0], [43.5, 107.0], [43.6, 107.0], [43.7, 107.0], [43.8, 107.0], [43.9, 107.0], [44.0, 107.0], [44.1, 107.0], [44.2, 107.0], [44.3, 108.0], [44.4, 108.0], [44.5, 108.0], [44.6, 108.0], [44.7, 108.0], [44.8, 109.0], [44.9, 109.0], [45.0, 109.0], [45.1, 109.0], [45.2, 109.0], [45.3, 109.0], [45.4, 109.0], [45.5, 109.0], [45.6, 109.0], [45.7, 109.0], [45.8, 110.0], [45.9, 110.0], [46.0, 110.0], [46.1, 110.0], [46.2, 110.0], [46.3, 110.0], [46.4, 110.0], [46.5, 111.0], [46.6, 111.0], [46.7, 111.0], [46.8, 111.0], [46.9, 111.0], [47.0, 112.0], [47.1, 112.0], [47.2, 112.0], [47.3, 113.0], [47.4, 113.0], [47.5, 113.0], [47.6, 113.0], [47.7, 113.0], [47.8, 113.0], [47.9, 113.0], [48.0, 115.0], [48.1, 115.0], [48.2, 115.0], [48.3, 116.0], [48.4, 116.0], [48.5, 116.0], [48.6, 116.0], [48.7, 116.0], [48.8, 117.0], [48.9, 117.0], [49.0, 118.0], [49.1, 118.0], [49.2, 118.0], [49.3, 119.0], [49.4, 119.0], [49.5, 120.0], [49.6, 120.0], [49.7, 120.0], [49.8, 120.0], [49.9, 120.0], [50.0, 121.0], [50.1, 121.0], [50.2, 121.0], [50.3, 121.0], [50.4, 121.0], [50.5, 122.0], [50.6, 122.0], [50.7, 122.0], [50.8, 122.0], [50.9, 122.0], [51.0, 122.0], [51.1, 122.0], [51.2, 122.0], [51.3, 122.0], [51.4, 122.0], [51.5, 124.0], [51.6, 124.0], [51.7, 124.0], [51.8, 124.0], [51.9, 124.0], [52.0, 124.0], [52.1, 124.0], [52.2, 124.0], [52.3, 124.0], [52.4, 124.0], [52.5, 124.0], [52.6, 124.0], [52.7, 124.0], [52.8, 125.0], [52.9, 125.0], [53.0, 125.0], [53.1, 125.0], [53.2, 125.0], [53.3, 126.0], [53.4, 126.0], [53.5, 126.0], [53.6, 126.0], [53.7, 126.0], [53.8, 127.0], [53.9, 127.0], [54.0, 127.0], [54.1, 127.0], [54.2, 127.0], [54.3, 127.0], [54.4, 127.0], [54.5, 127.0], [54.6, 127.0], [54.7, 127.0], [54.8, 128.0], [54.9, 128.0], [55.0, 128.0], [55.1, 128.0], [55.2, 128.0], [55.3, 129.0], [55.4, 129.0], [55.5, 131.0], [55.6, 131.0], [55.7, 131.0], [55.8, 131.0], [55.9, 131.0], [56.0, 132.0], [56.1, 132.0], [56.2, 132.0], [56.3, 133.0], [56.4, 133.0], [56.5, 135.0], [56.6, 135.0], [56.7, 135.0], [56.8, 136.0], [56.9, 136.0], [57.0, 136.0], [57.1, 136.0], [57.2, 136.0], [57.3, 136.0], [57.4, 136.0], [57.5, 137.0], [57.6, 137.0], [57.7, 137.0], [57.8, 137.0], [57.9, 137.0], [58.0, 137.0], [58.1, 137.0], [58.2, 137.0], [58.3, 137.0], [58.4, 137.0], [58.5, 138.0], [58.6, 138.0], [58.7, 138.0], [58.8, 138.0], [58.9, 138.0], [59.0, 138.0], [59.1, 138.0], [59.2, 138.0], [59.3, 140.0], [59.4, 140.0], [59.5, 140.0], [59.6, 140.0], [59.7, 140.0], [59.8, 142.0], [59.9, 142.0], [60.0, 142.0], [60.1, 142.0], [60.2, 142.0], [60.3, 142.0], [60.4, 142.0], [60.5, 142.0], [60.6, 142.0], [60.7, 142.0], [60.8, 143.0], [60.9, 143.0], [61.0, 144.0], [61.1, 144.0], [61.2, 144.0], [61.3, 145.0], [61.4, 145.0], [61.5, 145.0], [61.6, 145.0], [61.7, 145.0], [61.8, 148.0], [61.9, 148.0], [62.0, 148.0], [62.1, 148.0], [62.2, 148.0], [62.3, 148.0], [62.4, 148.0], [62.5, 148.0], [62.6, 148.0], [62.7, 148.0], [62.8, 148.0], [62.9, 148.0], [63.0, 149.0], [63.1, 149.0], [63.2, 149.0], [63.3, 149.0], [63.4, 149.0], [63.5, 150.0], [63.6, 150.0], [63.7, 150.0], [63.8, 151.0], [63.9, 151.0], [64.0, 153.0], [64.1, 153.0], [64.2, 153.0], [64.3, 154.0], [64.4, 154.0], [64.5, 154.0], [64.6, 154.0], [64.7, 154.0], [64.8, 154.0], [64.9, 154.0], [65.0, 155.0], [65.1, 155.0], [65.2, 155.0], [65.3, 156.0], [65.4, 156.0], [65.5, 158.0], [65.6, 158.0], [65.7, 158.0], [65.8, 162.0], [65.9, 162.0], [66.0, 163.0], [66.1, 163.0], [66.2, 163.0], [66.3, 164.0], [66.4, 164.0], [66.5, 166.0], [66.6, 166.0], [66.7, 166.0], [66.8, 166.0], [66.9, 166.0], [67.0, 166.0], [67.1, 166.0], [67.2, 166.0], [67.3, 167.0], [67.4, 167.0], [67.5, 168.0], [67.6, 168.0], [67.7, 168.0], [67.8, 168.0], [67.9, 168.0], [68.0, 168.0], [68.1, 168.0], [68.2, 168.0], [68.3, 170.0], [68.4, 170.0], [68.5, 174.0], [68.6, 174.0], [68.7, 174.0], [68.8, 175.0], [68.9, 175.0], [69.0, 183.0], [69.1, 183.0], [69.2, 183.0], [69.3, 183.0], [69.4, 183.0], [69.5, 185.0], [69.6, 185.0], [69.7, 185.0], [69.8, 185.0], [69.9, 185.0], [70.0, 185.0], [70.1, 185.0], [70.2, 185.0], [70.3, 187.0], [70.4, 187.0], [70.5, 188.0], [70.6, 188.0], [70.7, 188.0], [70.8, 190.0], [70.9, 190.0], [71.0, 190.0], [71.1, 190.0], [71.2, 190.0], [71.3, 191.0], [71.4, 191.0], [71.5, 195.0], [71.6, 195.0], [71.7, 195.0], [71.8, 195.0], [71.9, 195.0], [72.0, 196.0], [72.1, 196.0], [72.2, 196.0], [72.3, 197.0], [72.4, 197.0], [72.5, 197.0], [72.6, 197.0], [72.7, 197.0], [72.8, 197.0], [72.9, 197.0], [73.0, 200.0], [73.1, 200.0], [73.2, 200.0], [73.3, 201.0], [73.4, 201.0], [73.5, 202.0], [73.6, 202.0], [73.7, 202.0], [73.8, 203.0], [73.9, 203.0], [74.0, 203.0], [74.1, 203.0], [74.2, 203.0], [74.3, 205.0], [74.4, 205.0], [74.5, 207.0], [74.6, 207.0], [74.7, 207.0], [74.8, 208.0], [74.9, 208.0], [75.0, 209.0], [75.1, 209.0], [75.2, 209.0], [75.3, 210.0], [75.4, 210.0], [75.5, 213.0], [75.6, 213.0], [75.7, 213.0], [75.8, 218.0], [75.9, 218.0], [76.0, 221.0], [76.1, 221.0], [76.2, 221.0], [76.3, 221.0], [76.4, 221.0], [76.5, 227.0], [76.6, 227.0], [76.7, 227.0], [76.8, 229.0], [76.9, 229.0], [77.0, 231.0], [77.1, 231.0], [77.2, 231.0], [77.3, 233.0], [77.4, 233.0], [77.5, 234.0], [77.6, 234.0], [77.7, 234.0], [77.8, 238.0], [77.9, 238.0], [78.0, 243.0], [78.1, 243.0], [78.2, 243.0], [78.3, 246.0], [78.4, 246.0], [78.5, 246.0], [78.6, 246.0], [78.7, 246.0], [78.8, 255.0], [78.9, 255.0], [79.0, 255.0], [79.1, 255.0], [79.2, 255.0], [79.3, 256.0], [79.4, 256.0], [79.5, 262.0], [79.6, 262.0], [79.7, 262.0], [79.8, 267.0], [79.9, 267.0], [80.0, 273.0], [80.1, 273.0], [80.2, 273.0], [80.3, 274.0], [80.4, 274.0], [80.5, 274.0], [80.6, 274.0], [80.7, 274.0], [80.8, 274.0], [80.9, 274.0], [81.0, 275.0], [81.1, 275.0], [81.2, 275.0], [81.3, 276.0], [81.4, 276.0], [81.5, 278.0], [81.6, 278.0], [81.7, 278.0], [81.8, 280.0], [81.9, 280.0], [82.0, 281.0], [82.1, 281.0], [82.2, 281.0], [82.3, 286.0], [82.4, 286.0], [82.5, 287.0], [82.6, 287.0], [82.7, 287.0], [82.8, 295.0], [82.9, 295.0], [83.0, 296.0], [83.1, 296.0], [83.2, 296.0], [83.3, 298.0], [83.4, 298.0], [83.5, 298.0], [83.6, 298.0], [83.7, 298.0], [83.8, 302.0], [83.9, 302.0], [84.0, 302.0], [84.1, 302.0], [84.2, 302.0], [84.3, 302.0], [84.4, 302.0], [84.5, 309.0], [84.6, 309.0], [84.7, 309.0], [84.8, 310.0], [84.9, 310.0], [85.0, 318.0], [85.1, 318.0], [85.2, 318.0], [85.3, 321.0], [85.4, 321.0], [85.5, 332.0], [85.6, 332.0], [85.7, 332.0], [85.8, 333.0], [85.9, 333.0], [86.0, 348.0], [86.1, 348.0], [86.2, 348.0], [86.3, 349.0], [86.4, 349.0], [86.5, 350.0], [86.6, 350.0], [86.7, 350.0], [86.8, 350.0], [86.9, 350.0], [87.0, 352.0], [87.1, 352.0], [87.2, 352.0], [87.3, 363.0], [87.4, 363.0], [87.5, 374.0], [87.6, 374.0], [87.7, 374.0], [87.8, 381.0], [87.9, 381.0], [88.0, 386.0], [88.1, 386.0], [88.2, 386.0], [88.3, 387.0], [88.4, 387.0], [88.5, 403.0], [88.6, 403.0], [88.7, 403.0], [88.8, 410.0], [88.9, 410.0], [89.0, 411.0], [89.1, 411.0], [89.2, 411.0], [89.3, 412.0], [89.4, 412.0], [89.5, 421.0], [89.6, 421.0], [89.7, 421.0], [89.8, 425.0], [89.9, 425.0], [90.0, 426.0], [90.1, 426.0], [90.2, 426.0], [90.3, 441.0], [90.4, 441.0], [90.5, 451.0], [90.6, 451.0], [90.7, 451.0], [90.8, 452.0], [90.9, 452.0], [91.0, 453.0], [91.1, 453.0], [91.2, 453.0], [91.3, 456.0], [91.4, 456.0], [91.5, 458.0], [91.6, 458.0], [91.7, 458.0], [91.8, 495.0], [91.9, 495.0], [92.0, 496.0], [92.1, 496.0], [92.2, 496.0], [92.3, 528.0], [92.4, 528.0], [92.5, 539.0], [92.6, 539.0], [92.7, 539.0], [92.8, 542.0], [92.9, 542.0], [93.0, 543.0], [93.1, 543.0], [93.2, 543.0], [93.3, 558.0], [93.4, 558.0], [93.5, 645.0], [93.6, 645.0], [93.7, 645.0], [93.8, 650.0], [93.9, 650.0], [94.0, 655.0], [94.1, 655.0], [94.2, 655.0], [94.3, 666.0], [94.4, 666.0], [94.5, 680.0], [94.6, 680.0], [94.7, 680.0], [94.8, 688.0], [94.9, 688.0], [95.0, 712.0], [95.1, 712.0], [95.2, 712.0], [95.3, 713.0], [95.4, 713.0], [95.5, 729.0], [95.6, 729.0], [95.7, 729.0], [95.8, 763.0], [95.9, 763.0], [96.0, 838.0], [96.1, 838.0], [96.2, 838.0], [96.3, 896.0], [96.4, 896.0], [96.5, 935.0], [96.6, 935.0], [96.7, 935.0], [96.8, 964.0], [96.9, 964.0], [97.0, 965.0], [97.1, 965.0], [97.2, 965.0], [97.3, 1052.0], [97.4, 1052.0], [97.5, 1099.0], [97.6, 1099.0], [97.7, 1099.0], [97.8, 1121.0], [97.9, 1121.0], [98.0, 1167.0], [98.1, 1167.0], [98.2, 1167.0], [98.3, 1179.0], [98.4, 1179.0], [98.5, 1215.0], [98.6, 1215.0], [98.7, 1215.0], [98.8, 2388.0], [98.9, 2388.0], [99.0, 2419.0], [99.1, 2419.0], [99.2, 2419.0], [99.3, 2423.0], [99.4, 2423.0], [99.5, 2567.0], [99.6, 2567.0], [99.7, 2567.0], [99.8, 2761.0], [99.9, 2761.0]], "isOverall": false, "label": "4", "isController": false}, {"data": [[0.0, 30.0], [0.1, 33.0], [0.2, 37.0], [0.3, 38.0], [0.4, 42.0], [0.5, 46.0], [0.6, 49.0], [0.7, 51.0], [0.8, 52.0], [0.9, 54.0], [1.0, 54.0], [1.1, 54.0], [1.2, 56.0], [1.3, 58.0], [1.4, 60.0], [1.5, 62.0], [1.6, 62.0], [1.7, 63.0], [1.8, 63.0], [1.9, 64.0], [2.0, 65.0], [2.1, 65.0], [2.2, 65.0], [2.3, 66.0], [2.4, 67.0], [2.5, 68.0], [2.6, 69.0], [2.7, 69.0], [2.8, 71.0], [2.9, 72.0], [3.0, 72.0], [3.1, 72.0], [3.2, 73.0], [3.3, 73.0], [3.4, 74.0], [3.5, 76.0], [3.6, 76.0], [3.7, 76.0], [3.8, 77.0], [3.9, 78.0], [4.0, 79.0], [4.1, 79.0], [4.2, 79.0], [4.3, 79.0], [4.4, 81.0], [4.5, 83.0], [4.6, 83.0], [4.7, 83.0], [4.8, 83.0], [4.9, 84.0], [5.0, 84.0], [5.1, 84.0], [5.2, 85.0], [5.3, 85.0], [5.4, 85.0], [5.5, 85.0], [5.6, 86.0], [5.7, 87.0], [5.8, 87.0], [5.9, 87.0], [6.0, 88.0], [6.1, 89.0], [6.2, 89.0], [6.3, 90.0], [6.4, 90.0], [6.5, 91.0], [6.6, 91.0], [6.7, 91.0], [6.8, 91.0], [6.9, 93.0], [7.0, 93.0], [7.1, 95.0], [7.2, 96.0], [7.3, 96.0], [7.4, 96.0], [7.5, 96.0], [7.6, 97.0], [7.7, 97.0], [7.8, 97.0], [7.9, 99.0], [8.0, 99.0], [8.1, 99.0], [8.2, 101.0], [8.3, 101.0], [8.4, 103.0], [8.5, 103.0], [8.6, 104.0], [8.7, 104.0], [8.8, 104.0], [8.9, 105.0], [9.0, 106.0], [9.1, 106.0], [9.2, 106.0], [9.3, 106.0], [9.4, 107.0], [9.5, 108.0], [9.6, 109.0], [9.7, 109.0], [9.8, 110.0], [9.9, 110.0], [10.0, 112.0], [10.1, 112.0], [10.2, 113.0], [10.3, 113.0], [10.4, 114.0], [10.5, 114.0], [10.6, 114.0], [10.7, 115.0], [10.8, 115.0], [10.9, 116.0], [11.0, 117.0], [11.1, 117.0], [11.2, 118.0], [11.3, 118.0], [11.4, 118.0], [11.5, 118.0], [11.6, 118.0], [11.7, 119.0], [11.8, 119.0], [11.9, 119.0], [12.0, 119.0], [12.1, 119.0], [12.2, 120.0], [12.3, 120.0], [12.4, 121.0], [12.5, 121.0], [12.6, 121.0], [12.7, 122.0], [12.8, 122.0], [12.9, 123.0], [13.0, 124.0], [13.1, 124.0], [13.2, 124.0], [13.3, 125.0], [13.4, 126.0], [13.5, 127.0], [13.6, 127.0], [13.7, 127.0], [13.8, 128.0], [13.9, 129.0], [14.0, 130.0], [14.1, 130.0], [14.2, 131.0], [14.3, 131.0], [14.4, 131.0], [14.5, 132.0], [14.6, 132.0], [14.7, 133.0], [14.8, 133.0], [14.9, 133.0], [15.0, 134.0], [15.1, 135.0], [15.2, 135.0], [15.3, 136.0], [15.4, 136.0], [15.5, 137.0], [15.6, 138.0], [15.7, 140.0], [15.8, 140.0], [15.9, 141.0], [16.0, 142.0], [16.1, 142.0], [16.2, 142.0], [16.3, 142.0], [16.4, 142.0], [16.5, 143.0], [16.6, 143.0], [16.7, 143.0], [16.8, 143.0], [16.9, 143.0], [17.0, 144.0], [17.1, 144.0], [17.2, 145.0], [17.3, 145.0], [17.4, 146.0], [17.5, 147.0], [17.6, 147.0], [17.7, 147.0], [17.8, 148.0], [17.9, 149.0], [18.0, 149.0], [18.1, 149.0], [18.2, 149.0], [18.3, 149.0], [18.4, 150.0], [18.5, 152.0], [18.6, 152.0], [18.7, 153.0], [18.8, 153.0], [18.9, 154.0], [19.0, 154.0], [19.1, 154.0], [19.2, 155.0], [19.3, 156.0], [19.4, 157.0], [19.5, 158.0], [19.6, 158.0], [19.7, 159.0], [19.8, 159.0], [19.9, 161.0], [20.0, 162.0], [20.1, 162.0], [20.2, 162.0], [20.3, 162.0], [20.4, 163.0], [20.5, 163.0], [20.6, 164.0], [20.7, 165.0], [20.8, 165.0], [20.9, 165.0], [21.0, 167.0], [21.1, 167.0], [21.2, 170.0], [21.3, 170.0], [21.4, 172.0], [21.5, 172.0], [21.6, 175.0], [21.7, 175.0], [21.8, 175.0], [21.9, 176.0], [22.0, 176.0], [22.1, 177.0], [22.2, 180.0], [22.3, 180.0], [22.4, 181.0], [22.5, 182.0], [22.6, 185.0], [22.7, 189.0], [22.8, 189.0], [22.9, 189.0], [23.0, 190.0], [23.1, 191.0], [23.2, 191.0], [23.3, 192.0], [23.4, 192.0], [23.5, 192.0], [23.6, 192.0], [23.7, 193.0], [23.8, 194.0], [23.9, 194.0], [24.0, 195.0], [24.1, 196.0], [24.2, 197.0], [24.3, 197.0], [24.4, 198.0], [24.5, 199.0], [24.6, 199.0], [24.7, 200.0], [24.8, 201.0], [24.9, 201.0], [25.0, 203.0], [25.1, 204.0], [25.2, 205.0], [25.3, 205.0], [25.4, 206.0], [25.5, 206.0], [25.6, 207.0], [25.7, 208.0], [25.8, 208.0], [25.9, 209.0], [26.0, 209.0], [26.1, 210.0], [26.2, 211.0], [26.3, 211.0], [26.4, 213.0], [26.5, 214.0], [26.6, 214.0], [26.7, 214.0], [26.8, 215.0], [26.9, 215.0], [27.0, 217.0], [27.1, 217.0], [27.2, 217.0], [27.3, 218.0], [27.4, 218.0], [27.5, 220.0], [27.6, 220.0], [27.7, 222.0], [27.8, 222.0], [27.9, 223.0], [28.0, 224.0], [28.1, 225.0], [28.2, 226.0], [28.3, 227.0], [28.4, 228.0], [28.5, 228.0], [28.6, 228.0], [28.7, 231.0], [28.8, 231.0], [28.9, 231.0], [29.0, 232.0], [29.1, 232.0], [29.2, 233.0], [29.3, 233.0], [29.4, 234.0], [29.5, 235.0], [29.6, 235.0], [29.7, 236.0], [29.8, 236.0], [29.9, 236.0], [30.0, 236.0], [30.1, 237.0], [30.2, 237.0], [30.3, 238.0], [30.4, 239.0], [30.5, 239.0], [30.6, 240.0], [30.7, 240.0], [30.8, 241.0], [30.9, 241.0], [31.0, 242.0], [31.1, 242.0], [31.2, 243.0], [31.3, 243.0], [31.4, 244.0], [31.5, 244.0], [31.6, 245.0], [31.7, 246.0], [31.8, 246.0], [31.9, 248.0], [32.0, 251.0], [32.1, 252.0], [32.2, 253.0], [32.3, 253.0], [32.4, 253.0], [32.5, 255.0], [32.6, 256.0], [32.7, 257.0], [32.8, 257.0], [32.9, 258.0], [33.0, 259.0], [33.1, 259.0], [33.2, 259.0], [33.3, 259.0], [33.4, 260.0], [33.5, 260.0], [33.6, 260.0], [33.7, 261.0], [33.8, 261.0], [33.9, 263.0], [34.0, 263.0], [34.1, 263.0], [34.2, 264.0], [34.3, 264.0], [34.4, 265.0], [34.5, 266.0], [34.6, 267.0], [34.7, 267.0], [34.8, 268.0], [34.9, 269.0], [35.0, 269.0], [35.1, 270.0], [35.2, 270.0], [35.3, 270.0], [35.4, 271.0], [35.5, 273.0], [35.6, 273.0], [35.7, 274.0], [35.8, 274.0], [35.9, 274.0], [36.0, 275.0], [36.1, 276.0], [36.2, 276.0], [36.3, 277.0], [36.4, 278.0], [36.5, 279.0], [36.6, 279.0], [36.7, 280.0], [36.8, 281.0], [36.9, 282.0], [37.0, 282.0], [37.1, 285.0], [37.2, 286.0], [37.3, 287.0], [37.4, 288.0], [37.5, 290.0], [37.6, 290.0], [37.7, 291.0], [37.8, 291.0], [37.9, 293.0], [38.0, 293.0], [38.1, 294.0], [38.2, 295.0], [38.3, 295.0], [38.4, 296.0], [38.5, 296.0], [38.6, 297.0], [38.7, 298.0], [38.8, 298.0], [38.9, 300.0], [39.0, 301.0], [39.1, 301.0], [39.2, 302.0], [39.3, 302.0], [39.4, 303.0], [39.5, 303.0], [39.6, 304.0], [39.7, 304.0], [39.8, 304.0], [39.9, 305.0], [40.0, 305.0], [40.1, 306.0], [40.2, 306.0], [40.3, 307.0], [40.4, 308.0], [40.5, 308.0], [40.6, 309.0], [40.7, 310.0], [40.8, 310.0], [40.9, 310.0], [41.0, 311.0], [41.1, 311.0], [41.2, 311.0], [41.3, 312.0], [41.4, 312.0], [41.5, 313.0], [41.6, 313.0], [41.7, 314.0], [41.8, 314.0], [41.9, 317.0], [42.0, 317.0], [42.1, 318.0], [42.2, 318.0], [42.3, 318.0], [42.4, 322.0], [42.5, 324.0], [42.6, 324.0], [42.7, 325.0], [42.8, 326.0], [42.9, 326.0], [43.0, 327.0], [43.1, 327.0], [43.2, 330.0], [43.3, 330.0], [43.4, 331.0], [43.5, 332.0], [43.6, 332.0], [43.7, 332.0], [43.8, 333.0], [43.9, 334.0], [44.0, 335.0], [44.1, 335.0], [44.2, 336.0], [44.3, 336.0], [44.4, 336.0], [44.5, 338.0], [44.6, 339.0], [44.7, 339.0], [44.8, 339.0], [44.9, 340.0], [45.0, 341.0], [45.1, 341.0], [45.2, 341.0], [45.3, 341.0], [45.4, 341.0], [45.5, 343.0], [45.6, 343.0], [45.7, 344.0], [45.8, 344.0], [45.9, 345.0], [46.0, 345.0], [46.1, 346.0], [46.2, 346.0], [46.3, 346.0], [46.4, 346.0], [46.5, 347.0], [46.6, 347.0], [46.7, 348.0], [46.8, 348.0], [46.9, 349.0], [47.0, 350.0], [47.1, 350.0], [47.2, 351.0], [47.3, 352.0], [47.4, 353.0], [47.5, 355.0], [47.6, 355.0], [47.7, 355.0], [47.8, 355.0], [47.9, 356.0], [48.0, 357.0], [48.1, 357.0], [48.2, 358.0], [48.3, 358.0], [48.4, 360.0], [48.5, 361.0], [48.6, 361.0], [48.7, 364.0], [48.8, 365.0], [48.9, 366.0], [49.0, 366.0], [49.1, 367.0], [49.2, 367.0], [49.3, 367.0], [49.4, 369.0], [49.5, 370.0], [49.6, 371.0], [49.7, 372.0], [49.8, 374.0], [49.9, 375.0], [50.0, 376.0], [50.1, 376.0], [50.2, 377.0], [50.3, 378.0], [50.4, 379.0], [50.5, 381.0], [50.6, 381.0], [50.7, 381.0], [50.8, 383.0], [50.9, 383.0], [51.0, 385.0], [51.1, 386.0], [51.2, 386.0], [51.3, 386.0], [51.4, 389.0], [51.5, 390.0], [51.6, 391.0], [51.7, 391.0], [51.8, 394.0], [51.9, 395.0], [52.0, 397.0], [52.1, 397.0], [52.2, 399.0], [52.3, 399.0], [52.4, 400.0], [52.5, 401.0], [52.6, 402.0], [52.7, 403.0], [52.8, 404.0], [52.9, 405.0], [53.0, 405.0], [53.1, 406.0], [53.2, 407.0], [53.3, 407.0], [53.4, 408.0], [53.5, 408.0], [53.6, 409.0], [53.7, 409.0], [53.8, 409.0], [53.9, 411.0], [54.0, 412.0], [54.1, 414.0], [54.2, 415.0], [54.3, 415.0], [54.4, 416.0], [54.5, 416.0], [54.6, 417.0], [54.7, 419.0], [54.8, 419.0], [54.9, 420.0], [55.0, 421.0], [55.1, 421.0], [55.2, 422.0], [55.3, 423.0], [55.4, 425.0], [55.5, 425.0], [55.6, 426.0], [55.7, 426.0], [55.8, 426.0], [55.9, 427.0], [56.0, 428.0], [56.1, 428.0], [56.2, 429.0], [56.3, 429.0], [56.4, 430.0], [56.5, 432.0], [56.6, 433.0], [56.7, 433.0], [56.8, 434.0], [56.9, 435.0], [57.0, 436.0], [57.1, 437.0], [57.2, 437.0], [57.3, 437.0], [57.4, 439.0], [57.5, 441.0], [57.6, 442.0], [57.7, 444.0], [57.8, 445.0], [57.9, 446.0], [58.0, 447.0], [58.1, 447.0], [58.2, 447.0], [58.3, 448.0], [58.4, 449.0], [58.5, 450.0], [58.6, 450.0], [58.7, 451.0], [58.8, 452.0], [58.9, 454.0], [59.0, 455.0], [59.1, 455.0], [59.2, 457.0], [59.3, 457.0], [59.4, 459.0], [59.5, 459.0], [59.6, 459.0], [59.7, 462.0], [59.8, 463.0], [59.9, 463.0], [60.0, 463.0], [60.1, 464.0], [60.2, 468.0], [60.3, 469.0], [60.4, 470.0], [60.5, 472.0], [60.6, 473.0], [60.7, 474.0], [60.8, 475.0], [60.9, 476.0], [61.0, 477.0], [61.1, 477.0], [61.2, 479.0], [61.3, 480.0], [61.4, 480.0], [61.5, 481.0], [61.6, 482.0], [61.7, 483.0], [61.8, 483.0], [61.9, 485.0], [62.0, 485.0], [62.1, 487.0], [62.2, 490.0], [62.3, 491.0], [62.4, 492.0], [62.5, 496.0], [62.6, 496.0], [62.7, 498.0], [62.8, 498.0], [62.9, 500.0], [63.0, 502.0], [63.1, 503.0], [63.2, 504.0], [63.3, 505.0], [63.4, 508.0], [63.5, 508.0], [63.6, 512.0], [63.7, 513.0], [63.8, 516.0], [63.9, 517.0], [64.0, 521.0], [64.1, 523.0], [64.2, 524.0], [64.3, 526.0], [64.4, 527.0], [64.5, 527.0], [64.6, 528.0], [64.7, 529.0], [64.8, 530.0], [64.9, 531.0], [65.0, 532.0], [65.1, 534.0], [65.2, 539.0], [65.3, 539.0], [65.4, 544.0], [65.5, 546.0], [65.6, 548.0], [65.7, 549.0], [65.8, 549.0], [65.9, 550.0], [66.0, 551.0], [66.1, 552.0], [66.2, 552.0], [66.3, 552.0], [66.4, 559.0], [66.5, 561.0], [66.6, 562.0], [66.7, 563.0], [66.8, 563.0], [66.9, 563.0], [67.0, 567.0], [67.1, 568.0], [67.2, 569.0], [67.3, 571.0], [67.4, 576.0], [67.5, 578.0], [67.6, 578.0], [67.7, 583.0], [67.8, 583.0], [67.9, 585.0], [68.0, 587.0], [68.1, 587.0], [68.2, 588.0], [68.3, 588.0], [68.4, 588.0], [68.5, 590.0], [68.6, 592.0], [68.7, 594.0], [68.8, 594.0], [68.9, 595.0], [69.0, 598.0], [69.1, 601.0], [69.2, 608.0], [69.3, 608.0], [69.4, 611.0], [69.5, 612.0], [69.6, 613.0], [69.7, 615.0], [69.8, 616.0], [69.9, 617.0], [70.0, 626.0], [70.1, 628.0], [70.2, 631.0], [70.3, 632.0], [70.4, 633.0], [70.5, 636.0], [70.6, 636.0], [70.7, 636.0], [70.8, 638.0], [70.9, 639.0], [71.0, 641.0], [71.1, 641.0], [71.2, 643.0], [71.3, 647.0], [71.4, 652.0], [71.5, 652.0], [71.6, 652.0], [71.7, 656.0], [71.8, 656.0], [71.9, 657.0], [72.0, 662.0], [72.1, 665.0], [72.2, 666.0], [72.3, 668.0], [72.4, 669.0], [72.5, 671.0], [72.6, 673.0], [72.7, 677.0], [72.8, 677.0], [72.9, 678.0], [73.0, 683.0], [73.1, 687.0], [73.2, 690.0], [73.3, 690.0], [73.4, 692.0], [73.5, 696.0], [73.6, 698.0], [73.7, 699.0], [73.8, 700.0], [73.9, 703.0], [74.0, 704.0], [74.1, 705.0], [74.2, 708.0], [74.3, 709.0], [74.4, 713.0], [74.5, 713.0], [74.6, 714.0], [74.7, 717.0], [74.8, 717.0], [74.9, 721.0], [75.0, 722.0], [75.1, 723.0], [75.2, 725.0], [75.3, 725.0], [75.4, 730.0], [75.5, 736.0], [75.6, 736.0], [75.7, 739.0], [75.8, 745.0], [75.9, 746.0], [76.0, 752.0], [76.1, 755.0], [76.2, 758.0], [76.3, 762.0], [76.4, 764.0], [76.5, 767.0], [76.6, 769.0], [76.7, 770.0], [76.8, 770.0], [76.9, 773.0], [77.0, 779.0], [77.1, 779.0], [77.2, 780.0], [77.3, 783.0], [77.4, 783.0], [77.5, 788.0], [77.6, 789.0], [77.7, 791.0], [77.8, 791.0], [77.9, 799.0], [78.0, 807.0], [78.1, 808.0], [78.2, 811.0], [78.3, 812.0], [78.4, 818.0], [78.5, 820.0], [78.6, 821.0], [78.7, 826.0], [78.8, 827.0], [78.9, 829.0], [79.0, 834.0], [79.1, 841.0], [79.2, 856.0], [79.3, 861.0], [79.4, 863.0], [79.5, 865.0], [79.6, 866.0], [79.7, 871.0], [79.8, 872.0], [79.9, 874.0], [80.0, 879.0], [80.1, 881.0], [80.2, 884.0], [80.3, 887.0], [80.4, 889.0], [80.5, 892.0], [80.6, 899.0], [80.7, 902.0], [80.8, 904.0], [80.9, 907.0], [81.0, 908.0], [81.1, 910.0], [81.2, 911.0], [81.3, 912.0], [81.4, 919.0], [81.5, 928.0], [81.6, 934.0], [81.7, 951.0], [81.8, 952.0], [81.9, 960.0], [82.0, 963.0], [82.1, 969.0], [82.2, 976.0], [82.3, 978.0], [82.4, 979.0], [82.5, 982.0], [82.6, 982.0], [82.7, 992.0], [82.8, 1010.0], [82.9, 1017.0], [83.0, 1022.0], [83.1, 1023.0], [83.2, 1027.0], [83.3, 1028.0], [83.4, 1034.0], [83.5, 1040.0], [83.6, 1042.0], [83.7, 1045.0], [83.8, 1045.0], [83.9, 1060.0], [84.0, 1063.0], [84.1, 1064.0], [84.2, 1070.0], [84.3, 1071.0], [84.4, 1084.0], [84.5, 1089.0], [84.6, 1090.0], [84.7, 1097.0], [84.8, 1103.0], [84.9, 1116.0], [85.0, 1131.0], [85.1, 1134.0], [85.2, 1138.0], [85.3, 1143.0], [85.4, 1155.0], [85.5, 1166.0], [85.6, 1171.0], [85.7, 1179.0], [85.8, 1182.0], [85.9, 1185.0], [86.0, 1200.0], [86.1, 1205.0], [86.2, 1210.0], [86.3, 1215.0], [86.4, 1218.0], [86.5, 1228.0], [86.6, 1238.0], [86.7, 1272.0], [86.8, 1274.0], [86.9, 1290.0], [87.0, 1300.0], [87.1, 1301.0], [87.2, 1321.0], [87.3, 1326.0], [87.4, 1329.0], [87.5, 1337.0], [87.6, 1337.0], [87.7, 1346.0], [87.8, 1347.0], [87.9, 1355.0], [88.0, 1388.0], [88.1, 1389.0], [88.2, 1400.0], [88.3, 1401.0], [88.4, 1429.0], [88.5, 1451.0], [88.6, 1454.0], [88.7, 1464.0], [88.8, 1473.0], [88.9, 1508.0], [89.0, 1522.0], [89.1, 1533.0], [89.2, 1563.0], [89.3, 1565.0], [89.4, 1581.0], [89.5, 1589.0], [89.6, 1599.0], [89.7, 1616.0], [89.8, 1618.0], [89.9, 1647.0], [90.0, 1664.0], [90.1, 1671.0], [90.2, 1678.0], [90.3, 1690.0], [90.4, 1698.0], [90.5, 1730.0], [90.6, 1736.0], [90.7, 1769.0], [90.8, 1772.0], [90.9, 1791.0], [91.0, 1832.0], [91.1, 1840.0], [91.2, 1857.0], [91.3, 1874.0], [91.4, 1893.0], [91.5, 1898.0], [91.6, 1899.0], [91.7, 1933.0], [91.8, 1942.0], [91.9, 1943.0], [92.0, 1951.0], [92.1, 1971.0], [92.2, 2002.0], [92.3, 2025.0], [92.4, 2087.0], [92.5, 2097.0], [92.6, 2104.0], [92.7, 2124.0], [92.8, 2156.0], [92.9, 2200.0], [93.0, 2244.0], [93.1, 2249.0], [93.2, 2264.0], [93.3, 2268.0], [93.4, 2287.0], [93.5, 2303.0], [93.6, 2310.0], [93.7, 2372.0], [93.8, 2403.0], [93.9, 2418.0], [94.0, 2433.0], [94.1, 2458.0], [94.2, 2463.0], [94.3, 2466.0], [94.4, 2485.0], [94.5, 2525.0], [94.6, 2525.0], [94.7, 2546.0], [94.8, 2550.0], [94.9, 2584.0], [95.0, 2609.0], [95.1, 2610.0], [95.2, 2674.0], [95.3, 2720.0], [95.4, 2741.0], [95.5, 2744.0], [95.6, 2760.0], [95.7, 2809.0], [95.8, 2831.0], [95.9, 2860.0], [96.0, 2897.0], [96.1, 2914.0], [96.2, 2989.0], [96.3, 3034.0], [96.4, 3126.0], [96.5, 3156.0], [96.6, 3205.0], [96.7, 3222.0], [96.8, 3240.0], [96.9, 3253.0], [97.0, 3360.0], [97.1, 3369.0], [97.2, 3403.0], [97.3, 3454.0], [97.4, 3506.0], [97.5, 3752.0], [97.6, 3782.0], [97.7, 3789.0], [97.8, 3816.0], [97.9, 3958.0], [98.0, 4139.0], [98.1, 4141.0], [98.2, 4223.0], [98.3, 4273.0], [98.4, 4420.0], [98.5, 4457.0], [98.6, 4665.0], [98.7, 4726.0], [98.8, 4748.0], [98.9, 4824.0], [99.0, 5048.0], [99.1, 5242.0], [99.2, 5379.0], [99.3, 5537.0], [99.4, 5825.0], [99.5, 6027.0], [99.6, 6063.0], [99.7, 7072.0], [99.8, 7540.0], [99.9, 8622.0]], "isOverall": false, "label": "16", "isController": false}, {"data": [[0.0, 30.0], [0.1, 30.0], [0.2, 31.0], [0.3, 31.0], [0.4, 32.0], [0.5, 32.0], [0.6, 32.0], [0.7, 33.0], [0.8, 34.0], [0.9, 34.0], [1.0, 34.0], [1.1, 34.0], [1.2, 35.0], [1.3, 35.0], [1.4, 35.0], [1.5, 36.0], [1.6, 36.0], [1.7, 38.0], [1.8, 38.0], [1.9, 39.0], [2.0, 40.0], [2.1, 40.0], [2.2, 41.0], [2.3, 42.0], [2.4, 42.0], [2.5, 42.0], [2.6, 42.0], [2.7, 43.0], [2.8, 43.0], [2.9, 43.0], [3.0, 44.0], [3.1, 44.0], [3.2, 45.0], [3.3, 45.0], [3.4, 45.0], [3.5, 45.0], [3.6, 45.0], [3.7, 45.0], [3.8, 46.0], [3.9, 46.0], [4.0, 46.0], [4.1, 46.0], [4.2, 47.0], [4.3, 47.0], [4.4, 47.0], [4.5, 47.0], [4.6, 47.0], [4.7, 47.0], [4.8, 48.0], [4.9, 48.0], [5.0, 48.0], [5.1, 48.0], [5.2, 49.0], [5.3, 49.0], [5.4, 49.0], [5.5, 49.0], [5.6, 49.0], [5.7, 49.0], [5.8, 49.0], [5.9, 49.0], [6.0, 49.0], [6.1, 49.0], [6.2, 49.0], [6.3, 50.0], [6.4, 50.0], [6.5, 50.0], [6.6, 50.0], [6.7, 50.0], [6.8, 50.0], [6.9, 51.0], [7.0, 51.0], [7.1, 51.0], [7.2, 51.0], [7.3, 51.0], [7.4, 52.0], [7.5, 52.0], [7.6, 52.0], [7.7, 52.0], [7.8, 53.0], [7.9, 53.0], [8.0, 54.0], [8.1, 54.0], [8.2, 55.0], [8.3, 55.0], [8.4, 55.0], [8.5, 55.0], [8.6, 55.0], [8.7, 55.0], [8.8, 55.0], [8.9, 55.0], [9.0, 57.0], [9.1, 57.0], [9.2, 57.0], [9.3, 57.0], [9.4, 57.0], [9.5, 58.0], [9.6, 58.0], [9.7, 58.0], [9.8, 58.0], [9.9, 59.0], [10.0, 60.0], [10.1, 60.0], [10.2, 60.0], [10.3, 60.0], [10.4, 61.0], [10.5, 61.0], [10.6, 61.0], [10.7, 61.0], [10.8, 62.0], [10.9, 62.0], [11.0, 62.0], [11.1, 62.0], [11.2, 62.0], [11.3, 62.0], [11.4, 63.0], [11.5, 63.0], [11.6, 63.0], [11.7, 64.0], [11.8, 64.0], [11.9, 64.0], [12.0, 65.0], [12.1, 65.0], [12.2, 65.0], [12.3, 66.0], [12.4, 66.0], [12.5, 66.0], [12.6, 66.0], [12.7, 66.0], [12.8, 67.0], [12.9, 67.0], [13.0, 67.0], [13.1, 67.0], [13.2, 67.0], [13.3, 67.0], [13.4, 68.0], [13.5, 68.0], [13.6, 68.0], [13.7, 68.0], [13.8, 68.0], [13.9, 68.0], [14.0, 69.0], [14.1, 69.0], [14.2, 69.0], [14.3, 69.0], [14.4, 69.0], [14.5, 69.0], [14.6, 69.0], [14.7, 70.0], [14.8, 70.0], [14.9, 71.0], [15.0, 71.0], [15.1, 71.0], [15.2, 72.0], [15.3, 72.0], [15.4, 72.0], [15.5, 72.0], [15.6, 72.0], [15.7, 73.0], [15.8, 73.0], [15.9, 75.0], [16.0, 75.0], [16.1, 75.0], [16.2, 75.0], [16.3, 75.0], [16.4, 75.0], [16.5, 76.0], [16.6, 76.0], [16.7, 76.0], [16.8, 76.0], [16.9, 76.0], [17.0, 76.0], [17.1, 76.0], [17.2, 76.0], [17.3, 76.0], [17.4, 77.0], [17.5, 78.0], [17.6, 78.0], [17.7, 78.0], [17.8, 78.0], [17.9, 78.0], [18.0, 79.0], [18.1, 79.0], [18.2, 79.0], [18.3, 79.0], [18.4, 79.0], [18.5, 79.0], [18.6, 79.0], [18.7, 80.0], [18.8, 80.0], [18.9, 81.0], [19.0, 81.0], [19.1, 81.0], [19.2, 81.0], [19.3, 81.0], [19.4, 81.0], [19.5, 82.0], [19.6, 82.0], [19.7, 82.0], [19.8, 82.0], [19.9, 83.0], [20.0, 83.0], [20.1, 83.0], [20.2, 83.0], [20.3, 83.0], [20.4, 84.0], [20.5, 84.0], [20.6, 84.0], [20.7, 84.0], [20.8, 85.0], [20.9, 85.0], [21.0, 86.0], [21.1, 86.0], [21.2, 86.0], [21.3, 86.0], [21.4, 86.0], [21.5, 87.0], [21.6, 87.0], [21.7, 88.0], [21.8, 88.0], [21.9, 89.0], [22.0, 90.0], [22.1, 90.0], [22.2, 91.0], [22.3, 91.0], [22.4, 91.0], [22.5, 92.0], [22.6, 92.0], [22.7, 92.0], [22.8, 92.0], [22.9, 92.0], [23.0, 93.0], [23.1, 93.0], [23.2, 93.0], [23.3, 93.0], [23.4, 94.0], [23.5, 95.0], [23.6, 95.0], [23.7, 95.0], [23.8, 95.0], [23.9, 95.0], [24.0, 96.0], [24.1, 96.0], [24.2, 96.0], [24.3, 97.0], [24.4, 97.0], [24.5, 98.0], [24.6, 98.0], [24.7, 98.0], [24.8, 98.0], [24.9, 99.0], [25.0, 99.0], [25.1, 99.0], [25.2, 100.0], [25.3, 100.0], [25.4, 100.0], [25.5, 102.0], [25.6, 102.0], [25.7, 102.0], [25.8, 103.0], [25.9, 103.0], [26.0, 104.0], [26.1, 104.0], [26.2, 104.0], [26.3, 105.0], [26.4, 105.0], [26.5, 105.0], [26.6, 105.0], [26.7, 105.0], [26.8, 106.0], [26.9, 106.0], [27.0, 107.0], [27.1, 107.0], [27.2, 107.0], [27.3, 107.0], [27.4, 108.0], [27.5, 109.0], [27.6, 109.0], [27.7, 110.0], [27.8, 110.0], [27.9, 110.0], [28.0, 111.0], [28.1, 111.0], [28.2, 111.0], [28.3, 111.0], [28.4, 112.0], [28.5, 112.0], [28.6, 112.0], [28.7, 113.0], [28.8, 113.0], [28.9, 113.0], [29.0, 114.0], [29.1, 114.0], [29.2, 115.0], [29.3, 116.0], [29.4, 116.0], [29.5, 117.0], [29.6, 117.0], [29.7, 118.0], [29.8, 118.0], [29.9, 118.0], [30.0, 118.0], [30.1, 118.0], [30.2, 118.0], [30.3, 119.0], [30.4, 119.0], [30.5, 119.0], [30.6, 119.0], [30.7, 120.0], [30.8, 120.0], [30.9, 120.0], [31.0, 121.0], [31.1, 121.0], [31.2, 121.0], [31.3, 121.0], [31.4, 121.0], [31.5, 122.0], [31.6, 122.0], [31.7, 122.0], [31.8, 122.0], [31.9, 123.0], [32.0, 124.0], [32.1, 124.0], [32.2, 124.0], [32.3, 124.0], [32.4, 125.0], [32.5, 126.0], [32.6, 126.0], [32.7, 126.0], [32.8, 127.0], [32.9, 127.0], [33.0, 127.0], [33.1, 127.0], [33.2, 127.0], [33.3, 127.0], [33.4, 128.0], [33.5, 129.0], [33.6, 129.0], [33.7, 130.0], [33.8, 130.0], [33.9, 130.0], [34.0, 131.0], [34.1, 131.0], [34.2, 131.0], [34.3, 132.0], [34.4, 132.0], [34.5, 133.0], [34.6, 133.0], [34.7, 133.0], [34.8, 133.0], [34.9, 134.0], [35.0, 135.0], [35.1, 135.0], [35.2, 135.0], [35.3, 135.0], [35.4, 135.0], [35.5, 136.0], [35.6, 136.0], [35.7, 136.0], [35.8, 136.0], [35.9, 136.0], [36.0, 136.0], [36.1, 136.0], [36.2, 137.0], [36.3, 139.0], [36.4, 139.0], [36.5, 139.0], [36.6, 139.0], [36.7, 139.0], [36.8, 139.0], [36.9, 140.0], [37.0, 140.0], [37.1, 140.0], [37.2, 140.0], [37.3, 141.0], [37.4, 141.0], [37.5, 142.0], [37.6, 142.0], [37.7, 143.0], [37.8, 143.0], [37.9, 143.0], [38.0, 144.0], [38.1, 144.0], [38.2, 144.0], [38.3, 144.0], [38.4, 145.0], [38.5, 145.0], [38.6, 145.0], [38.7, 145.0], [38.8, 146.0], [38.9, 146.0], [39.0, 146.0], [39.1, 146.0], [39.2, 146.0], [39.3, 146.0], [39.4, 146.0], [39.5, 147.0], [39.6, 147.0], [39.7, 147.0], [39.8, 147.0], [39.9, 147.0], [40.0, 147.0], [40.1, 147.0], [40.2, 148.0], [40.3, 148.0], [40.4, 149.0], [40.5, 149.0], [40.6, 149.0], [40.7, 149.0], [40.8, 149.0], [40.9, 149.0], [41.0, 149.0], [41.1, 149.0], [41.2, 150.0], [41.3, 150.0], [41.4, 151.0], [41.5, 151.0], [41.6, 151.0], [41.7, 152.0], [41.8, 152.0], [41.9, 153.0], [42.0, 155.0], [42.1, 155.0], [42.2, 155.0], [42.3, 155.0], [42.4, 156.0], [42.5, 156.0], [42.6, 156.0], [42.7, 157.0], [42.8, 159.0], [42.9, 160.0], [43.0, 160.0], [43.1, 160.0], [43.2, 160.0], [43.3, 161.0], [43.4, 161.0], [43.5, 161.0], [43.6, 161.0], [43.7, 161.0], [43.8, 162.0], [43.9, 162.0], [44.0, 162.0], [44.1, 162.0], [44.2, 162.0], [44.3, 162.0], [44.4, 163.0], [44.5, 163.0], [44.6, 163.0], [44.7, 163.0], [44.8, 163.0], [44.9, 164.0], [45.0, 164.0], [45.1, 164.0], [45.2, 164.0], [45.3, 166.0], [45.4, 166.0], [45.5, 166.0], [45.6, 166.0], [45.7, 166.0], [45.8, 167.0], [45.9, 168.0], [46.0, 169.0], [46.1, 169.0], [46.2, 169.0], [46.3, 170.0], [46.4, 172.0], [46.5, 173.0], [46.6, 173.0], [46.7, 174.0], [46.8, 174.0], [46.9, 175.0], [47.0, 175.0], [47.1, 175.0], [47.2, 175.0], [47.3, 176.0], [47.4, 178.0], [47.5, 181.0], [47.6, 181.0], [47.7, 183.0], [47.8, 183.0], [47.9, 185.0], [48.0, 185.0], [48.1, 185.0], [48.2, 186.0], [48.3, 186.0], [48.4, 187.0], [48.5, 189.0], [48.6, 189.0], [48.7, 189.0], [48.8, 189.0], [48.9, 189.0], [49.0, 190.0], [49.1, 190.0], [49.2, 191.0], [49.3, 191.0], [49.4, 191.0], [49.5, 192.0], [49.6, 192.0], [49.7, 192.0], [49.8, 192.0], [49.9, 194.0], [50.0, 194.0], [50.1, 194.0], [50.2, 194.0], [50.3, 194.0], [50.4, 196.0], [50.5, 197.0], [50.6, 197.0], [50.7, 197.0], [50.8, 198.0], [50.9, 198.0], [51.0, 199.0], [51.1, 199.0], [51.2, 199.0], [51.3, 199.0], [51.4, 200.0], [51.5, 201.0], [51.6, 201.0], [51.7, 202.0], [51.8, 202.0], [51.9, 203.0], [52.0, 203.0], [52.1, 203.0], [52.2, 204.0], [52.3, 206.0], [52.4, 206.0], [52.5, 206.0], [52.6, 206.0], [52.7, 206.0], [52.8, 208.0], [52.9, 208.0], [53.0, 208.0], [53.1, 208.0], [53.2, 208.0], [53.3, 209.0], [53.4, 210.0], [53.5, 210.0], [53.6, 210.0], [53.7, 211.0], [53.8, 211.0], [53.9, 211.0], [54.0, 211.0], [54.1, 211.0], [54.2, 212.0], [54.3, 212.0], [54.4, 212.0], [54.5, 212.0], [54.6, 212.0], [54.7, 213.0], [54.8, 215.0], [54.9, 215.0], [55.0, 216.0], [55.1, 216.0], [55.2, 216.0], [55.3, 216.0], [55.4, 216.0], [55.5, 216.0], [55.6, 216.0], [55.7, 216.0], [55.8, 217.0], [55.9, 218.0], [56.0, 218.0], [56.1, 218.0], [56.2, 220.0], [56.3, 220.0], [56.4, 220.0], [56.5, 220.0], [56.6, 220.0], [56.7, 221.0], [56.8, 221.0], [56.9, 221.0], [57.0, 221.0], [57.1, 221.0], [57.2, 221.0], [57.3, 222.0], [57.4, 222.0], [57.5, 222.0], [57.6, 222.0], [57.7, 224.0], [57.8, 226.0], [57.9, 226.0], [58.0, 227.0], [58.1, 227.0], [58.2, 227.0], [58.3, 227.0], [58.4, 228.0], [58.5, 228.0], [58.6, 228.0], [58.7, 229.0], [58.8, 229.0], [58.9, 229.0], [59.0, 229.0], [59.1, 229.0], [59.2, 230.0], [59.3, 230.0], [59.4, 230.0], [59.5, 230.0], [59.6, 230.0], [59.7, 230.0], [59.8, 233.0], [59.9, 234.0], [60.0, 234.0], [60.1, 234.0], [60.2, 234.0], [60.3, 236.0], [60.4, 236.0], [60.5, 236.0], [60.6, 236.0], [60.7, 236.0], [60.8, 236.0], [60.9, 237.0], [61.0, 239.0], [61.1, 239.0], [61.2, 240.0], [61.3, 242.0], [61.4, 242.0], [61.5, 243.0], [61.6, 243.0], [61.7, 243.0], [61.8, 244.0], [61.9, 244.0], [62.0, 244.0], [62.1, 244.0], [62.2, 245.0], [62.3, 246.0], [62.4, 246.0], [62.5, 247.0], [62.6, 247.0], [62.7, 247.0], [62.8, 247.0], [62.9, 249.0], [63.0, 249.0], [63.1, 249.0], [63.2, 249.0], [63.3, 250.0], [63.4, 250.0], [63.5, 250.0], [63.6, 250.0], [63.7, 250.0], [63.8, 251.0], [63.9, 252.0], [64.0, 252.0], [64.1, 252.0], [64.2, 253.0], [64.3, 253.0], [64.4, 254.0], [64.5, 254.0], [64.6, 254.0], [64.7, 256.0], [64.8, 256.0], [64.9, 257.0], [65.0, 257.0], [65.1, 257.0], [65.2, 258.0], [65.3, 258.0], [65.4, 259.0], [65.5, 259.0], [65.6, 259.0], [65.7, 261.0], [65.8, 262.0], [65.9, 263.0], [66.0, 268.0], [66.1, 268.0], [66.2, 269.0], [66.3, 270.0], [66.4, 270.0], [66.5, 275.0], [66.6, 275.0], [66.7, 277.0], [66.8, 277.0], [66.9, 278.0], [67.0, 278.0], [67.1, 278.0], [67.2, 279.0], [67.3, 281.0], [67.4, 281.0], [67.5, 282.0], [67.6, 282.0], [67.7, 284.0], [67.8, 284.0], [67.9, 286.0], [68.0, 287.0], [68.1, 287.0], [68.2, 292.0], [68.3, 293.0], [68.4, 294.0], [68.5, 299.0], [68.6, 299.0], [68.7, 300.0], [68.8, 301.0], [68.9, 304.0], [69.0, 306.0], [69.1, 306.0], [69.2, 307.0], [69.3, 308.0], [69.4, 311.0], [69.5, 311.0], [69.6, 311.0], [69.7, 312.0], [69.8, 315.0], [69.9, 319.0], [70.0, 321.0], [70.1, 321.0], [70.2, 322.0], [70.3, 323.0], [70.4, 324.0], [70.5, 326.0], [70.6, 326.0], [70.7, 328.0], [70.8, 329.0], [70.9, 332.0], [71.0, 334.0], [71.1, 334.0], [71.2, 334.0], [71.3, 339.0], [71.4, 339.0], [71.5, 339.0], [71.6, 339.0], [71.7, 347.0], [71.8, 349.0], [71.9, 349.0], [72.0, 350.0], [72.1, 350.0], [72.2, 358.0], [72.3, 359.0], [72.4, 364.0], [72.5, 364.0], [72.6, 364.0], [72.7, 365.0], [72.8, 366.0], [72.9, 366.0], [73.0, 368.0], [73.1, 368.0], [73.2, 372.0], [73.3, 373.0], [73.4, 375.0], [73.5, 379.0], [73.6, 379.0], [73.7, 382.0], [73.8, 384.0], [73.9, 385.0], [74.0, 386.0], [74.1, 386.0], [74.2, 391.0], [74.3, 393.0], [74.4, 396.0], [74.5, 398.0], [74.6, 398.0], [74.7, 400.0], [74.8, 404.0], [74.9, 404.0], [75.0, 406.0], [75.1, 406.0], [75.2, 410.0], [75.3, 412.0], [75.4, 415.0], [75.5, 415.0], [75.6, 415.0], [75.7, 417.0], [75.8, 417.0], [75.9, 418.0], [76.0, 420.0], [76.1, 420.0], [76.2, 420.0], [76.3, 423.0], [76.4, 424.0], [76.5, 424.0], [76.6, 424.0], [76.7, 425.0], [76.8, 426.0], [76.9, 426.0], [77.0, 427.0], [77.1, 427.0], [77.2, 438.0], [77.3, 439.0], [77.4, 440.0], [77.5, 440.0], [77.6, 440.0], [77.7, 442.0], [77.8, 444.0], [77.9, 446.0], [78.0, 449.0], [78.1, 449.0], [78.2, 449.0], [78.3, 452.0], [78.4, 454.0], [78.5, 456.0], [78.6, 456.0], [78.7, 458.0], [78.8, 458.0], [78.9, 459.0], [79.0, 464.0], [79.1, 464.0], [79.2, 469.0], [79.3, 469.0], [79.4, 469.0], [79.5, 469.0], [79.6, 469.0], [79.7, 471.0], [79.8, 477.0], [79.9, 477.0], [80.0, 481.0], [80.1, 481.0], [80.2, 485.0], [80.3, 491.0], [80.4, 493.0], [80.5, 494.0], [80.6, 494.0], [80.7, 494.0], [80.8, 497.0], [80.9, 499.0], [81.0, 499.0], [81.1, 499.0], [81.2, 500.0], [81.3, 502.0], [81.4, 503.0], [81.5, 508.0], [81.6, 508.0], [81.7, 509.0], [81.8, 510.0], [81.9, 510.0], [82.0, 514.0], [82.1, 514.0], [82.2, 514.0], [82.3, 514.0], [82.4, 520.0], [82.5, 521.0], [82.6, 521.0], [82.7, 521.0], [82.8, 524.0], [82.9, 529.0], [83.0, 532.0], [83.1, 532.0], [83.2, 533.0], [83.3, 544.0], [83.4, 548.0], [83.5, 560.0], [83.6, 560.0], [83.7, 562.0], [83.8, 565.0], [83.9, 569.0], [84.0, 569.0], [84.1, 569.0], [84.2, 571.0], [84.3, 575.0], [84.4, 579.0], [84.5, 582.0], [84.6, 582.0], [84.7, 593.0], [84.8, 595.0], [84.9, 598.0], [85.0, 599.0], [85.1, 599.0], [85.2, 600.0], [85.3, 603.0], [85.4, 604.0], [85.5, 609.0], [85.6, 609.0], [85.7, 610.0], [85.8, 611.0], [85.9, 616.0], [86.0, 618.0], [86.1, 618.0], [86.2, 626.0], [86.3, 632.0], [86.4, 637.0], [86.5, 638.0], [86.6, 638.0], [86.7, 638.0], [86.8, 639.0], [86.9, 640.0], [87.0, 647.0], [87.1, 647.0], [87.2, 649.0], [87.3, 651.0], [87.4, 657.0], [87.5, 667.0], [87.6, 667.0], [87.7, 670.0], [87.8, 677.0], [87.9, 684.0], [88.0, 690.0], [88.1, 690.0], [88.2, 701.0], [88.3, 705.0], [88.4, 705.0], [88.5, 712.0], [88.6, 712.0], [88.7, 717.0], [88.8, 721.0], [88.9, 728.0], [89.0, 730.0], [89.1, 730.0], [89.2, 736.0], [89.3, 745.0], [89.4, 745.0], [89.5, 747.0], [89.6, 747.0], [89.7, 749.0], [89.8, 751.0], [89.9, 761.0], [90.0, 776.0], [90.1, 776.0], [90.2, 783.0], [90.3, 789.0], [90.4, 791.0], [90.5, 795.0], [90.6, 795.0], [90.7, 799.0], [90.8, 815.0], [90.9, 825.0], [91.0, 837.0], [91.1, 837.0], [91.2, 841.0], [91.3, 843.0], [91.4, 880.0], [91.5, 883.0], [91.6, 883.0], [91.7, 883.0], [91.8, 905.0], [91.9, 914.0], [92.0, 953.0], [92.1, 953.0], [92.2, 955.0], [92.3, 955.0], [92.4, 969.0], [92.5, 977.0], [92.6, 977.0], [92.7, 1009.0], [92.8, 1013.0], [92.9, 1024.0], [93.0, 1052.0], [93.1, 1052.0], [93.2, 1052.0], [93.3, 1082.0], [93.4, 1087.0], [93.5, 1091.0], [93.6, 1091.0], [93.7, 1102.0], [93.8, 1121.0], [93.9, 1122.0], [94.0, 1186.0], [94.1, 1186.0], [94.2, 1203.0], [94.3, 1205.0], [94.4, 1207.0], [94.5, 1220.0], [94.6, 1220.0], [94.7, 1224.0], [94.8, 1225.0], [94.9, 1231.0], [95.0, 1239.0], [95.1, 1239.0], [95.2, 1240.0], [95.3, 1258.0], [95.4, 1265.0], [95.5, 1291.0], [95.6, 1291.0], [95.7, 1306.0], [95.8, 1322.0], [95.9, 1325.0], [96.0, 1331.0], [96.1, 1331.0], [96.2, 1339.0], [96.3, 1344.0], [96.4, 1366.0], [96.5, 1377.0], [96.6, 1377.0], [96.7, 1392.0], [96.8, 1405.0], [96.9, 1414.0], [97.0, 1436.0], [97.1, 1436.0], [97.2, 1519.0], [97.3, 1529.0], [97.4, 1618.0], [97.5, 1678.0], [97.6, 1678.0], [97.7, 1681.0], [97.8, 1737.0], [97.9, 1783.0], [98.0, 1912.0], [98.1, 1912.0], [98.2, 2141.0], [98.3, 2180.0], [98.4, 2413.0], [98.5, 2417.0], [98.6, 2417.0], [98.7, 2678.0], [98.8, 2796.0], [98.9, 3170.0], [99.0, 3184.0], [99.1, 3184.0], [99.2, 3434.0], [99.3, 3620.0], [99.4, 3695.0], [99.5, 3721.0], [99.6, 3721.0], [99.7, 3853.0], [99.8, 3896.0], [99.9, 4036.0]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 265.0, "series": [{"data": [[0.0, 57.0], [600.0, 2.0], [100.0, 28.0], [400.0, 6.0], [200.0, 4.0], [800.0, 1.0], [1900.0, 1.0], [2000.0, 1.0]], "isOverall": false, "label": "1", "isController": false}, {"data": [[0.0, 112.0], [2100.0, 1.0], [2200.0, 1.0], [1200.0, 1.0], [300.0, 5.0], [600.0, 2.0], [200.0, 14.0], [100.0, 56.0], [400.0, 4.0], [800.0, 1.0], [900.0, 1.0], [500.0, 2.0]], "isOverall": false, "label": "2", "isController": false}, {"data": [[0.0, 158.0], [2300.0, 1.0], [600.0, 6.0], [2400.0, 2.0], [2500.0, 1.0], [700.0, 4.0], [2700.0, 1.0], [200.0, 43.0], [800.0, 2.0], [900.0, 3.0], [1000.0, 2.0], [1100.0, 3.0], [300.0, 19.0], [1200.0, 1.0], [100.0, 134.0], [400.0, 15.0], [500.0, 5.0]], "isOverall": false, "label": "4", "isController": false}, {"data": [[0.0, 130.0], [600.0, 75.0], [700.0, 67.0], [800.0, 43.0], [900.0, 34.0], [1000.0, 32.0], [1100.0, 20.0], [1200.0, 16.0], [1300.0, 19.0], [1400.0, 11.0], [1500.0, 12.0], [1600.0, 13.0], [1700.0, 8.0], [1800.0, 11.0], [1900.0, 9.0], [2000.0, 6.0], [2100.0, 5.0], [2200.0, 10.0], [2300.0, 4.0], [2400.0, 11.0], [2500.0, 9.0], [2600.0, 4.0], [2700.0, 6.0], [2800.0, 7.0], [2900.0, 3.0], [3000.0, 2.0], [3100.0, 3.0], [3200.0, 7.0], [3300.0, 3.0], [3400.0, 3.0], [3500.0, 1.0], [3600.0, 1.0], [3700.0, 4.0], [3800.0, 1.0], [3900.0, 2.0], [4000.0, 1.0], [4200.0, 2.0], [4100.0, 3.0], [4300.0, 1.0], [4400.0, 3.0], [4600.0, 1.0], [4700.0, 3.0], [4800.0, 2.0], [5000.0, 1.0], [4900.0, 1.0], [5200.0, 2.0], [5300.0, 1.0], [5500.0, 1.0], [5800.0, 1.0], [5700.0, 1.0], [6000.0, 2.0], [5900.0, 1.0], [6900.0, 1.0], [7000.0, 1.0], [7500.0, 1.0], [8100.0, 1.0], [8600.0, 1.0], [10400.0, 1.0], [100.0, 265.0], [200.0, 227.0], [300.0, 215.0], [400.0, 169.0], [500.0, 99.0]], "isOverall": false, "label": "16", "isController": false}, {"data": [[0.0, 201.0], [600.0, 24.0], [700.0, 21.0], [800.0, 8.0], [900.0, 7.0], [1000.0, 8.0], [1100.0, 4.0], [1200.0, 12.0], [1300.0, 9.0], [1400.0, 3.0], [1500.0, 2.0], [100.0, 210.0], [1600.0, 3.0], [1700.0, 2.0], [1900.0, 1.0], [2100.0, 2.0], [2400.0, 2.0], [2600.0, 1.0], [2700.0, 1.0], [3100.0, 2.0], [200.0, 138.0], [3400.0, 1.0], [3600.0, 2.0], [3700.0, 1.0], [3800.0, 2.0], [4000.0, 1.0], [300.0, 48.0], [400.0, 52.0], [500.0, 32.0]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 10400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 210.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2312.0, "series": [{"data": [[0.0, 2312.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 578.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 210.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.70758949E12, "maxY": 16.0, "series": [{"data": [[1.70758949E12, 1.0], [1.7075895E12, 1.0], [1.70758951E12, 1.0]], "isOverall": false, "label": "1", "isController": false}, {"data": [[1.70758952E12, 1.7821782178217824], [1.70758953E12, 1.0], [1.70758951E12, 1.945205479452055]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.70758953E12, 3.8359375000000004], [1.70758954E12, 4.0], [1.70758955E12, 3.0344827586206904]], "isOverall": false, "label": "4", "isController": false}, {"data": [[1.70758959E12, 14.098765432098766], [1.70758964E12, 16.0], [1.70758965E12, 15.80392156862745], [1.70758966E12, 9.781725888324884], [1.70758967E12, 2.962962962962964], [1.7075896E12, 16.0], [1.70758961E12, 16.0], [1.70758962E12, 16.0], [1.70758963E12, 16.0]], "isOverall": false, "label": "16", "isController": false}, {"data": [[1.70758956E12, 8.0], [1.70758957E12, 8.0], [1.70758958E12, 7.5619047619047635], [1.70758959E12, 3.0481927710843366], [1.70758955E12, 7.372340425531916]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.70758967E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 63.0, "minX": 1.0, "maxY": 1465.3333333333335, "series": [{"data": [[1.0, 170.24]], "isOverall": false, "label": "1", "isController": false}, {"data": [[1.0, 170.24]], "isOverall": false, "label": "1-Aggregated", "isController": false}, {"data": [[1.0, 153.05769230769232], [2.0, 159.1824324324325]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.7400000000000004, 157.59]], "isOverall": false, "label": "2-Aggregated", "isController": false}, {"data": [[1.0, 84.18181818181817], [2.0, 131.25], [4.0, 221.63896848137546], [3.0, 430.875]], "isOverall": false, "label": "4", "isController": false}, {"data": [[3.737500000000001, 214.81250000000006]], "isOverall": false, "label": "4-Aggregated", "isController": false}, {"data": [[2.0, 63.0], [8.0, 464.5], [9.0, 223.8918918918919], [10.0, 419.17499999999995], [11.0, 320.88888888888886], [3.0, 132.46153846153848], [12.0, 1465.3333333333335], [13.0, 601.4999999999999], [14.0, 686.4285714285713], [15.0, 801.7916666666663], [4.0, 282.735294117647], [16.0, 749.0814584949567], [1.0, 340.5714285714286], [5.0, 139.5], [6.0, 458.78378378378375], [7.0, 674.0]], "isOverall": false, "label": "16", "isController": false}, {"data": [[14.673125, 699.8468749999993]], "isOverall": false, "label": "16-Aggregated", "isController": false}, {"data": [[2.0, 115.42857142857143], [4.0, 259.76190476190476], [8.0, 376.92424242424215], [1.0, 109.11111111111111], [5.0, 310.43589743589746], [3.0, 261.09523809523813], [6.0, 338.2105263157895], [7.0, 135.875]], "isOverall": false, "label": "8", "isController": false}, {"data": [[7.2974999999999985, 353.6349999999997]], "isOverall": false, "label": "8-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 16.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 228.1, "minX": 1.70758949E12, "maxY": 1.20136964E7, "series": [{"data": [[1.70758957E12, 1.13614613E7], [1.70758959E12, 7445230.1], [1.70758953E12, 7105414.0], [1.70758955E12, 8395522.8], [1.70758964E12, 1.20020616E7], [1.70758949E12, 1502942.9], [1.70758966E12, 1.14439704E7], [1.70758951E12, 4895493.7], [1.7075896E12, 1.20136964E7], [1.70758962E12, 1.07769446E7], [1.70758956E12, 1.15524017E7], [1.70758958E12, 1.1727733E7], [1.70758952E12, 5998675.2], [1.70758954E12, 1.03840703E7], [1.70758965E12, 1.05684626E7], [1.7075895E12, 3273690.9], [1.70758967E12, 4847455.7], [1.70758961E12, 1.16550914E7], [1.70758963E12, 1.12146657E7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.70758957E12, 4459.2], [1.70758959E12, 3731.4], [1.70758953E12, 3503.8], [1.70758955E12, 4117.7], [1.70758964E12, 4981.9], [1.70758949E12, 228.1], [1.70758966E12, 4482.5], [1.70758951E12, 1933.9], [1.7075896E12, 5028.3], [1.70758962E12, 4823.0], [1.70758956E12, 4937.7], [1.70758958E12, 4777.6], [1.70758952E12, 2297.4], [1.70758954E12, 4209.2], [1.70758965E12, 4641.5], [1.7075895E12, 1774.6], [1.70758967E12, 1229.1], [1.70758961E12, 4800.8], [1.70758963E12, 4573.6]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.70758967E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 94.99999999999999, "minX": 1.70758949E12, "maxY": 800.0000000000007, "series": [{"data": [[1.70758949E12, 362.3], [1.7075895E12, 124.50000000000001], [1.70758951E12, 307.5]], "isOverall": false, "label": "1", "isController": false}, {"data": [[1.70758952E12, 182.42574257425744], [1.70758953E12, 94.99999999999999], [1.70758951E12, 145.5205479452055]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.70758953E12, 203.53906250000003], [1.70758954E12, 228.9135135135136], [1.70758955E12, 201.41379310344826]], "isOverall": false, "label": "4", "isController": false}, {"data": [[1.70758959E12, 427.1604938271605], [1.70758964E12, 752.6027397260272], [1.70758965E12, 768.0000000000002], [1.70758966E12, 523.6345177664974], [1.70758967E12, 278.14814814814827], [1.7075896E12, 756.3076923076926], [1.70758961E12, 780.1848341232231], [1.70758962E12, 721.3396226415091], [1.70758963E12, 800.0000000000007]], "isOverall": false, "label": "16", "isController": false}, {"data": [[1.70758956E12, 368.9308755760368], [1.70758957E12, 407.6020408163266], [1.70758958E12, 377.83333333333326], [1.70758959E12, 218.0722891566265], [1.70758955E12, 271.43617021276594]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.70758967E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 40.269230769230774, "minX": 1.70758949E12, "maxY": 204.39999999999998, "series": [{"data": [[1.70758949E12, 204.39999999999998], [1.7075895E12, 60.346153846153854], [1.70758951E12, 155.16666666666666]], "isOverall": false, "label": "1", "isController": false}, {"data": [[1.70758952E12, 90.53465346534651], [1.70758953E12, 40.269230769230774], [1.70758951E12, 67.20547945205479]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.70758953E12, 85.36718750000006], [1.70758954E12, 97.4162162162162], [1.70758955E12, 85.78160919540231]], "isOverall": false, "label": "4", "isController": false}, {"data": [[1.70758959E12, 140.03703703703704], [1.70758964E12, 178.05936073059357], [1.70758965E12, 173.81862745098022], [1.70758966E12, 146.99999999999991], [1.70758967E12, 118.53703703703702], [1.7075896E12, 169.398190045249], [1.70758961E12, 184.7156398104264], [1.70758962E12, 171.6367924528303], [1.70758963E12, 186.3134328358209]], "isOverall": false, "label": "16", "isController": false}, {"data": [[1.70758956E12, 123.08755760368668], [1.70758957E12, 127.88775510204088], [1.70758958E12, 124.90476190476187], [1.70758959E12, 90.81927710843374], [1.70758955E12, 91.34042553191489]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.70758967E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 16.25, "minX": 1.70758949E12, "maxY": 50.18957345971562, "series": [{"data": [[1.70758949E12, 17.4], [1.7075895E12, 16.615384615384617], [1.70758951E12, 16.25]], "isOverall": false, "label": "1", "isController": false}, {"data": [[1.70758952E12, 17.603960396039607], [1.70758953E12, 16.576923076923073], [1.70758951E12, 18.123287671232873]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.70758953E12, 19.28124999999999], [1.70758954E12, 21.113513513513517], [1.70758955E12, 19.51724137931035]], "isOverall": false, "label": "4", "isController": false}, {"data": [[1.70758959E12, 31.4074074074074], [1.70758964E12, 29.50684931506847], [1.70758965E12, 28.946078431372534], [1.70758966E12, 34.116751269035525], [1.70758967E12, 19.148148148148145], [1.7075896E12, 28.054298642533947], [1.70758961E12, 50.18957345971562], [1.70758962E12, 34.938679245283005], [1.70758963E12, 32.90547263681592]], "isOverall": false, "label": "16", "isController": false}, {"data": [[1.70758956E12, 24.36866359447004], [1.70758957E12, 23.821428571428573], [1.70758958E12, 23.0904761904762], [1.70758959E12, 19.55421686746988], [1.70758955E12, 23.478723404255316]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.70758967E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 28.0, "minX": 1.70758949E12, "maxY": 10443.0, "series": [{"data": [[1.70758957E12, 3853.0], [1.70758959E12, 2413.0], [1.70758953E12, 2761.0], [1.70758955E12, 2423.0], [1.70758964E12, 6027.0], [1.70758949E12, 1981.0], [1.70758966E12, 5752.0], [1.70758951E12, 2041.0], [1.7075896E12, 5537.0], [1.70758962E12, 6063.0], [1.70758956E12, 4036.0], [1.70758958E12, 3896.0], [1.70758952E12, 2200.0], [1.70758954E12, 2567.0], [1.70758965E12, 7540.0], [1.7075895E12, 864.0], [1.70758967E12, 2808.0], [1.70758961E12, 10443.0], [1.70758963E12, 8622.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.70758957E12, 32.0], [1.70758959E12, 31.0], [1.70758953E12, 28.0], [1.70758955E12, 30.0], [1.70758964E12, 67.0], [1.70758949E12, 42.0], [1.70758966E12, 35.0], [1.70758951E12, 29.0], [1.7075896E12, 72.0], [1.70758962E12, 51.0], [1.70758956E12, 31.0], [1.70758958E12, 30.0], [1.70758952E12, 29.0], [1.70758954E12, 28.0], [1.70758965E12, 87.0], [1.7075895E12, 30.0], [1.70758967E12, 30.0], [1.70758961E12, 40.0], [1.70758963E12, 60.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.70758957E12, 926.3000000000004], [1.70758959E12, 787.0], [1.70758953E12, 365.5], [1.70758955E12, 556.8000000000002], [1.70758964E12, 1690.0], [1.70758949E12, 1845.5000000000005], [1.70758966E12, 1165.6000000000008], [1.70758951E12, 356.6000000000006], [1.7075896E12, 1891.6000000000004], [1.70758962E12, 1725.8000000000027], [1.70758956E12, 763.4000000000016], [1.70758958E12, 967.4000000000001], [1.70758952E12, 335.7999999999999], [1.70758954E12, 452.4], [1.70758965E12, 1744.5], [1.7075895E12, 240.00000000000017], [1.70758967E12, 471.5], [1.70758961E12, 2452.6000000000004], [1.70758963E12, 1926.2000000000003]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.70758957E12, 3699.7400000000002], [1.70758959E12, 2316.149999999999], [1.70758953E12, 1890.899999999982], [1.70758955E12, 1860.4800000000046], [1.70758964E12, 5194.0000000000055], [1.70758949E12, 1981.0], [1.70758966E12, 4346.680000000015], [1.70758951E12, 2041.0], [1.7075896E12, 5150.040000000001], [1.70758962E12, 5036.3], [1.70758956E12, 3388.999999999998], [1.70758958E12, 3660.3899999999926], [1.70758952E12, 2198.6400000000003], [1.70758954E12, 2439.719999999998], [1.70758965E12, 5970.3499999999985], [1.7075895E12, 864.0], [1.70758967E12, 2808.0], [1.70758961E12, 6709.5199999999895], [1.70758963E12, 8157.839999999989]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.70758957E12, 219.0], [1.70758959E12, 191.0], [1.70758953E12, 106.0], [1.70758955E12, 140.0], [1.70758964E12, 416.0], [1.70758949E12, 105.0], [1.70758966E12, 257.0], [1.70758951E12, 95.0], [1.7075896E12, 415.0], [1.70758962E12, 407.5], [1.70758956E12, 208.0], [1.70758958E12, 197.5], [1.70758952E12, 89.0], [1.70758954E12, 124.0], [1.70758965E12, 439.5], [1.7075895E12, 85.5], [1.70758967E12, 142.5], [1.70758961E12, 346.0], [1.70758963E12, 436.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.70758957E12, 1338.349999999998], [1.70758959E12, 976.75], [1.70758953E12, 647.5], [1.70758955E12, 775.9000000000004], [1.70758964E12, 3142.0], [1.70758949E12, 1981.0], [1.70758966E12, 1893.199999999997], [1.70758951E12, 531.8000000000002], [1.7075896E12, 2603.0999999999985], [1.70758962E12, 2784.8499999999995], [1.70758956E12, 1269.0999999999997], [1.70758958E12, 1346.7499999999993], [1.70758952E12, 661.7999999999989], [1.70758954E12, 724.1999999999998], [1.70758965E12, 2701.75], [1.7075895E12, 488.29999999999995], [1.70758967E12, 1699.75], [1.70758961E12, 3208.6], [1.70758963E12, 2578.0999999999985]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.70758967E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 80.0, "minX": 1.0, "maxY": 2002.0, "series": [{"data": [[2.0, 297.0], [32.0, 145.0], [33.0, 236.5], [35.0, 151.0], [34.0, 190.5], [39.0, 165.0], [45.0, 232.0], [3.0, 144.0], [4.0, 184.0], [5.0, 80.0], [6.0, 85.0], [7.0, 90.0], [8.0, 372.5], [9.0, 126.5], [10.0, 140.5], [11.0, 191.0], [12.0, 98.0], [13.0, 346.5], [14.0, 167.0], [15.0, 339.0], [1.0, 2002.0], [16.0, 195.5], [17.0, 194.0], [18.0, 401.0], [19.0, 279.0], [20.0, 324.5], [21.0, 274.0], [22.0, 251.5], [23.0, 332.0], [24.0, 262.0], [25.0, 339.0], [26.0, 245.0], [27.0, 337.0], [28.0, 287.0], [29.0, 283.0], [30.0, 153.5], [31.0, 131.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 45.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 36.0, "minX": 1.0, "maxY": 1114.0, "series": [{"data": [[2.0, 103.5], [32.0, 60.5], [33.0, 83.5], [35.0, 53.0], [34.0, 81.5], [39.0, 73.0], [45.0, 95.0], [3.0, 45.0], [4.0, 70.0], [5.0, 36.0], [6.0, 41.0], [7.0, 45.0], [8.0, 89.5], [9.0, 44.0], [10.0, 53.5], [11.0, 57.5], [12.0, 45.0], [13.0, 104.0], [14.0, 71.0], [15.0, 118.5], [1.0, 1114.0], [16.0, 88.0], [17.0, 72.0], [18.0, 135.0], [19.0, 102.0], [20.0, 98.5], [21.0, 102.0], [22.0, 109.5], [23.0, 117.0], [24.0, 95.0], [25.0, 117.0], [26.0, 85.5], [27.0, 119.0], [28.0, 116.5], [29.0, 107.5], [30.0, 58.0], [31.0, 74.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 45.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.1, "minX": 1.70758949E12, "maxY": 22.1, "series": [{"data": [[1.70758957E12, 19.6], [1.70758959E12, 17.5], [1.70758953E12, 15.7], [1.70758955E12, 18.5], [1.70758964E12, 21.9], [1.70758949E12, 1.1], [1.70758966E12, 18.6], [1.70758951E12, 8.6], [1.7075896E12, 22.1], [1.70758962E12, 21.2], [1.70758956E12, 21.7], [1.70758958E12, 20.7], [1.70758952E12, 10.0], [1.70758954E12, 18.5], [1.70758965E12, 20.3], [1.7075895E12, 7.8], [1.70758967E12, 5.0], [1.70758961E12, 21.1], [1.70758963E12, 20.1]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.70758967E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.70758949E12, "maxY": 22.1, "series": [{"data": [[1.70758957E12, 19.6], [1.70758959E12, 16.4], [1.70758953E12, 15.4], [1.70758955E12, 18.1], [1.70758964E12, 21.9], [1.70758949E12, 1.0], [1.70758966E12, 19.7], [1.70758951E12, 8.5], [1.7075896E12, 22.1], [1.70758962E12, 21.2], [1.70758956E12, 21.7], [1.70758958E12, 21.0], [1.70758952E12, 10.1], [1.70758954E12, 18.5], [1.70758965E12, 20.4], [1.7075895E12, 7.8], [1.70758967E12, 5.4], [1.70758961E12, 21.1], [1.70758963E12, 20.1]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.70758967E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.70758949E12, "maxY": 22.1, "series": [{"data": [[1.70758959E12, 8.1], [1.70758964E12, 21.9], [1.70758965E12, 20.4], [1.70758966E12, 19.7], [1.70758967E12, 5.4], [1.7075896E12, 22.1], [1.70758961E12, 21.1], [1.70758962E12, 21.2], [1.70758963E12, 20.1]], "isOverall": false, "label": "16-success", "isController": false}, {"data": [[1.70758949E12, 1.0], [1.7075895E12, 7.8], [1.70758951E12, 1.2]], "isOverall": false, "label": "1-success", "isController": false}, {"data": [[1.70758953E12, 12.8], [1.70758954E12, 18.5], [1.70758955E12, 8.7]], "isOverall": false, "label": "4-success", "isController": false}, {"data": [[1.70758956E12, 21.7], [1.70758957E12, 19.6], [1.70758958E12, 21.0], [1.70758959E12, 8.3], [1.70758955E12, 9.4]], "isOverall": false, "label": "8-success", "isController": false}, {"data": [[1.70758952E12, 10.1], [1.70758953E12, 2.6], [1.70758951E12, 7.3]], "isOverall": false, "label": "2-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.70758967E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.70758949E12, "maxY": 22.1, "series": [{"data": [[1.70758957E12, 19.6], [1.70758959E12, 16.4], [1.70758953E12, 15.4], [1.70758955E12, 18.1], [1.70758964E12, 21.9], [1.70758949E12, 1.0], [1.70758966E12, 19.7], [1.70758951E12, 8.5], [1.7075896E12, 22.1], [1.70758962E12, 21.2], [1.70758956E12, 21.7], [1.70758958E12, 21.0], [1.70758952E12, 10.1], [1.70758954E12, 18.5], [1.70758965E12, 20.4], [1.7075895E12, 7.8], [1.70758967E12, 5.4], [1.70758961E12, 21.1], [1.70758963E12, 20.1]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.70758967E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

